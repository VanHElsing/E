
ANALYSIS/can_clausestats.c,291
ClauseStats_p ClauseStatsCopy(61,1826
void ClauseStatsParseInto(88,2568
ClauseStats_p ClauseStatsParse(126,3658
void ClauseStatsPrint(146,4090
void ClauseStatsPrintNormalized(172,4689
long ClauseSetInfoParse(236,6405
long ClauseSetInfoPrint(270,7252
void ClauseStatTreeFree(305,8043

ANALYSIS/can_clausestore.c,327
long dummy;32,826
void CompClauseFree(63,1834
void CompClauseAddTerms(86,2354
void CompClauseRemoveTerms(121,3289
CompClause_p PackClause(146,3968
Clause_p UnpackClause(176,4692
CompClause_p CompactifyClause(206,5402
Clause_p UnCompactifyClause(227,5854
void CompClausePrint(248,6357
void CompClausePCLPrint(271,6908

ANALYSIS/can_treeanalyze.c,330
static long select_examples_from_proof(56,1648
static long select_examples_from_non_proof(120,3103
long ProofMarkProofClauses(162,4175
void ProofSetClauseStatistics(223,5562
void ProofComputeParentNumbers(257,6523
void ProofComputeDistance(325,8425
long ProofDistanceDistrib(374,9683
long InfStateSelectExamples(416,10893

BASICS/clb_ddarrays.c,181
DDArray_p DDArrayAlloc(61,1907
void DDArrayFree(91,2573
void DDArayEnlarge(113,3041
void DDArrayDebugPrint(142,3763
void DDArrayAdd(171,4406
double DDArraySelectPart(201,5077

BASICS/clb_dstacks.c,252
static void push(57,1788
DStack_p DStackAlloc(94,2815
void DStackFree(119,3321
void DStackReset(141,3776
void DStackPush(158,4115
double DStackPop(175,4470
double DStackTop(196,4888
double DStackBelowTop(217,5322
double DStackElement(237,5718

BASICS/clb_dstrings.c,484
char NullStr[NullStr30,808
DStr_p DStrAlloc(60,1804
void DStrFree(85,2335
char* DStrAppendStr(114,2847
char* DStrAppendChar(161,4013
char* DStrAppendBuffer(190,4711
char* DStrAppendInt(219,5268
char* DStrAppendStrArray(240,5742
char DStrDeleteLastChar(271,6383
char* DStrView(303,7208
char* DStrAddress(328,7697
char* DStrCopy(352,8211
char* DStrCopyCore(386,9087
char* DStrSet(414,9654
long  DStrLen(438,10123
void  DStrReset(459,10568
void  DStrMinimize(483,11010

BASICS/clb_error.c,519
char ErrStr[ErrStr35,905
int TmpErrno;39,991
char* ProgName 43,1037
char* EmptyString 49,1208
#define E_SC_PAGE_SIZE 70,2005
#define E_SC_PAGE_SIZE 72,2070
long GetSystemPageSize(88,2452
#define MEM_PHRASE 119,3108
long GetSystemPhysMemory(121,3157
void InitError(199,5076
VOLATILE void Error(218,5489
VOLATILE void SysError(244,6153
void Warning(270,6686
void SysWarning(295,7328
double GetTotalCPUTime(323,7956
void PrintRusage(350,8518
void StrideMemory(405,10280
bool CheckLetterString(439,11020

BASICS/clb_fixdarrays.c,142
FixedDArray_p FixedDArrayAlloc(60,1779
void FixedDArrayFree(83,2275
FixedDArray_p FixedDArrayCopy(105,2736
void FixedDArrayPrint(137,3347

BASICS/clb_floattrees.c,328
static FloatTree_p splay_tree(57,1633
FloatTree_p FloatTreeCellAllocEmpty(154,3786
void FloatTreeFree(177,4359
FloatTree_p FloatTreeInsert(217,5241
bool FloatTreeStore(264,6232
FloatTree_p FloatTreeFind(298,6923
FloatTree_p FloatTreeExtractEntry(327,7578
bool FloatTreeDeleteEntry(368,8417
long FloatTreeNodes(394,8921

BASICS/clb_intmap.c,469
static bool switch_to_array(57,1635
static bool switch_to_tree(83,2237
static NumTree_p add_new_tree_node(109,2916
static void array_to_tree(138,3581
static void tree_to_array(183,4661
IntMap_p IntMapAlloc(232,6043
void IntMapFree(254,6477
void* IntMapGetVal(289,7181
void** IntMapGetRef(345,8424
void IntMapAssign(459,11786
void* IntMapDelKey(486,12388
IntMapIter_p IntMapIterAlloc(569,14708
void IntMapIterFree(617,15932
void IntMapDebugPrint(654,16678

BASICS/clb_memory.c,673
bool MemIsLow 43,1461
Mem_p free_mem_list[free_mem_list45,1485
long size_malloc_mem 48,1555
long size_malloc_count 49,1581
long size_free_mem 50,1609
long size_free_count 51,1633
long clb_free_count 52,1659
long secure_malloc_count 53,1684
long secure_malloc_mem 54,1714
long secure_realloc_count 55,1742
long secure_realloc_m_count 56,1773
long secure_realloc_f_count 57,1806
static long free_list_size(80,2386
void MemFlushFreeList(114,3252
void* SecureMalloc(148,4151
void* SecureRealloc(199,5393
char* SecureStrdup(260,6750
char* SecureStrndup(284,7353
long* IntArrayAlloc(323,8046
void MemDebugPrintStats(355,8639
void MemFreeListPrint(397,10092

BASICS/clb_newmem.c,662
bool MemIsLow 39,1404
Mem_p free_mem_list[free_mem_list42,1429
long size_malloc_mem 45,1499
long size_malloc_count 46,1525
long size_free_mem 47,1553
long size_free_count 48,1577
long clb_free_count 49,1603
long secure_malloc_count 50,1628
long secure_malloc_mem 51,1658
long secure_realloc_count 52,1686
long secure_realloc_m_count 53,1717
long secure_realloc_f_count 54,1750
void MemFlushFreeList(78,2512
void* SecureMalloc(98,3145
void* SecureRealloc(142,4222
void* SizeMallocReal(190,5409
void SizeFreeReal(253,7053
void MemAddNewChunk(298,8232
char* SecureStrdup(332,9065
long* IntArrayAlloc(355,9555
void MemDebugPrintStats(387,10148

BASICS/clb_numtrees.c,496
static long numtree_print(58,1736
static NumTree_p splay_tree(112,3072
NumTree_p NumTreeCellAllocEmpty(209,5239
void NumTreeFree(232,5800
NumTree_p NumTreeInsert(272,6682
bool NumTreeStore(319,7711
long NumTreeDebugPrint(350,8370
NumTree_p NumTreeFind(372,8902
NumTree_p NumTreeExtractEntry(401,9547
NumTree_p NumTreeExtractRoot(443,10386
bool NumTreeDeleteEntry(465,10863
long NumTreeNodes(491,11351
NumTree_p NumTreeMaxNode(527,12066
PStack_p NumTreeLimitedTraverseInit(553,12584

BASICS/clb_numxtrees.c,442
static NumXTree_p splay_tree(55,1649
NumXTree_p NumXTreeCellAllocEmpty(152,3822
void NumXTreeFree(179,4419
NumXTree_p NumXTreeInsert(219,5305
bool NumXTreeStore(266,6373
NumXTree_p NumXTreeFind(299,7072
NumXTree_p NumXTreeExtractEntry(328,7721
NumXTree_p NumXTreeExtractRoot(370,8566
bool NumXTreeDeleteEntry(392,9049
long NumXTreeNodes(418,9543
NumXTree_p NumXTreeMaxNode(454,10261
PStack_p NumXTreeLimitedTraverseInit(480,10783

BASICS/clb_objtrees.c,420
static PObjTree_p splay_tree(54,1585
PObjTree_p PTreeObjInsert(151,3469
void* PTreeObjStore(202,4566
PObjTree_p PTreeObjFind(233,5230
void* PTreeObjFindObj(260,5804
PObjTree_p PTreeObjFindBinary(287,6409
PObjTree_p PTreeObjExtractEntry(328,7208
void* PTreeObjExtractObject(371,8130
void* PTreeObjExtractRootObject(399,8796
void PTreeObjMerge(423,9345
void PObjTreeFree(459,10155
long PObjTreeNodes(483,10656

BASICS/clb_os_wrapper.c,284
RLimResult SetSoftRlimit(66,1981
void SetSoftRlimitErr(103,2837
void SetMemoryLimit(150,3884
rlim_t GetSoftRlimit(175,4437
void IncreaseMaxStackSize(203,5076
long long GetUSecTime(237,5856
long long GetUSecClock(258,6278
FILE* SecureFOpen(278,6689
void SecureFClose(304,7180

BASICS/clb_partial_orderings.c,46
char* POCompareSymbol[POCompareSymbol32,853

BASICS/clb_pdarrays.c,446
PDArray_p PDArrayAlloc(61,1873
PDArray_p PDIntArrayAlloc(93,2671
void PDArrayFree(125,3373
void PDArrayEnlarge(147,3844
PDArray_p PDArrayCopy(195,4942
void PDArrayElementDeleteP(221,5513
void PDArrayElementDeleteInt(242,5996
long PDArrayMembers(263,6426
long PDArrayFirstUnused(293,6971
long PDArrayStore(324,7594
long PDArrayStoreP(349,8120
long PDArrayStoreInt(372,8600
void PDArrayAdd(395,9116
long PDArrayElementIncInt(420,9685

BASICS/clb_pdrangearrays.c,457
static long range_arr_size(57,1603
static void range_arr_expand_down(89,2284
static void range_arr_expand_up(135,3465
PDRangeArr_p PDRangeArrAlloc(185,4827
PDRangeArr_p PDIntRangeArrAlloc(218,5639
void PDRangeArrFree(251,6359
void PDRangeArrEnlarge(273,6845
PDRangeArr_p PDRangeArrCopy(301,7551
void PDRangeArrElementDeleteP(326,8183
void PDRangeArrElementDeleteInt(347,8697
long PDRangeArrMembers(368,9158
long PDRangeArrElementIncInt(398,9721

BASICS/clb_plist.c,219
PList_p PListAlloc(60,1750
void PListFree(82,2150
void PListInsert(104,2564
void PListStore(125,3010
void PListStoreP(146,3420
void PListStoreInt(167,3804
PList_p PListExtract(188,4192
void PListDelete(215,4788

BASICS/clb_pqueue.c,149
void PQueueGrow(59,1768
long PQueueCardinality(94,2555
IntOrP PQueueElement(123,3143
long PQueueTailIndex(142,3562
long PQueueIncIndex(164,4058

BASICS/clb_pstacks.c,182
IntOrP* PStackTopAddr(60,1811
double PStackComputeAverage(83,2327
void PStackSort(135,3272
void PStackMerge(152,3703
void PStackPushStack(200,4705
void PStackPrintInt(224,5209

BASICS/clb_ptrees.c,672
static PTree_p splay_ptree(54,1559
PTree_p PTreeCellAllocEmpty(152,3474
void PTreeFree(174,3963
PTree_p PTreeInsert(214,4783
bool PTreeStore(262,5784
PTree_p PTreeFind(292,6380
PTree_p PTreeFindBinary(319,6945
PTree_p PTreeExtractEntry(359,7695
void* PTreeExtractKey(401,8532
void* PTreeExtractRootKey(428,9128
bool PTreeDeleteEntry(450,9645
bool PTreeMerge(478,10246
void PTreeInsertTree(521,11024
long PTreeNodes(553,11645
long PTreeDebugPrint(589,12323
long PStackToPTree(632,13201
long PTreeToPStack(661,13795
void* PTreeSharedElement(701,14746
PTree_p PTreeIntersection(741,15547
long PTreeDestrIntersection(779,16405
PTree_p PTreeCopy(815,17061

BASICS/clb_quadtrees.c,294
static QuadTree_p splay_tree(55,1638
int DoubleKeyCmp(148,3345
int QuadKeyCmp(174,3775
void QuadTreeFree(201,4383
QuadTree_p QuadTreeInsert(241,5215
bool QuadTreeStore(291,6273
QuadTree_p QuadTreeFind(325,7045
QuadTree_p QuadTreeExtractEntry(355,7709
bool QuadTreeDeleteEntry(397,8592

BASICS/clb_regmem.c,180
static PTree_p reg_mem_tree 37,1160
void* RegMemAlloc(66,2169
void* RegMemRealloc(88,2598
void  RegMemFree(112,3090
void* RegMemProvide(136,3811
void  RegMemCleanUp(169,4479

BASICS/clb_simple_stuff.c,202
int WeightedObjectCompareFun(60,1790
int StringIndex(88,2379
#define LOG_2 115,2830
double Log2(117,2875
long Log2Ceil(134,3226
double sqrt(168,3855
double pow(207,4550
char* IndentStr(235,5044

BASICS/clb_stringtrees.c,279
static StrTree_p splay_tree(58,1768
StrTree_p StrTreeCellAllocEmpty(154,3923
void StrTreeFree(177,4487
StrTree_p StrTreeInsert(204,5068
StrTree_p StrTreeStore(251,6121
StrTree_p StrTreeFind(285,6841
StrTree_p StrTreeExtractEntry(314,7499
bool StrTreeDeleteEntry(355,8338

BASICS/clb_sysdate.c,27
void SysDatePrint(62,1800

BASICS/clb_verbose.c,20
int Verbose 32,821

CLAUSES/ccl_axiomsorter.c,116
WAxiom_p WAxiomAlloc(61,1798
void WAxiomAddRelEval(95,2544
int WAxiomCmp(149,3677
int WAxiomCmpWrapper(182,4277

CLAUSES/ccl_clausecpos.c,207
CompactPos PackTermPos(61,1774
CompactPos PackClausePos(101,2535
void UnpackTermPos(139,3288
void UnpackClausePosInto(180,4162
ClausePos_p UnpackClausePos(228,5190
Term_p ClauseCPosGetSubterm(251,5772

CLAUSES/ccl_clausefunc.c,501
static int clause_canon_compare(55,1627
static int clause_canon_compare_wrapper(75,2075
void ClauseRemoveLiteralRef(102,2898
void ClauseRemoveLiteral(137,3703
void ClauseFlipLiteralSign(162,4260
void ClauseKillChildren(190,4827
int ClauseRemoveSuperfluousLiterals(222,5652
long ClauseSetRemoveSuperfluousLiterals(278,6862
void ClauseSetCanonize(306,7515
int ClauseRemoveACResolved(334,8176
bool ClauseUnitSimplifyTest(374,9174
void ClauseArchive(420,10249
void ClauseSetArchive(452,11132

CLAUSES/ccl_clauseinfo.c,105
ClauseInfo_p ClauseInfoAlloc(66,2085
void ClauseInfoFree(102,2977
void ClauseSourceInfoPrint(132,3548

CLAUSES/ccl_clausepos.c,337
void ClausePosPrint(62,1770
Eqn_p ClausePosFindPosLiteral(93,2485
Eqn_p ClausePosFindMaxLiteral(123,3167
Term_p ClausePosFindFirstMaximalSide(153,3874
Term_p ClausePosFindNextMaximalSide(182,4592
Term_p ClausePosFindFirstMaximalSubterm(224,5544
Term_p ClausePosFindNextMaximalSubterm(255,6152
bool TermComputeRWSequence(289,6977

CLAUSES/ccl_clausepos_tree.c,377
static void clause_tpos_free_wrapper(54,1610
ClauseTPos_p ClauseTPosAlloc(77,2221
void ClauseTPosFree(101,2734
void ClauseTPosTreeFree(120,3122
int CmpClauseTPosCells(139,3529
void ClauseTPosTreeFreeWrapper(161,4080
void ClauseTPosTreeInsertPos(179,4472
void ClauseTPosTreeDeletePos(210,5238
void ClauseTPosTreeDeleteClause(244,6128
void ClauseTPosTreePrint(270,6732

CLAUSES/ccl_clauses.c,2666
bool   ClausesHaveLocalVariables 37,923
bool   ClausesHaveDisjointVariables 44,1170
static long global_clause_counter 49,1298
long ClauseIdentCounter 54,1435
static long clause_perm_ident_counter 58,1547
static bool foundEqLitLater(87,2646
static bool term_query_var_prop(118,3352
Clause_p clause_copy_meta(167,4302
void TSTPSkipSource(210,5540
void ClauseSetTPTPType(231,5980
Clause_p ClauseCellAlloc(251,6474
Clause_p EmptyClauseAlloc(276,7001
Clause_p ClauseAlloc(317,8102
void ClauseRecomputeLitCounts(363,9084
bool ClauseHasMaxPosEqLit(400,9758
Clause_p ClauseSortLiterals(430,10415
Clause_p ClauseCanonize(473,11607
bool ClauseIsSorted(500,12178
int ClauseStructWeightCompareWrapper(539,12985
int ClauseStructWeightCompare(566,13831
int ClauseStructWeightLexCompare(636,15226
bool ClauseIsACRedundant(674,16180
void ClauseFree(701,16838
bool ClauseIsSemFalse(728,17417
bool ClauseIsSemEmpty(755,17960
bool ClauseIsRangeRestricted(788,18714
bool ClauseIsAntiRangeRestricted(851,20235
bool ClauseIsTPTPRangeRestricted(915,21838
bool ClauseIsStronglyRangeRestricted(976,23354
EqnSide ClauseIsEqDefinition(1053,25018
Clause_p ClauseCopy(1081,25764
Clause_p ClauseFlatCopy(1104,26287
Clause_p ClauseCopyOpt(1126,26803
Clause_p ClauseCopyDisjoint(1147,27279
Clause_p ClauseSkolemize(1169,27741
void ClausePrintList(1201,28450
void ClausePrintAxiom(1221,29032
void ClausePrintRule(1272,30145
void ClausePrintGoal(1304,30876
void ClausePrintQuery(1325,31426
void ClausePrintTPTPFormat(1346,31937
void ClausePrintLOPFormat(1398,33107
void ClausePrint(1425,33778
void ClausePCLPrint(1470,34682
void ClauseTSTPCorePrint(1518,35916
void ClauseTSTPPrint(1546,36550
bool ClauseStartsMaybe(1610,38018
ClauseProperties ClauseTypeParse(1638,38623
Clause_p ClauseParse(1695,39794
Clause_p ClausePCLParse(1849,44133
void ClauseMarkMaximalTerms(1885,44977
bool ClauseParentsAreSubset(1906,45484
void ClauseDetachParents(1951,46362
void ClauseRegisterChild(1983,47094
void ClauseAddEvalCell(2003,47656
void ClauseRemoveEvaluations(2022,48122
double ClauseWeight(2041,48593
double ClauseFunWeight(2072,49441
double ClauseNonLinearWeight(2107,50431
double ClauseSymTypeWeight(2142,51355
double ClauseStandardWeight(2174,52210
double ClauseOrientWeight(2199,52798
bool ClauseNotGreaterEqual(2244,54006
int ClauseCompareFun(2324,55940
int ClauseCmpById(2368,56866
int ClauseCmpByPermId(2398,57492
int ClauseCmpByPermIdR(2426,58125
int ClauseCmpByStructWeight(2455,58733
int ClauseCmpByPtr(2476,59287
Clause_p ClauseNormalizeVars(2497,59781
long ClauseCollectSubterms(2537,60761
long ClauseReturnFCodes(2569,61518

CLAUSES/ccl_clausesets.c,2572
static void print_var_pattern(54,1574
static void eq_func_axiom_print(91,2309
static void eq_pred_axiom_print(137,3407
static void tptp_eq_func_axiom_print(178,4360
static void tptp_eq_pred_axiom_print(224,5533
static void clause_set_extract_entry(269,6639
ClauseSet_p ClauseSetAlloc(323,8045
void ClauseSetFreeClauses(358,8851
void ClauseSetFree(384,9333
long ClauseSetStackCardinality(418,10013
void ClauseSetGCMarkTerms(446,10589
void ClauseSetInsert(469,11098
long ClauseSetInsertSet(515,12215
void ClauseSetPDTIndexedInsert(542,12781
void ClauseSetIndexedInsert(583,13841
void ClauseSetIndexedInsertClause(614,14547
Clause_p ClauseSetExtractEntry(634,15083
Clause_p ClauseSetExtractFirst(680,16215
void ClauseSetDeleteEntry(708,16783
Clause_p ClauseSetFindBest(729,17250
void ClauseSetPrint(764,18004
void ClauseSetTSTPPrint(789,18584
void ClauseSetPrintPrefix(814,19205
void ClauseSetSort(846,19996
void ClauseSetSetProp(883,20829
void ClauseSetDelProp(907,21327
long ClauseSetMarkCopies(934,22024
long ClauseSetDeleteMarkedEntries(976,22913
long ClauseSetDeleteCopies(1015,23760
long ClauseSetDeleteNonUnits(1044,24328
long ClauseSetGetTermNodes(1081,25132
long ClauseSetMarkSOS(1107,25713
void ClauseSetTermSetProp(1142,26481
long ClauseSetTBTermPropDelCount(1165,27045
long ClauseSetGetSharedTermNodes(1190,27655
long ClauseSetParseList(1215,28250
void ClauseSetMarkMaximalTerms(1244,28876
void ClauseSetSortLiterals(1268,29388
SysDate ClauseSetListGetMaxDate(1293,29989
Clause_p ClauseSetFind(1321,30669
Clause_p ClauseSetFindById(1355,31340
void ClauseSetRemoveEvaluations(1387,31992
long ClauseSetFilterTrivial(1417,32710
long ClauseSetFilterTautologies(1457,33516
Clause_p ClauseSetFindMaxStandardWeight(1496,34371
ClausePos_p ClauseSetFindEqDefinition(1532,35179
void ClauseSetDocInital(1580,36215
void ClauseSetPropDocQuote(1609,36844
bool ClauseSetVerifyDemod(1642,37615
bool PDTreeVerifyIndex(1676,38326
void EqAxiomsPrint(1758,40234
void ClauseSetAddSymbolDistribution(1832,41993
void ClauseSetAddConjSymbolDistribution(1856,42571
void ClauseSetComputeFunctionRanks(1884,43230
FunCode ClauseSetFindFreqSymbol(1910,43882
long ClauseSetMaxVarNumber(1955,44968
long ClauseSetFindCharFreqVectors(1986,45704
PermVector_p PermVectorCompute(2027,46823
long ClauseSetFVIndexify(2081,48212
long ClauseSetNewTerms(2116,49000
long ClauseSetSplitConjectures(2154,49888
long long ClauseSetStandardWeight(2189,50675
void ClauseSetDerivationStackStatistics(2218,51280
long ClauseSetPushClauses(2260,52362

CLAUSES/ccl_condensation.c,120
long CondensationAttempts 30,758
long CondensationSuccesses 31,789
bool CondenseOnce(63,1879
bool Condense(126,3606

CLAUSES/ccl_context_sr.c,90
int ClauseContextualSimplifyReflect(61,1882
long ClauseSetFindContextSRClauses(119,3442

CLAUSES/ccl_def_handling.c,201
DefStore_p DefStoreAlloc(64,2060
void DefStoreFree(91,2714
Eqn_p GenDefLit(112,3183
Clause_p GetClauseDefinition(166,4577
WFormula_p GetFormulaDefinition(199,5416
FunCode GetDefinitions(250,6906

CLAUSES/ccl_derivation.c,912
ProofObjectType BuildProofObject 32,840
char *opids[opids34,880
char *optheory optheory70,1334
char *opstatus opstatus107,1862
static void derived_free_wrapper(167,3022
int derived_compare(185,3411
PStack_p derived_get_derivation(210,4056
void ClausePushDerivation(243,4925
void ClausePushACResDerivation(282,5965
void WFormulaPushDerivation(309,6720
long DerivStackExtractParents(353,7908
Derived_p DerivedAlloc(434,9812
long get_clauseform_id(461,10321
void DerivationStackPCLPrint(521,11609
void DerivationStackTSTPPrint(631,14413
void DerivedPCLPrint(753,17682
void DerivedTSTPPrint(818,19498
Derivation_p DerivationAlloc(885,21150
void DerivationFree(910,21729
Derived_p DerivationGetDerived(935,22349
long DerivationExtract(976,23275
long DerivationTopoSort(1057,25554
void DerivationRenumber(1155,28213
Derivation_p DerivationCompute(1191,29037
void DerivationPrint(1225,29850

CLAUSES/ccl_eqn.c,2488
bool EqnUseInfix 35,920
bool EqnFullEquationalRep 36,945
IOFormat OutputFormat 37,980
static CompareResult compare_pos_eqns(113,3702
static CompareResult compare_poseqn_negeqn(180,6146
#define BOOL_TERM_NORMALIZE(244,8094
static bool eqn_parse_infix(266,8637
static bool eqn_parse_prefix(347,11017
static bool eqn_parse_mixfix(403,12343
bool eqn_parse_real(427,12959
Eqn_p EqnAlloc(505,14993
void EqnFree(566,16629
Eqn_p EqnParse(591,17319
Eqn_p EqnFOFParse(618,17873
Term_p EqnTermsTBTermEncode(645,18528
Eqn_p EqnTBTermDecode(689,19529
Term_p EqnTBTermParse(719,20232
void EqnPrint(749,20953
void EqnFOFPrint(853,23143
void EqnTSTPPrint(929,24736
void EqnSwapSidesSimple(970,25769
void EqnSwapSides(993,26249
Eqn_p EqnCopy(1018,26925
Eqn_p EqnFlatCopy(1050,27668
Eqn_p EqnCopyRepl(1082,28364
Eqn_p EqnCopyOpt(1113,29234
Eqn_p EqnCopyDisjoint(1145,30029
bool EqnIsACTrivial(1177,30761
bool EqnTermsAreDistinct(1196,31209
bool EqnIsTrue(1224,32008
bool EqnIsFalse(1246,32458
bool EqnHasUnboundVars(1271,32938
EqnSide EqnIsDefinition(1305,33812
int EqnSubsumeQOrderCompare(1342,34807
int EqnSubsumeInverseCompareRef(1379,35627
int EqnSubsumeInverseRefinedCompareRef(1404,36272
int EqnSubsumeCompare(1448,37330
Eqn_p EqnCanonize(1471,37972
int EqnStructWeightCompare(1505,38743
int EqnCanonCompare(1553,39686
int EqnStructWeightLexCompare(1574,40152
bool EqnEqualDirected(1606,40868
bool EqnEqual(1632,41467
bool EqnSubsumeDirected(1663,42279
bool EqnSubsume(1701,43227
bool EqnSubsumeP(1735,44043
bool LiteralSubsumeP(1760,44614
bool EqnUnifyDirected(1787,45315
bool EqnUnify(1823,46152
bool  EqnUnifyP(1851,46778
bool LiteralUnifyOneWay(1876,47405
bool EqnOrient(1921,48336
CompareResult EqnCompare(1988,49774
bool EqnGreater(2009,50218
CompareResult LiteralCompare(2051,51349
bool LiteralGreater(2120,52821
FunCode SubstNormEqn(2143,53392
double EqnWeight(2167,53936
double EqnFunWeight(2200,54645
double EqnNonLinearWeight(2237,55681
double  EqnSymTypeWeight(2270,56467
double EqnMaxWeight(2304,57312
double EqnCorrectedWeight(2327,57974
double EqnCorrectedNonLinearWeight(2369,58957
long EqnMaxTermPositions(2413,59918
long EqnInferencePositions(2438,60469
double  LiteralWeight(2466,61237
double  LiteralFunWeight(2504,62123
double  LiteralNonLinearWeight(2547,63368
double LiteralSymTypeWeight(2590,64521
int LiteralCompareFun(2627,65317
void EqnAddSymbolFeatures(2663,66058
long EqnCollectSubterms(2686,66795

CLAUSES/ccl_eqnlist.c,1942
EqnRef eqn_list_find_last(55,1601
void EqnListFree(81,2224
void EqnListGCMarkTerms(106,2676
int EqnListSetProp(129,3128
int EqnListDelProp(156,3641
int EqnListFlipProp(183,4155
int EqnListQueryPropNumber(209,4635
int EqnListLength(238,5127
Eqn_p EqnListFromArray(262,5537
PStack_p EqnListToStack(292,6151
Eqn_p EqnListExtractElement(318,6667
Eqn_p EqnListExtractByProps(342,7179
void EqnListDeleteElement(374,7855
void EqnListInsertElement(396,8303
Eqn_p EqnListAppend(415,8686
Eqn_p EqnListFlatCopy(440,9195
Eqn_p EqnListCopy(470,9835
Eqn_p EqnListCopyExcept(501,10535
Eqn_p EqnListCopyOpt(534,11233
Eqn_p EqnListCopyOptExcept(565,11897
Eqn_p EqnListCopyDisjoint(598,12557
Eqn_p EqnListCopyRepl(630,13230
Eqn_p EqnListNegateEqns(661,13845
int EqnListRemoveDuplicates(688,14419
int EqnListRemoveResolved(726,15129
int EqnListRemoveACResolved(758,15712
int EqnListRemoveSimpleAnswers(791,16318
Eqn_p EqnListFindNegPureVarLit(825,16944
Eqn_p EqnListFindTrue(852,17456
bool EqnListIsTrivial(879,17982
bool EqnListIsACTrivial(918,18707
bool EqnListIsGround(944,19211
bool EqnListIsEquational(973,19718
bool EqnListIsPureEquational(999,20201
int EqnListOrient(1026,20758
int EqnListMaximalLiterals(1057,21415
bool EqnListEqnIsMaximal(1111,22756
bool EqnListEqnIsStrictlyMaximal(1153,23763
void EqnListDeleteTermProperties(1194,24682
void EqnListPrint(1220,25378
void EqnListTSTPPrint(1250,26021
Eqn_p EqnListParse(1280,26666
FunCode NormSubstEqnListExcept(1322,27785
long EqnListDepth(1352,28424
void EqnListAddSymbolDistribution(1382,29112
void EqnListAddSymbolDistExist(1407,29797
void EqnListAddSymbolFeatures(1429,30299
void EqnListComputeFunctionRanks(1452,30817
long EqnListCollectVariables(1475,31358
long EqnListAddFunOccs(1502,31945
void EqnListTermSetProp(1530,32513
long EqnListTBTermDelPropCount(1553,33014
long EqnListTermDelProp(1579,33570
long EqnListCollectSubterms(1606,34228

CLAUSES/ccl_eqnresolution.c,156
bool EqResOnMaximalLiteralsOnly 32,835
Clause_p ComputeEqRes(62,1908
Eqn_p ClausePosFirstEqResLiteral(103,3046
Eqn_p ClausePosNextEqResLiteral(134,3766

CLAUSES/ccl_f_generality.c,742
static void init_fun_gen_cell(54,1594
static void gd_merge_single_res(74,2026
static int fun_gen_tg_cmp_wrapper(104,2758
static int fun_gen_cg_cmp_wrapper(125,3274
static long extract_generality(147,3805
static void compute_d_rel(180,4506
GenDistrib_p GenDistribAlloc(271,7285
void GenDistribFree(303,8086
void GenDistribSizeAdjust(324,8588
void GenDistribAddClause(358,9425
void GenDistribAddClauseSet(390,10212
void GenDistribAddFormula(417,10811
void GenDistribAddFormulaSet(448,11611
void GenDistribAddClauseSetStack(475,12229
void GenDistribAddFormulaSetStack(502,12930
void GenDistPrint(528,13543
int FunGenTGCmp(557,14294
int FunGenCGCmp(589,14929
void ClauseComputeDRel(620,15504
void FormulaComputeDRel(658,16648

CLAUSES/ccl_factor.c,381
Eqn_p find_next_potential_eq_factor_partner(59,1735
Eqn_p find_first_eq_factor_partner(87,2495
Clause_p ComputeOrderedFactor(125,3636
Eqn_p ClausePosFirstOrderedFactorLiterals(184,5309
Eqn_p ClausePosNextOrderedFactorLiterals(224,6415
Clause_p ComputeEqualityFactor(269,7532
Eqn_p ClausePosFirstEqualityFactorSides(330,9630
Eqn_p ClausePosNextEqualityFactorSides(365,10437

CLAUSES/ccl_fcvindexing.c,476
FVIndexParmsCell FVIDefaultParameters 34,849
static FVIndex_p insert_empty_node(104,2230
void FVIndexParmsInit(143,3281
FVIndexParms_p FVIndexParmsAlloc(160,3680
FVIndex_p FVIndexAlloc(182,4131
void FVIndexFree(208,4705
FVIAnchor_p FVIAnchorAlloc(247,5523
void FVIAnchorFree(273,6077
FVIndex_p FVIndexGetNextNonEmptyNode(305,6865
void FVIndexInsert(333,7446
bool FVIndexDelete(384,8776
long FVIndexCountNodes(428,9907
FVPackedClause_p FVIndexPackClause(479,10961

CLAUSES/ccl_findex.c,454
static void findex_add_instance(55,1569
static void findex_remove_instance(76,2064
FIndex_p FIndexAlloc(103,2746
void FIndexFree(125,3149
void FIndexAddClause(152,3663
void FIndexRemoveClause(180,4271
void FIndexAddClauseSet(210,4893
void FIndexAddPLClause(235,5444
void FIndexRemovePLClause(266,6097
void FIndexAddPLClauseSet(296,6746
void FIndexAddPLFormula(323,7285
void FIndexRemovePLFormula(354,7946
void FIndexAddPLFormulaSet(384,8597

CLAUSES/ccl_formula_wrapper.c,526
long global_formula_counter 32,797
long FormulaDefLimit 33,837
WFormula_p DefaultWFormulaAlloc(63,1931
WFormula_p WTFormulaAlloc(93,2712
void WFormulaFree(117,3241
WFormula_p WFormulaFlatCopy(147,3879
void WFormulaGCMarkCells(172,4449
void WFormulaMarkPolarity(189,4849
WFormula_p WFormulaTPTPParse(206,5238
void WFormulaTPTPPrint(270,6843
WFormula_p WFormulaTSTPParse(324,7948
void WFormulaTSTPPrint(395,10107
WFormula_p WFormulaParse(465,11615
void WFormulaPrint(505,12563
long WFormulaReturnFCodes(537,13330

CLAUSES/ccl_formulafunc.c,740
TFormula_p answer_lit_alloc(59,1725
Clause_p tformula_collect_clause(89,2503
static bool verify_name(151,4187
static void check_all_found(182,4892
bool WFormulaConjectureNegate(247,6688
TFormula_p TFormulaAnnotateQuestion(280,7774
bool WFormulaAnnotateQuestion(327,9128
long FormulaSetPreprocConjectures(367,10525
bool WFormulaSimplify(408,11545
long WFormulaCNF(437,12268
long FormulaSetSimplify(459,12926
long FormulaSetCNF(505,14049
long FormulaAndClauseSetParse(566,15782
long TFormulaToCNF(679,19284
void TFormulaSetDelTermpProp(730,20695
void TFormulaSetFindDefs(757,21388
long TFormulaApplyDefs(792,22481
long TFormulaSetIntroduceDefs(850,24345
void FormulaSetArchive(933,27240
void FormulaSetDocInital(966,28050

CLAUSES/ccl_formulasets.c,532
FormulaSet_p FormulaSetAlloc(61,1784
void FormulaSetFreeFormulas(85,2315
void FormulaSetFree(107,2780
long FormulaSetStackCardinality(130,3287
void FormulaSetGCMarkCells(158,3897
void FormulaSetMarkPolarity(183,4410
void FormulaSetInsert(209,4900
long FormulaSetInsertSet(237,5546
WFormula_p FormulaSetExtractEntry(265,6122
WFormula_p FormulaSetExtractFirst(293,6727
void FormulaSetDeleteEntry(317,7197
void FormulaSetPrint(339,7604
long FormulaSetSplitConjectures(368,8298
long long FormulaSetStandardWeight(404,9093

CLAUSES/ccl_freqvectors.c,889
int tuple3_compare_23lex(56,1712
static void gather_feature_vec(102,2551
PermVector_p PermVectorComputeInternal(172,4532
FreqVector_p FreqVectorAlloc(239,6210
void FreqVectorFreeReal(264,6800
void FreqVectorInitialize(292,7339
void FreqVectorPrint(314,7757
void VarFreqVectorAddVals(351,8523
FreqVector_p VarFreqVectorCompute(445,11071
FreqVector_p OptimizedVarFreqVectorCompute(489,12233
void FVCollectInit(539,13436
FVCollect_p FVCollectAlloc(597,15385
void FVCollectFree(649,17065
FreqVector_p FVCollectFreqVectorCompute(669,17515
FVCollect_p BillFeaturesCollectAlloc(732,19145
FVCollect_p BillPlusFeaturesCollectAlloc(818,21258
FVPackedClause_p FVPackClause(896,23180
Clause_p FVUnpackClause(926,23871
void FVPackedClauseFreeReal(951,24323
void FreqVectorAdd(975,24878
void FreqVectorMulAdd(1004,25582
void FreqVectorMax(1032,26193
void FreqVectorMin(1059,26773

CLAUSES/ccl_g_lithash.c,221
void lit_tree_free(56,1698
int LitDescCompare(99,2722
LitHash_p LitHashAlloc(120,3231
void LitHashFree(151,3922
void LitHashInsertEqn(179,4590
void LitHashInsertClause(222,5619
void LitHashInsertClauseSet(245,6149

CLAUSES/ccl_garbage_coll.c,229
GCAdmin_p GCAdminAlloc(60,1831
void GCAdminFree(87,2363
void GCRegisterFormulaSet(110,2833
void GCRegisterClauseSet(130,3286
void GCDeregisterFormulaSet(150,3750
void GCDeregisterClauseSet(169,4220
long GCCollect(188,4640

CLAUSES/ccl_global_indices.c,264
void GlobalIndicesNull(63,1849
void GlobalIndicesInit(84,2364
void GlobalIndicesFreeIndices(132,3848
void GlobalIndicesReset(169,4719
void GlobalIndicesInsertClause(193,5346
void GlobalIndicesDeleteClause(237,6556
void GlobalIndicesInsertClauseSet(280,7761

CLAUSES/ccl_groundconstr.c,432
LitOccTable_p LitOccTableAlloc(64,1999
void LitOccTableFree(101,2954
bool LitPosGetConstrState(135,3685
void LitPosSetConstrState(158,4249
PTree_p LitPosGetConstraints(182,4879
bool LitPosAddConstraint(207,5560
void LitOccAddLitAlt(237,6209
void LitOccAddClauseAlt(275,6933
void LitOccAddClauseSetAlt(300,7498
long SigCollectConstantTerms(329,8260
void EqnCollectVarConstr(386,9672
void ClauseCollectVarConstr(439,10868

CLAUSES/ccl_grounding.c,1007
long clause_get_max_lit(57,1754
void varsetinstapply(83,2341
void varsetinstclear(112,3114
bool varsetinstinitialize(136,3658
double varinstestimate(166,4272
bool varsetinstnext(193,4862
void ground_set_print_unit(223,5496
int  ClauseCmpByLen(255,6502
bool EqnEqlitRecode(282,7227
bool ClauseEqlitRecode(316,8066
long ClauseSetEqlitRecode(342,8626
VarSetInst_p VarSetInstAlloc(372,9251
void VarSetInstFree(414,10155
VarSetInst_p VarSetConstrInstAlloc(447,10825
void VarSetConstrInstFree(513,12427
void PrintDimacsHeader(550,13141
void ClausePrintDimacs(572,13598
void ClauseSetPrintDimacs(611,14456
GroundSet_p GroundSetAlloc(635,14972
void GroundSetFree(665,15672
long GroundSetMaxVar(691,16339
bool GroundSetInsert(729,17107
void GroundSetPrint(788,18477
void GroundSetPrintDimacs(823,19284
bool GroundSetUnitSimplifyClause(864,20289
bool ClauseCreateGroundInstances(928,21556
bool ClauseSetCreateGroundInstances(1005,23348
bool ClauseSetCreateConstrGroundInstances(1088,25335

CLAUSES/ccl_inferencedoc.c,1903
OutputFormatType DocOutputFormat 33,834
bool             PCLFullTerms 34,883
bool             PCLStepCompact 35,923
int              PCLShellLevel 36,964
char* PCLTypeStr(61,1838
static void pcl_print_start(96,2492
static void pcl_print_end(119,3092
static void tstp_print_end(150,3826
static void print_initial(180,4476
static void print_paramod(216,5366
static void print_eres(255,6360
static void print_des_eres(291,7275
static void print_efactor(327,8178
static void print_factor(363,9079
static void print_split(401,9997
static void print_simplify_reflect(439,10986
static void print_context_simplify_reflect(476,11972
static void print_ac_res(515,12965
static void print_minimize(571,14409
static void print_condense(608,15374
static void print_eval_answer(644,16390
static void print_rewrite(679,17346
static void print_eq_unfold(750,19224
static void pcl_formula_print_start(813,20790
static void pcl_formula_print_end(837,21427
static void tstp_formula_print_end(859,21899
static void print_formula_initial(881,22337
static void print_fof_intro_def(916,23209
static void print_fof_split_equiv(952,24077
static void print_fof_simpl(990,25048
static void print_neg_conj(1024,25954
static void print_fof_nnf(1058,26844
static void print_shift_quantors(1093,27783
static void print_skolemize(1128,28676
static void print_distribute(1162,29566
static void print_annotate_question(1195,30477
static void print_var_rename(1231,31404
void DocClauseCreation(1272,32594
void DocClauseFromForm(1339,34388
void DocClauseModification(1383,35662
void DocClauseQuote(1462,37888
void DocClauseRewrite(1531,39525
void DocClauseEqUnfold(1562,40352
void DocFormulaCreation(1590,41080
void DocFormulaModification(1636,42299
void DocFormulaIntroDefs(1690,43807
void DocIntroSplitDef(1755,45716
void DocIntroSplitDefRest(1784,46420
void DocClauseApplyDefs(1829,47731

CLAUSES/ccl_neweval.c,700
long EvaluationCounter 30,835
static Eval_p evals_alloc_raw(54,1628
static Eval_p splay_tree(77,2102
Eval_p EvalsAlloc(172,4449
void EvalsFree(195,4924
void EvalPrint(217,5360
void EvalPrintComment(236,5837
void EvalListPrint(257,6249
void EvalListPrintComment(280,6682
void EvalListSetPriority(300,7112
void EvalListChangePriority(322,7577
bool EvalGreater(348,8056
long EvalCompare(388,9002
Eval_p EvalTreeInsert(431,9951
Eval_p EvalTreeFind(477,11057
Eval_p EvalTreeExtractEntry(505,11655
bool EvalTreeDeleteEntry(546,12583
Eval_p EvalTreeFindSmallest(572,13079
PStack_p EvalTreeTraverseInit(599,13618
Eval_p EvalTreeTraverseNext(624,14174
void EvalTreePrintInOrder(657,14868

CLAUSES/ccl_overlap_index.c,1089
long term_collect_into_terms(54,1598
long term_collect_into_terms2(85,2195
long eqn_collect_into_terms(115,2803
long eqn_collect_into_terms2(140,3351
long term_collect_into_terms_pos(172,4068
long term_collect_into_terms_pos2(207,4869
long eqn_collect_into_terms_pos(244,5813
long eqn_collect_into_terms_pos2(271,6511
void OverlapIndexInsertPos(310,7655
void OverlapIndexDeletePos(341,8577
void OverlapIndexDeleteClauseOcc(389,9735
long ClauseCollectIntoTerms(444,11203
long ClauseCollectIntoTermsPos(473,11846
long ClauseCollectFromTerms(505,12624
long ClauseCollectFromTermsPos(540,13441
void OverlapIndexInsertIntoClause(578,14414
void OverlapIndexDeleteIntoClause(609,15145
void OverlapIndexInsertFromClause(640,15902
void OverlapIndexDeleteFromClause(670,16630
void OverlapIndexClauseTreePrint(701,17349
void OverlapIndexSubtermTreePrint(723,17886
void OverlapIndexFPLeafPrint(765,19082
long ClauseCollectIntoTerms2(794,19921
long ClauseCollectIntoTermsPos2(824,20678
void OverlapIndexInsertIntoClause2(857,21470
void OverlapIndexDeleteIntoClause2(896,22516

CLAUSES/ccl_paramod.c,874
bool ParamodOverlapNonEqLiterals 35,945
bool ParamodOverlapIntoNegativeLiterals 36,986
#define PARAMOD_FROM_LENGTH_LIMIT 69,2264
static bool check_paramod_ordering_constraint(73,2387
static Term_p clause_pos_find_first_neg_max_lside(114,3399
void ParamodInfoPrint(154,4356
Clause_p ClausePlainParamodConstruct(180,5196
Clause_p ClauseSimParamodConstruct(264,7937
Clause_p ClauseParamodConstruct(343,10471
Term_p ComputeOverlap(384,11641
Eqn_p  EqnOrderedParamod(444,13378
Clause_p ClauseOrderedParamod(502,15055
Clause_p ClauseOrderedSimParamod(608,18155
#define IS_NO_PARAMOD_POS 731,22614
Term_p ClausePosFirstParamodInto(757,23664
Term_p ClausePosNextParamodInto(808,25115
Term_p ClausePosFirstParamodFromSide(856,26516
Term_p ClausePosNextParamodFromSide(892,27570
Term_p ClausePosFirstParamodPair(923,28390
Term_p ClausePosNextParamodPair(964,29501

CLAUSES/ccl_pdtrees.c,847
bool PDTreePreferGeneral 33,878
static void pdtree_default_cell_free(57,1685
static void* pdt_select_alt_ref(83,2285
static bool recompute_node_constraints(118,3346
static long  delete_clause_entries(196,5299
static bool pdtree_verify_node_constr(240,6290
static void pdtree_forward(275,7175
static void pdtree_backtrack(355,9382
void pdt_node_print(395,10326
PDTree_p PDTreeAlloc(465,12380
void PDTreeFree(504,13416
PDTNode_p PDTNodeAlloc(528,13919
void PDTNodeFree(564,14805
void TermLRTraverseInit(608,15715
Term_p TermLRTraverseNext(628,16196
Term_p TermLRTraversePrev(660,16829
void PDTreeInsert(689,17370
long PDTreeDelete(756,19173
void PDTreeSearchInit(836,21059
void PDTreeSearchExit(865,21949
PDTNode_p PDTreeFindNextIndexedLeaf(892,22601
ClausePos_p PDTreeFindNextDemodulator(927,23448
void PDTreePrint(970,24324

CLAUSES/ccl_proofstate.c,295
char* UseInlinedWatchList 34,895
ProofState_p ProofStateAlloc(69,2314
void ProofStateInitWatchlist(167,6700
void ProofStateResetClauseSets(231,8703
void ProofStateFree(271,9894
void ProofStateStatisticsPrint(331,11477
void ProofStatePrint(433,15738
void ProofStatePropDocQuote(460,16710

CLAUSES/ccl_propclauses.c,402
PropClause_p PropClauseAlloc(62,1891
void PropClauseFree(111,2934
Clause_p PropClauseToClause(140,3547
void PropClausePrint(173,4395
long PropClauseMaxVar(193,4870
PropClauseSet_p PropClauseSetAlloc(222,5428
void PropClauseSetFree(248,5971
long PropClauseSetInsertPropClause(276,6554
long PropClauseSetInsertClause(306,7252
void PropClauseSetPrint(328,7765
long PropClauseSetMaxVar(353,8301

CLAUSES/ccl_relevance.c,425
void find_level_fcodes(57,1681
void extract_new_core(121,3374
static void move_clauses(162,4404
static void move_formulas(189,5003
static void proofstate_rel_prune(218,5631
Relevance_p RelevanceAlloc(282,7804
void RelevanceFree(316,8659
void ClausePListPrint(355,9479
void FormulaPListPrint(382,10035
long RelevanceDataInit(413,10682
Relevance_p RelevanceDataCompute(445,11572
long ProofStatePreprocess(492,12791

CLAUSES/ccl_rewrite.c,1272
long RewriteAttempts 31,775
long RewriteSuccesses 32,804
long RewriteUnboundVarFails 33,833
bool RewriteStrongRHSInst 34,866
long BWRWMatchAttempts 35,901
long BWRWMatchSuccesses 36,930
long BWRWRwSuccesses 37,959
static bool instance_is_rule(67,2051
/* static */ Term_p term_follow_top_RW_chain(103,3025
static RWResultType term_is_top_rewritable(137,3936
static bool term_is_rewritable(234,7270
static EqnSide eqn_has_rw_side(318,9453
static bool clause_is_rewritable(355,10475
static bool find_rewritable_clauses(389,11245
static ClausePos_p indexed_find_demodulator(427,12092
static Term_p rewrite_with_clause_set(515,14398
static Term_p rewrite_with_clause_setlist(563,15697
static bool term_subterm_rewrite(612,16902
static Term_p term_li_normalform(653,18060
EqnSide eqn_li_normalform(735,20468
static __inline__ RWDesc_p rw_desc_cell_alloc(802,22214
long clause_tree_push(835,23102
static long term_find_rw_clauses(877,24272
static long tree_find_rw_clauses(947,26745
static long find_rewritable_clauses_indexed(989,28189
Term_p TermComputeLINormalform(1036,29854
bool ClauseComputeLINormalform(1064,30689
long ClauseSetComputeLINormalform(1136,32616
bool FindRewritableClauses(1182,33722
long FindRewritableClausesIndexed(1206,34411

CLAUSES/ccl_sine.c,906
DRel_p DRelAlloc(59,1798
void DRelFree(84,2342
DRelation_p DRelationAlloc(105,2734
void DRelationFree(127,3142
DRel_p DRelationGetFEntry(155,3763
void DRelationAddClause(180,4284
void DRelationAddFormula(227,5463
void DRelationAddClauseSet(274,6658
void DRelationAddFormulaSet(309,7588
void DRelationAddClauseSets(344,8546
void DRelationAddFormulaSets(376,9465
void PQueueStoreClause(409,10385
void PQueueStoreFormula(428,10808
long ClauseSetFindHypotheses(448,11287
long FormulaSetFindHypotheses(481,12041
long SelectDefiningAxioms(516,12975
long SelectAxioms(635,16644
long SelectThreshold(736,20357
void DRelPrintDebug(793,21924
void DRelationPrintDebug(816,22503
void PStackClauseDelProp(843,23056
void PStackFormulaDelProp(869,23586
void PStackClausePrintTSTP(894,24124
void PStackFormulaPrintTSTP(920,24680
void PStackClausesMove(945,25245
void PStackFormulasMove(970,25784

CLAUSES/ccl_splitting.c,501
static void initialize_lit_table(59,1838
static int cond_init_lit_table(103,3033
static int find_free_literal(150,4173
static void build_part(181,4892
Eqn_p assemble_part_literals(222,5830
int clause_split_general(269,7222
static void initialize_permute_stack(424,11999
static bool permute_stack_next(448,12514
bool ClauseHasSplitLiteral(490,13462
int ClauseSplit(529,14469
int ClauseSplitGeneral(557,15287
long ClauseSetSplitClauses(633,17052
long ClauseSetSplitClausesGeneral(668,17856

CLAUSES/ccl_subsumption.c,1847
bool StrongUnitForwardSubsumption 34,878
long ClauseClauseSubsumptionCalls 35,925
long ClauseClauseSubsumptionCallsRec 36,968
long ClauseClauseSubsumptionSuccesses 37,1011
long UnitClauseClauseSubsumptionCalls 38,1054
ClausePos_p unit_clause_set_strongsubsumes_termpair(67,1978
Clause_p unit_clause_set_subsumes_clause(118,3047
static bool eqn_topsubsumes_termpair(165,4037
static bool eqn_subsumes_termpair(208,4897
static Eqn_p find_spec_literal_old(267,6031
static Eqn_p find_spec_literal(308,7028
static bool check_subsumption_possibility(380,8611
   bool    res 398,8976
   Eqn_p   sub_eqn;399,8999
   PStack_p lit_stack 400,9019
bool eqn_list_rec_subsume_old(433,9729
bool eqn_list_rec_subsume(519,12045
static bool clause_subsumes_clause(615,14417
Clause_p clause_set_subsumes_clause(695,16459
Clause_p clause_tree_find_subsuming_clause(730,17335
Clause_p clause_set_subsumes_clause_indexed(771,18387
void clause_tree_find_subsumed_clauses(818,19507
void clauseset_find_subsumed_clauses(857,20550
void clauseset_find_subsumed_clauses_indexed(891,21328
Clause_p clause_tree_find_variant_clause(937,22355
Clause_p clauseset_find_variant_clause_indexed(978,23267
bool LiteralSubsumesClause(1021,24554
bool UnitClauseSubsumesClause(1064,25372
Clause_p UnitClauseSetSubsumesClause(1093,26038
Clause_p ClauseSetFindUnitSubsumedClause(1123,26735
bool ClausePositiveSimplifyReflect(1156,27593
bool ClauseNegativeSimplifyReflect(1212,29021
bool ClauseSubsumesClause(1260,30203
Clause_p ClauseSetSubsumesFVPackedClause(1285,30858
Clause_p ClauseSetSubsumesClause(1316,31813
Clause_p ClauseSetFindSubsumedClause(1353,32917
long ClauseSetFindFVSubsumedClauses(1388,33868
long ClauseSetFindSubsumedClauses(1425,34861
Clause_p ClauseSetFindFVVariantClause(1456,35663
Clause_p ClauseSetFindVariantClause(1479,36275

CLAUSES/ccl_subterm_index.c,381
static long term_collect_idx_subterms(57,1724
static long eqn_collect_idx_subterms(97,2619
static void subterm_index_insert_set(122,3320
static void subterm_index_delete_set(150,4084
bool SubtermIndexInsertOcc(184,5104
bool SubtermIndexDeleteOcc(212,5953
long ClauseCollectIdxSubterms(250,6872
void SubtermIndexInsertClause(277,7496
void SubtermIndexDeleteClause(303,8109

CLAUSES/ccl_subterm_tree.c,716
static void subterm_occ_free_wrapper(54,1603
static void subterm_pos_free_wrapper(71,1984
void subterm_tree_print_dot(89,2353
SubtermOcc_p SubtermOccAlloc(129,3482
void SubtermOccFree(153,4024
void SubtermPosFree(173,4484
int CmpSubtermCells(196,5001
void SubtermBWTreeFree(225,5617
void SubtermBWTreeFreeWrapper(243,6048
void SubtermOLTreeFree(261,6409
void SubtermOLTreeFreeWrapper(279,6840
SubtermOcc_p SubtermTreeInsertTerm(299,7274
SubtermOcc_p SubtermTreeFindTerm(326,7900
void SubtermTreeDeleteTerm(349,8471
bool SubtermTreeInsertTermOcc(373,9086
bool SubtermTreeDeleteTermOcc(399,9725
void SubtermTreePrint(440,10731
void SubtermTreePrintDot(468,11496
void SubtermTreePrintDummy(513,12657

CLAUSES/ccl_tautologies.c,338
CompareResult TO_ground_compare(58,1735
static bool ground_orient_eqn(121,3030
static bool term_compute_top_nf(152,3703
static bool term_compute_ground_NF(197,4837
static bool ground_normalize_eqn(227,5554
static void ground_backward_contract(268,6595
static void ground_complete_neg_eqns(302,7296
bool ClauseIsTautology(346,8440

CLAUSES/ccl_tcnf.c,863
TFormula_p tprop_arg_return_other(56,1684
TFormula_p tprop_arg_return(83,2342
TFormula_p troot_nnf(111,2977
TFormula_p tformula_rek_skolemize(238,8198
bool tformula_rename_test(313,10472
TFormula_p extract_formula_core(398,12773
#define RETURN_IF_LARGE(454,14426
long TFormulaEstimateClauses(457,14530
TFormula_p TFormulaDefRename(606,19550
void TFormulaFindDefs(669,21421
TFormula_p TFormulaCopyDef(769,25042
TFormula_p TFormulaSimplify(842,27234
TFormula_p TFormulaNNF(1028,33452
TFormula_p TFormulaMiniScope(1101,35609
TFormula_p TFormulaVarRename(1198,39083
TFormula_p TFormulaSkolemizeOutermost(1255,40674
TFormula_p TFormulaShiftQuantors(1291,41661
TFormula_p TFormulaShiftQuantorsOld2(1327,42658
TFormula_p TFormulaShiftQuantorsOld(1405,44976
TFormula_p TFormulaDistributeDisjunctions(1477,47355
void WTFormulaConjunctiveNF(1542,49567

CLAUSES/ccl_tformulae.c,1126
static FunCode tptp_operator_convert(58,1789
static FunCode tptp_operator_parse(109,2849
static FunCode tptp_quantor_parse(132,3357
static TFormula_p quantified_tform_tptp_parse(165,4102
static TFormula_p elem_tform_tptp_parse(218,5554
static TFormula_p quantified_tform_tstp_parse(266,6846
static TFormula_p literal_tform_tstp_parse(320,8314
static TFormula_p assoc_tform_tstp_parse(367,9491
bool TFormulaIsPropConst(404,10370
TFormula_p TFormulaFCodeAlloc(429,11011
TFormula_p TFormulaLitAlloc(470,11910
TFormula_p TFormulaPropConstantAlloc(496,12541
TFormula_p TFormulaQuantorAlloc(520,13096
void TFormulaTPTPPrint(541,13590
TFormula_p TFormulaTPTPParse(640,16009
TFormula_p TFormulaTSTPParse(672,16696
bool TFormulaVarIsFree(709,17491
void TFormulaCollectFreeVars(760,18608
TFormula_p TFormulaAddQuantor(801,19739
TFormula_p TFormulaAddQuantors(826,20371
TFormula_p TFormulaClosure(856,21127
TFormula_p TFormulaCreateDef(882,21774
TFormula_p TFormulaClauseEncode(926,23031
void TFormulaMarkPolarity(966,23978
int TFormulaDecodePolarity(1031,25711
TFormula_p TFormulaClauseClosedEncode(1066,26583

CLAUSES/ccl_unfold_defs.c,263
static Term_p term_top_unfold_def(55,1649
static Term_p term_unfold_def(95,2790
static bool eqn_unfold_def(143,3785
bool ClauseUnfoldEqDef(181,4807
bool ClauseSetUnfoldEqDef(228,5919
long ClauseSetUnfoldAllEqDefs(260,6720
long ClauseSetPreprocess(311,8162

CLAUSES/ccl_unit_simplify.c,228
char* UnitSimplifyNames[UnitSimplifyNames33,861
ClausePos_p FindTopSimplifyingUnit(71,1977
ClausePos_p FindSignedTopSimplifyingUnit(113,3158
ClausePos_p FindSimplifyingUnit(157,4340
bool ClauseSimplifyWithUnitSet(227,5849

CONTROL/cco_batch_spec.c,604
char* BatchFilters[BatchFilters32,819
void do_proof(72,2457
EPCtrl_p batch_create_runner(120,3695
void parse_op_line(175,5236
void print_op_line(216,6162
BatchSpec_p BatchSpecAlloc(257,7156
void BatchSpecFree(295,8176
void BatchSpecPrint(344,9138
BatchSpec_p BatchSpecParse(405,11013
long BatchStructFOFSpecInit(470,12753
void StructFOFSpecAddProblem(495,13367
void StructFOFSpecBacktrackToSpec(521,14179
long StructFOFSpecGetProblem(555,15193
bool BatchProcessProblem(604,16637
bool BatchProcessFile(716,19813
bool BatchProcessProblems(775,21471
void BatchProcessInteractive(837,23188

CONTROL/cco_clausesplitting.c,36
int  ControlledClauseSplit(63,2015

CONTROL/cco_eqnresolving.c,74
long ComputeAllEqnResolvents(63,1962
long ClauseERNormalizeVar(115,3559

CONTROL/cco_eserver.c,174
EServer_p EServerAlloc(59,1775
void EServerFree(82,2208
void EServerReset(99,2583
bool EServerListen(117,2970
bool EServerAccept(146,3710
int EServerInitFDSet(183,4510

CONTROL/cco_esession.c,156
ESession_p ESessionAlloc(59,1787
void ESessionFree(83,2272
int ESessionInitFDSet(107,2778
void ESessionDoIO(147,3674
void ESessionProcessCmds(212,5161

CONTROL/cco_factoring.c,80
long ComputeAllOrderedFactors(62,1827
long ComputeAllEqualityFactors(116,3389

CONTROL/cco_forward_contraction.c,346
static FVPackedClause_p forward_contract_keep(61,1969
bool ForwardModifyClause(173,5511
FVPackedClause_p ForwardContractClause(257,7850
Clause_p ForwardContractSet(299,9036
void ClauseSetReweight(351,10195
Clause_p ForwardContractSetReweight(401,11442
void ClauseSetFilterReweigth(438,12310
Clause_p ProofStateFilterUnprocessed(462,12990

CONTROL/cco_interpreted.c,103
void answer_lit_print(60,1867
void ClausePrintAnswer(109,3089
int ClauseEvaluateAnswerLits(154,4297

CONTROL/cco_paramodulation.c,751
static bool sim_paramod_q(56,1622
static Clause_p variable_paramod(104,2992
static void update_clause_info(141,3974
static long compute_into_pm_pos_clause(188,5449
long compute_pos_into_pm_term(276,8557
static long compute_pos_into_pm_termtree(338,10659
static long compute_pos_into_pm(374,11730
static long compute_from_pm_pos_clause(418,13068
long compute_pos_from_pm_term(499,15815
static long compute_pos_from_pm_termtree(565,18126
static long compute_pos_from_pm(602,19209
long ComputeClauseClauseParamodulants(645,20555
long ComputeAllParamodulants(787,25111
long ComputeIntoParamodulants(821,26063
long ComputeFromParamodulants(867,27445
long ComputeFromSimParamodulants(916,28827
long ComputeAllParamodulantsIndexed(975,30511

CONTROL/cco_proc_ctrl.c,426
char* PRResultTable[PRResultTable31,807
EPCtrl_p EPCtrlAlloc(71,1932
void EPCtrlFree(100,2529
void EPCtrlCleanup(130,3016
EPCtrl_p ECtrlCreate(167,3826
bool EPCtrlGetResult(229,5476
EPCtrlSet_p EPCtrlSetAlloc(280,6496
void EPCtrlSetFree(303,6991
void EPCtrlSetAddProc(330,7548
EPCtrl_p EPCtrlSetFindProc(351,7986
void EPCtrlSetDeleteProc(377,8460
int EPCtrlSetFDSet(404,9104
EPCtrl_p EPCtrlSetGetResult(436,9757

CONTROL/cco_proofproc.c,898
void document_processing(58,1690
static void check_ac_status(86,2353
static long remove_subsumed(119,3226
eliminate_backward_rewritten_clauses(175,4679
static long eliminate_backward_subsumed_clauses(252,7621
static void eliminate_unit_simplified_clauses(312,9676
static long eliminate_context_sr_clauses(357,11064
void check_watchlist(385,11901
void simplify_watchlist(421,13097
static void generate_new_clauses(476,14627
static Clause_p insert_new_clauses(557,18216
Clause_p replacing_inferences(667,22086
static Clause_p cleanup_unprocessed_clauses(724,23932
static void print_sharing_factor(822,27306
void print_rw_state(862,28589
void ProofControlInit(900,29713
void ProofStateResetProcessedSet(974,31841
void ProofStateResetProcessed(1021,33222
void fvi_param_init(1042,33833
void ProofStateInit(1176,39121
Clause_p ProcessClause(1266,41979
Clause_p Saturate(1422,46632

CONTROL/cco_scheduling.c,113
ScheduleCell StratSchedule[StratSchedule30,735
void ScheduleTimesInit(68,1997
pid_t ExecuteSchedule(116,2876

CONTROL/cco_simplification.c,197
void ClauseMoveSimplified(62,1861
bool RemoveRewritableClauses(97,2884
bool RemoveRewritableClausesIndexed(132,3799
long ClauseSetUnitSimplify(169,4939
long RemoveContextualSRClauses(208,5898

CONTROL/cco_sine.c,391
static AxFilter_p sine_get_filter(57,1646
char* raw_class[raw_class146,5508
char* raw_sine[raw_sine187,7560
static char* find_auto_sine(244,8767
StructFOFSpec_p StructFOFSpecCreate(300,10266
StructFOFSpec_p StructFOFSpecAlloc(329,11003
void StructFOFSpecFree(355,11502
long StructFOFSpecParseAxioms(404,12558
void StructFOFSpecInitDistrib(455,14066
long ProofStateSinE(477,14748

EXTERNAL/CSSCPA_filter.c,382
#define NAME 34,975
   OPT_NOOPT=38,1023
   OPT_HELP,39,1039
   OPT_VERSION,40,1052
   OPT_VERBOSE,41,1068
   OPT_OUTPUT,42,1084
   OPT_SILENT,43,1099
   OPT_OUTPUTLEVEL,44,1114
   OPT_RANT45,1134
}OptionCodes;OptionCodes46,1146
OptCell opts[opts54,1386
char   *outname outname102,2513
int main(116,3067
CLState_p process_options(182,4617
void print_help(239,5846

EXTERNAL/cex_csscpa.c,297
char* ClauseStatusString(53,1561
static void print_csscpa_state(89,2260
static long collect_subsumed(119,3143
static Clause_p find_unit_contradiction(166,4216
CSSCPAState_p CSSCPAStateAlloc(215,5369
void CSSCPAStateFree(247,6226
bool CSSCPAProcessClause(279,7153
void CSSCPALoop(445,11603

HEURISTICS/che_X_____auto.c,20
  res 11884,424071

HEURISTICS/che_X_____auto_casc.c,19
  res 7252,257979

HEURISTICS/che_X_____auto_dev.c,20
  res 11884,424071

HEURISTICS/che_X_____auto_pp_opt_071.c,19
  res 7453,248937

HEURISTICS/che_X_____auto_pp_opt_080.c,19
  res 7662,253832

HEURISTICS/che_X_____auto_pp_opt_dev.c,19
  res 7870,260945

HEURISTICS/che_X_auto_sched0.c,20
  res 13418,486332

HEURISTICS/che_X_auto_sched1.c,20
  res 10955,382775

HEURISTICS/che_X_auto_sched2.c,20
  res 10444,362445

HEURISTICS/che_X_auto_sched3.c,20
  res 10140,355647

HEURISTICS/che_X_auto_sched4.c,20
  res 10068,353156

HEURISTICS/che_axfilter.c,708
char* GeneralityMeasureNames[GeneralityMeasureNames34,906
char* AxFilterDefaultSet 49,1151
GeneralityMeasure get_gen_measure(97,3447
AxFilter_p AxFilterAlloc(124,4148
void AxFilterFree(156,5046
AxFilter_p GSinEParse(191,6001
AxFilter_p ThresholdParse(281,8045
AxFilter_p AxFilterParse(310,8668
AxFilter_p AxFilterDefParse(345,9593
bool AxFilterPrintBuf(385,10506
void AxFilterPrint(425,11672
void AxFilterDefPrint(457,12286
AxFilterSet_p AxFilterSetAlloc(476,12708
void AxFilterSetFree(497,13160
long AxFilterSetParse(524,13743
AxFilterSet_p AxFilterSetCreateInternal(551,14347
void AxFilterSetPrint(574,14897
AxFilter_p AxFilterSetFindFilter(598,15407
void AxFilterSetAddNames(627,16056

HEURISTICS/che_axiomscan.c,159
#define FAIL_ON(42,1221
FunCode DetectCommutativity(62,1837
FunCode DetectAssociativity(110,3223
bool ClauseScanAC(173,4950
bool ClauseSetScanAC(213,5846

HEURISTICS/che_clausefeatures.c,590
static long term_depth_info_add(56,1622
static long eqn_tptp_depth_info_add(85,2274
int ClauseCountExtSymbols(124,3285
FunCode TermAddVarDistribution(161,4158
FunCode EqnAddVarDistribution(212,5229
FunCode EqnListAddVarDistribution(235,5782
long ClauseCountVariableSet(262,6360
long ClauseCountSingletonSet(295,7052
long ClauseCountMaximalTerms(328,7759
long ClauseCountMaximalLiterals(356,8336
long ClauseCountUnorientableLiterals(384,8895
long ClauseTPTPDepthInfoAdd(413,9492
void ClauseInfoPrint(447,10320
void ClauseLinePrint(473,11021
void ClausePropInfoPrint(498,11577

HEURISTICS/che_clausesetfeatures.c,1514
SpecLimits_p SpecLimitsAlloc(59,1820
long ClauseSetCountGoals(122,4036
long ClauseSetCountUnit(150,4571
long ClauseSetCountUnitGoals(179,5116
long ClauseSetCountHorn(208,5678
long ClauseSetCountHornGoals(236,6217
long ClauseSetCountEquational(265,6816
long ClauseSetCountPureEquational(293,7402
long ClauseSetCountPosUnits(322,7969
long ClauseSetCountGroundGoals(351,8528
long ClauseSetCountGround(380,9099
long ClauseSetCountGroundUnitAxioms(409,9665
long ClauseSetCountGroundPositiveAxioms(438,10271
long ClauseSetCountPositiveAxioms(467,10872
long ClauseSetCountTPTPRangeRestricted(496,11446
double ClauseSetNonGoundAxiomPart(526,12090
long ClauseSetCollectArityInformation(553,12842
long ClauseSetCountMaximalTerms(639,14851
long ClauseSetCountMaximalLiterals(664,15416
long ClauseSetCountVariables(691,16078
long ClauseSetCountSingletons(718,16736
long ClauseSetTPTPDepthInfoAdd(745,17348
long ClauseSetCountUnorientableLiterals(771,17985
long ClauseSetCountEqnLiterals(796,18565
long ClauseSetMaxStandardWeight(823,19169
long ClauseSetTermCells(848,19686
long ClauseSetMaxLiteralNumber(874,20236
void SpecFeaturesCompute(900,20792
void SpecFeaturesAddEval(1044,24785
void SpecFeaturesPrint(1231,29612
void SpecFeaturesParse(1279,30972
void SpecTypePrint(1413,35051
void ClauseSetPrintPosUnits(1459,36355
void ClauseSetPrintNegUnits(1486,36956
void ClauseSetPrintNonUnits(1514,37568
void ProofStatePrintSelective(1543,38215
SpecLimits_p CreateDefaultSpecLimits(1634,40665

HEURISTICS/che_clauseweight.c,651
double uniq_term_weight(55,1565
double uniq_eqn_weight(88,2163
WFCB_p ClauseWeightInit(113,2897
WFCB_p ClauseWeightParse(139,3578
double ClauseWeightCompute(172,4395
WFCB_p LMaxWeightInit(195,4947
WFCB_p LMaxWeightParse(221,5620
double LMaxWeightCompute(255,6503
WFCB_p CMaxWeightInit(286,7212
WFCB_p CMaxWeightParse(312,7885
double CMaxWeightCompute(346,8771
void ClauseWeightExit(374,9469
WFCB_p UniqWeightInit(395,9995
WFCB_p UniqWeightParse(414,10428
double UniqWeightCompute(437,10979
WFCB_p DefaultWeightInit(463,11589
WFCB_p DefaultWeightParse(482,12035
double DefaultWeightCompute(505,12570
void TrivialWeightExit(523,13025

HEURISTICS/che_fcode_featurearrays.c,172
static int feature_compare_function(55,1671
FCodeFeatureArray_p FCodeFeatureArrayAlloc(100,2807
void FCodeFeatureArrayFree(153,4382
void FCodeFeatureArraySort(172,4866

HEURISTICS/che_fifo.c,120
WFCB_p FIFOEvalInit(63,1770
WFCB_p FIFOEvalParse(86,2231
double FIFOEvalCompute(111,2770
void FIFOEvalExit(132,3193

HEURISTICS/che_funweights.c,964
static void init_conj_vector(59,1739
static void init_relevance_vector2(113,3211
static void init_relevance_vector(165,4635
static void init_fun_weights(212,5995
static void parse_op_weight(263,7395
void parse_op_signweight(293,8179
FunWeightParam_p FunWeightParamAlloc(328,9057
void FunWeightParamFree(354,9636
WFCB_p ConjectureSymbolWeightInit(397,10697
WFCB_p RelevanceLevelWeightInit(453,12724
WFCB_p RelevanceLevelWeightInit2(509,14869
WFCB_p ConjectureSymbolWeightParse(569,17040
WFCB_p ConjectureSimplifiedSymbolWeightParse(633,19161
WFCB_p ConjectureRelativeSymbolWeightParse(693,21160
WFCB_p RelevanceLevelWeightParse(757,23094
WFCB_p RelevanceLevelWeightParse2(840,25348
WFCB_p FunWeightInit(920,27584
WFCB_p FunWeightParse(959,28756
WFCB_p SymOffsetWeightInit(1024,30259
WFCB_p SymOffsetWeightParse(1066,31543
double GenericFunWeightCompute(1131,33158
double SymOffsetWeightCompute(1162,34134
void GenericFunWeightExit(1206,35381

HEURISTICS/che_hcb.c,471
static Clause_p get_next_clause(55,1608
void default_exit_fun(68,1820
void HeuristicParmsInitialize(89,2388
HeuristicParms_p HeuristicParmsAlloc(172,5677
void HeuristicParmsFree(192,6128
HCB_p HCBAlloc(217,6625
void HCBFree(245,7322
long HCBAddWFCB(274,7953
void HCBClauseEvaluate(308,8781
Clause_p HCBStandardClauseSelect(337,9477
Clause_p HCBSingleWeightClauseSelect(370,10210
long HCBClauseSetDelProp(392,10899
long HCBClauseSetDeleteBadClauses(456,12272

HEURISTICS/che_hcbadmin.c,270
static void parse_single_wfcb_item(57,1623
HCBAdmin_p HCBAdminAlloc(114,3047
void HCBAdminFree(137,3540
long HCBAdminAddHCB(174,4266
HCB_p HCBAdminFindHCB(205,5046
HCB_p HeuristicParse(240,5694
long HeuristicDefParse(271,6403
long HeuristicDefListParse(310,7315

HEURISTICS/che_heuristics.c,1201
HeuristicAssocCell HeuristicsTable[HeuristicsTable34,832
void finalize_auto_parms(68,2111
HCB_p HCBCreate(116,3501
HCB_p GetHeuristic(154,4358
#define CHE_HEURISTICS_INTERNAL188,5199
#define CHE_HEURISTICS_AUTO203,5573
HCB_p HCBAutoModeCreate(204,5601
#undef CHE_HEURISTICS_AUTO219,6080
#define CHE_HEURISTICS_AUTO_CASC235,6483
HCB_p HCBCASCAutoModeCreate(236,6516
#undef CHE_HEURISTICS_AUTO_CASC268,7614
#define CHE_HEURISTICS_AUTO_DEV285,8032
HCB_p HCBDevAutoModeCreate(286,8064
#undef CHE_HEURISTICS_AUTO_DEV301,8546
#define CHE_HEURISTICS_AUTO_SCHED0320,9029
HCB_p HCBAutoSched0Create(321,9064
#undef CHE_HEURISTICS_AUTO_SCHED0336,9548
#define CHE_HEURISTICS_AUTO_SCHED1338,9583
HCB_p HCBAutoSched1Create(339,9618
#undef CHE_HEURISTICS_AUTO_SCHED1354,10102
#define CHE_HEURISTICS_AUTO_SCHED2356,10137
HCB_p HCBAutoSched2Create(357,10172
#undef CHE_HEURISTICS_AUTO_SCHED2372,10656
#define CHE_HEURISTICS_AUTO_SCHED3374,10691
HCB_p HCBAutoSched3Create(375,10726
#undef CHE_HEURISTICS_AUTO_SCHED3390,11210
#define CHE_HEURISTICS_AUTO_SCHED4393,11246
HCB_p HCBAutoSched4Create(394,11281
#undef CHE_HEURISTICS_AUTO_SCHED4409,11765
#undef CHE_HEURISTICS_INTERNAL411,11800

HEURISTICS/che_learning.c,272
static TSMParam_p tsm_param_init(54,1551
WFCB_p TSMWeightInit(120,3617
WFCB_p TSMWeightParse(159,4931
double TSMWeightCompute(259,7744
WFCB_p TSMRWeightInit(335,10014
WFCB_p TSMRWeightParse(380,11636
double TSMRWeightCompute(490,14805
void TSMWeightExit(571,17115

HEURISTICS/che_lifo.c,120
WFCB_p LIFOEvalInit(63,1751
WFCB_p LIFOEvalParse(85,2211
double LIFOEvalCompute(109,2749
void LIFOEvalExit(131,3176

HEURISTICS/che_litselection.c,6234
static LitSelNameFunAssocCell name_fun_assoc[name_fun_assoc35,855
static long literal_weight_counter=155,10321
#define lit_sel_diff_weight(166,10807
static Eqn_p find_maxlcomplex_literal(182,11246
static Eqn_p find_lcomplex_literal(257,12748
static Eqn_p find_smallest_neg_ground_lit(334,14262
static Eqn_p find_smallest_max_neg_ground_lit(371,15127
static Eqn_p find_ng_min11_infpos_no_xtype_lit(409,16032
static Eqn_p find_max_xtype_no_type_lit(450,16919
static void clause_select_pos(490,17703
int lit_eval_compare(521,18372
void generic_uniq_selection(560,19274
static PDArray_p pos_pred_dist_array_compute(628,21106
#define pred_dist_array_free(644,21466
LiteralSelectionFun GetLitSelFun(665,22151
char* GetLitSelName(695,22773
void LitSelAppendNames(727,23410
void SelectNoLiterals(754,23941
void SelectNoGeneration(772,24360
void SelectNegativeLiterals(791,24847
void PSelectNegativeLiterals(819,25451
void SelectFirstVariableLiteral(843,25973
void PSelectFirstVariableLiteral(867,26555
void SelectLargestNegativeLiteral(890,27073
void PSelectLargestNegativeLiteral(925,27953
void SelectSmallestNegativeLiteral(964,28846
void PSelectSmallestNegativeLiteral(998,29735
void SelectLargestOrientableLiteral(1037,30699
void PSelectLargestOrientableLiteral(1084,31898
void MSelectLargestOrientableLiteral(1134,33204
void SelectSmallestOrientableLiteral(1160,33844
void PSelectSmallestOrientableLiteral(1207,35134
void MSelectSmallestOrientableLiteral(1257,36451
void SelectDiffNegativeLiteral(1282,37031
void PSelectDiffNegativeLiteral(1317,37926
void SelectGroundNegativeLiteral(1356,38858
void PSelectGroundNegativeLiteral(1393,39786
void SelectOptimalLiteral(1443,40980
void PSelectOptimalLiteral(1486,42025
void SelectMinOptimalLiteral(1528,42988
void PSelectMinOptimalLiteral(1571,43968
void SelectMinOptimalNoTypePred(1614,44989
void PSelectMinOptimalNoTypePred(1661,46194
void SelectMinOptimalNoXTypePred(1708,47375
void PSelectMinOptimalNoXTypePred(1755,48592
void SelectMinOptimalNoRXTypePred(1802,49781
void PSelectMinOptimalNoRXTypePred(1849,51009
#define VAR_FACTOR 1895,52156
void SelectCondOptimalLiteral(1897,52178
void PSelectCondOptimalLiteral(1946,53298
void SelectAllCondOptimalLiteral(1996,54490
void PSelectAllCondOptimalLiteral(2045,55615
void SelectDepth2OptimalLiteral(2095,56760
void PSelectDepth2OptimalLiteral(2132,57502
void SelectPDepth2OptimalLiteral(2170,58300
void PSelectPDepth2OptimalLiteral(2207,59054
void SelectNDepth2OptimalLiteral(2245,59879
void PSelectNDepth2OptimalLiteral(2282,60630
void SelectNonRROptimalLiteral(2320,61455
void PSelectNonRROptimalLiteral(2342,62025
void SelectNonStrongRROptimalLiteral(2364,62589
void PSelectNonStrongRROptimalLiteral(2386,63192
void SelectAntiRROptimalLiteral(2409,63758
void PSelectAntiRROptimalLiteral(2438,64477
void SelectNonAntiRROptimalLiteral(2460,65039
void PSelectNonAntiRROptimalLiteral(2482,65626
void SelectStrongRRNonRROptimalLiteral(2504,66219
void PSelectStrongRRNonRROptimalLiteral(2527,66886
void SelectUnlessUniqMaxOptimalLiteral(2554,67562
void PSelectUnlessUniqMaxOptimalLiteral(2578,68227
void SelectUnlessUniqMaxSmallestOrientable(2603,68910
void PSelectUnlessUniqMaxSmallestOrientable(2629,69635
void SelectUnlessPosMaxOptimalLiteral(2655,70347
void PSelectUnlessPosMaxOptimalLiteral(2681,71090
void SelectUnlessUniqPosMaxOptimalLiteral(2707,71759
void PSelectUnlessUniqPosMaxOptimalLiteral(2733,72481
void SelectUnlessUniqMaxPosOptimalLiteral(2759,73155
void PSelectUnlessUniqMaxPosOptimalLiteral(2802,74041
void SelectComplex(2847,75004
void PSelectComplex(2899,76229
void SelectComplexExceptRRHorn(2948,77342
void PSelectComplexExceptRRHorn(2970,77902
void SelectLComplex(2992,78429
void PSelectLComplex(3041,79503
void SelectMaxLComplex(3098,80804
void PSelectMaxLComplex(3138,81780
void SelectMaxLComplexNoTypePred(3188,83102
void PSelectMaxLComplexNoTypePred(3249,84680
void SelectMaxLComplexNoXTypePred(3312,86309
void PSelectMaxLComplexNoXTypePred(3373,87912
void SelectComplexPreferNEQ(3426,89185
void PSelectComplexPreferNEQ(3500,90993
void SelectComplexPreferEQ(3575,92828
void PSelectComplexPreferEQ(3649,94621
void SelectComplexExceptUniqMaxHorn(3724,96477
void PSelectComplexExceptUniqMaxHorn(3752,97197
void MSelectComplexExceptUniqMaxHorn(3780,97920
void SelectNewComplex(3811,98735
void PSelectNewComplex(3853,99840
void SelectNewComplexExceptUniqMaxHorn(3890,100731
void PSelectNewComplexExceptUniqMaxHorn(3917,101424
void SelectMinInfpos(3944,102089
void PSelectMinInfpos(3987,103197
void HSelectMinInfpos(4034,104388
void GSelectMinInfpos(4087,105737
void SelectMinInfposNoTypePred(4140,107079
void PSelectMinInfposNoTypePred(4185,108293
void SelectMin2Infpos(4231,109473
void PSelectMin2Infpos(4274,110586
void SelectComplexExceptUniqMaxPosHorn(4320,111745
void PSelectComplexExceptUniqMaxPosHorn(4349,112558
static void diversification_weight(4378,113291
void SelectDiversificationLiterals(4401,113881
static void diversification_prefer_into_weight(4421,114485
void SelectDiversificationPreferIntoLiterals(4447,115279
static void maxlcomplex_weight(4466,115808
void SelectMaxLComplexG(4505,116689
static void maxlcomplexavoidpred_weight(4542,117567
void SelectMaxLComplexAvoidPosPred(4591,118682
static void maxlcomplexavoidprednotype_weight(4632,119654
void SelectMaxLComplexAPPNoType(4657,120255
void SelectMaxLComplexAvoidPosUPred(4701,121286
static void complex_weight(4739,122220
void SelectComplexG(4774,122976
static void complex_weight_ahp(4796,123532
void SelectComplexAHP(4842,124556
void PSelectComplexAHP(4872,125288
static void new_complex_notp_ahp(4903,126095
void SelectNewComplexAHP(4956,127297
void PSelectNewComplexAHP(4985,128033
void SelectComplexAHPExceptRRHorn(5017,128857
void PSelectComplexAHPExceptRRHorn(5039,129429
void SelectNewComplexAHPExceptRRHorn(5061,130007
void PSelectNewComplexAHPExceptRRHorn(5083,130591
void SelectNewComplexAHPExceptUniqMaxHorn(5105,131186
void PSelectNewComplexAHPExceptUniqMaxHorn(5133,131891
static void new_complex_notp_ahp_ns(5165,132608
void SelectNewComplexAHPNS(5224,133970
void SelectVGNonCR(5257,134910

HEURISTICS/che_normsubst.c,36
NormSubst_p NormSubstAlloc(60,1825

HEURISTICS/che_orientweight.c,278
WFCB_p ClauseOrientWeightInit(60,1831
WFCB_p ClauseOrientWeightParse(92,2822
double ClauseOrientWeightCompute(132,3944
WFCB_p OrientLMaxWeightInit(159,4632
WFCB_p OrientLMaxWeightParse(191,5617
double OrientLMaxWeightCompute(231,6751
void ClauseOrientWeightExit(271,7735

HEURISTICS/che_prio_funs.c,1534
char* PrioFunNames[PrioFunNames33,910
static ClausePrioFun prio_fun_array[prio_fun_array68,1568
ClausePrioFun GetPrioFun(133,3446
ClausePrioFun ParsePrioFun(161,3964
EvalPriority PrioFunPreferGroundGoals(192,4591
EvalPriority PrioFunPreferUnitGroundGoals(217,5121
EvalPriority PrioFunPreferGround(242,5665
EvalPriority PrioFunPreferNonGround(267,6163
EvalPriority PrioFunPreferProcessed(292,6676
EvalPriority PrioFunPreferNew(317,7200
EvalPriority PrioFunPreferGoals(342,7695
EvalPriority PrioFunPreferNonGoals(368,8181
EvalPriority PrioFunPreferMixed(393,8724
EvalPriority PrioFunPreferPositive(420,9316
EvalPriority PrioFunPreferNegative(450,10078
EvalPriority PrioFunPreferUnits(478,10573
EvalPriority PrioFunPreferNonEqUnits(502,11077
EvalPriority PrioFunPreferDemods(527,11617
EvalPriority PrioFunPreferNonUnits(554,12178
EvalPriority PrioFunConstPrio(579,12610
EvalPriority PrioFunByLiteralNumber(598,12994
EvalPriority PrioFunByDerivationDepth(617,13391
EvalPriority PrioFunByDerivationSize(636,13780
EvalPriority PrioFunByNegLitDist(656,14329
EvalPriority PrioFunGoalDifficulty(690,14996
EvalPriority PrioFunSimulateSOS(729,15766
EvalPriority PrioFunDeferSOS(751,16224
EvalPriority PrioFunPreferHorn(775,16710
EvalPriority PrioFunPreferNonHorn(800,17200
EvalPriority PrioFunPreferUnitAndNonEq(825,17718
EvalPriority PrioFunDeferNonUnitMaxPosEq(854,18324
EvalPriority PrioFunByCreationDate(883,18945
EvalPriority PrioFunPreferWatchlist(902,19363
EvalPriority PrioFunDeferWatchlist(927,19901

HEURISTICS/che_proofcontrol.c,267
#define CHE_PROOFCONTROL_INTERNAL33,932
char* DefaultWeightFunctions 35,967
char* DefaultHeuristics=51,1819
static bool select_inherited_literal(113,4021
ProofControl_p ProofControlAlloc(160,5136
void ProofControlFree(185,5814
void DoLiteralSelection(212,6427

HEURISTICS/che_rawspecfeatures.c,178
void RawSpecFeaturesCompute(60,1791
#define RAW_CLASSIFY(80,2653
void RawSpecFeaturesClassify(108,3560
void RawSpecFeaturesParse(156,4988
void RawSpecFeaturesPrint(200,6097

HEURISTICS/che_refinedweight.c,252
WFCB_p ClauseRefinedWeightInit(60,1835
WFCB_p ClauseRefinedWeightParse(92,2800
double ClauseRefinedWeightCompute(131,3870
WFCB_p ClauseRefinedWeight2Parse(160,4593
double ClauseRefinedWeight2Compute(183,5109
void ClauseRefinedWeightExit(210,5794

HEURISTICS/che_simweight.c,185
double sim_eqn_weight(54,1594
double sim_weight(124,3018
WFCB_p SimWeightInit(154,3818
WFCB_p SimWeightParse(183,4572
double SimWeightCompute(218,5509
void SimWeightExit(238,5938

HEURISTICS/che_to_autoselect.c,1712
#define TO_ORDERING_INTERNAL42,1262
void init_oparms(56,1533
void print_oparms(78,2030
#define CHE_HEURISTICS_AUTO110,2994
OCB_p generate_auto_ordering(112,3023
#undef CHE_HEURISTICS_AUTO124,3410
#define CHE_HEURISTICS_AUTO_CASC141,3892
OCB_p generate_autocasc_ordering(143,3926
#undef CHE_HEURISTICS_AUTO_CASC190,5577
#define CHE_HEURISTICS_AUTO_DEV207,6029
OCB_p generate_autodev_ordering(209,6062
#undef CHE_HEURISTICS_AUTO_DEV239,7126
#define CHE_HEURISTICS_AUTO_SCHED0260,7772
OCB_p generate_autosched0_ordering(261,7807
#undef CHE_HEURISTICS_AUTO_SCHED0273,8203
#define CHE_HEURISTICS_AUTO_SCHED1275,8238
OCB_p generate_autosched1_ordering(276,8273
#undef CHE_HEURISTICS_AUTO_SCHED1288,8669
#define CHE_HEURISTICS_AUTO_SCHED2290,8704
OCB_p generate_autosched2_ordering(291,8739
#undef CHE_HEURISTICS_AUTO_SCHED2303,9135
#define CHE_HEURISTICS_AUTO_SCHED3305,9170
OCB_p generate_autosched3_ordering(306,9205
#undef CHE_HEURISTICS_AUTO_SCHED3318,9601
#define CHE_HEURISTICS_AUTO_SCHED4320,9636
OCB_p generate_autosched4_ordering(321,9671
#undef CHE_HEURISTICS_AUTO_SCHED4333,10067
void OrderParmsInitialize(354,10704
void HeuristicParmsUpdate(377,11403
#define KBO_BONUS 399,12057
#define MAX_TERM_PENALTY 400,12077
#define MAX_LITERAL_PENALTY 401,12104
#define UNORIENT_LITERAL_PENALTY 402,12134
double OrderEvaluate(404,12170
bool OrderNextType(438,13119
bool OrderNextWeightGen(479,13926
bool OrderNextPrecGen(508,14604
#define MAX_CONST_WEIGHT 538,15373
bool OrderNextConstWeight(540,15401
bool OrderNextOrdering(579,16604
OCB_p OrderFindOptimal(632,17748
OCB_p TOSelectOrdering(693,19530
OCB_p  TOCreateOrdering(769,21459
#undef TO_ORDERING_INTERNAL832,23489

HEURISTICS/che_to_precgen.c,972
char* TOPrecGenNames[TOPrecGenNames33,856
void print_prec_array(79,2463
static void compute_precedence_from_array(111,3207
static void generate_unary_first_precedence(161,4539
static void generate_unary_first_freq_precedence(200,5480
static void generate_arity_precedence(244,6537
static void generate_invarity_precedence(274,7345
static void generate_const_max_precedence(304,8198
static void generate_const_min_precedence(338,9132
static void generate_freq_precedence(373,10068
static void generate_invfreq_precedence(404,10970
static void generate_invconjfreq_precedence(436,11959
static void generate_invfreq_conjmax_precedence(470,13012
static void generate_invfreq_conjmin_precedence(502,14025
static void generate_invfreq_constmin_precedence(535,15054
static void generate_invfreq_hack_precedence(578,16304
static void generate_arrayopt_precedence(634,17718
TOPrecGenMethod TOTranslatePrecGenMethod(714,19667
void TOGeneratePrecedence(741,20230

HEURISTICS/che_to_weightgen.c,1376
char* TOWeightGenNames[TOWeightGenNames36,1029
typedef struct prec_rank_cell72,2096
   FunCode f_code;74,2128
   OCB_p   ocb;75,2147
}PrecRankCell, *PrecRank_p;PrecRank_p76,2203
static void print_weight_array(105,3027
int prec_rank_cell_cmp(138,3664
static void generate_precrank_weights(177,4753
static void set_maximal_0(221,5819
static void set_maximal_unary_0(260,6591
static void generate_constant_weights(302,7397
static void generate_selmax_weights(326,7997
static void generate_arity_weights(345,8412
static void generate_precedence_weights(404,9920
static void generate_invprecedence_weights(439,10704
static void generate_precrank5_weights(473,11427
static void generate_precrank10_weights(491,11843
static void generate_precrank20_weights(511,12263
static void generate_freq_weights(532,12718
static void generate_invfreq_weights(558,13455
static void generate_freqrank_weights(591,14318
static void generate_invfreqrank_weights(629,15314
static void generate_invconjfreqrank_weights(669,16330
static void generate_freqranksq_weights(714,17560
static void generate_invfreqranksq_weights(753,18582
static void generate_inv_modfreqrank_weights(792,19593
static void generate_inv_modfreqrank_weights_max_0(832,20671
void set_user_weights(876,21725
TOWeightGenMethod TOTranslateWeightGenMethod(905,22516
void TOGenerateWeights(933,23148

HEURISTICS/che_varweights.c,1135
WFCB_p TPTPTypeWeightInit(61,1855
WFCB_p TPTPTypeWeightParse(97,2999
double TPTPTypeWeightCompute(143,4386
WFCB_p SigWeightInit(186,5446
WFCB_p SigWeightParse(219,6469
double SigWeightCompute(260,7675
WFCB_p ProofWeightInit(300,8895
WFCB_p ProofWeightParse(336,10029
double ProofWeightCompute(382,11421
WFCB_p DepthWeightInit(415,12310
WFCB_p DepthWeightParse(449,13356
double DepthWeightCompute(490,14578
WFCB_p WeightLessDepthInit(540,15920
WFCB_p WeightLessDepthParse(573,16951
double WeightLessDepthCompute(614,18188
WFCB_p NLWeightInit(665,19608
WFCB_p NLWeightParse(697,20605
double NLWeightCompute(740,21766
WFCB_p PNRefinedWeightInit(770,22494
WFCB_p PNRefinedWeightParse(804,23558
double PNRefinedWeightCompute(849,24863
WFCB_p SymTypeWeightInit(893,26039
WFCB_p SymTypeWeightParse(926,27087
double SymTypeWeightCompute(969,28336
WFCB_p ClauseWeightAgeInit(999,29099
WFCB_p ClauseWeightAgeParse(1027,29881
double ClauseWeightAgeCompute(1062,30817
WFCB_p StaggeredWeightInit(1093,31606
WFCB_p StaggeredWeightParse(1117,32267
double StaggeredWeightCompute(1145,32950
void VarWeightExit(1170,33481

HEURISTICS/che_wfcb.c,84
WFCB_p WFCBAlloc(60,1785
void WFCBFree(86,2351
void ClauseAddEvaluation(109,2847

HEURISTICS/che_wfcbadmin.c,411
char* WeightFunParseFunNames[WeightFunParseFunNames32,822
static WeightFunParseFun parse_fun_array[parse_fun_array68,1527
WFCBAdmin_p WFCBAdminAlloc(132,3340
void WFCBAdminFree(156,3879
long WFCBAdminAddWFCB(193,4602
WFCB_p WFCBAdminFindWFCB(224,5409
WeightFunParseFun GetWeightFunParseFun(260,6144
WFCB_p WeightFunParse(288,6660
char* WeightFunDefParse(319,7405
long WeightFunDefListParse(363,8480

INOUT/cio_basicparser.c,447
long ParseInt(64,1972
#define DECIMAL_DOT 106,2891
#define DECIMAL_DOT 108,2926
double ParseFloat(111,2969
StrNumType ParseNumString(179,4719
long DDArrayParse(264,6978
#define PLAIN_FILE_TOKENS 309,7975
char* ParseFilename(311,8042
char* ParsePlainFilename(341,8730
char* ParseBasicInclude(369,9457
char* ParseDottedId(397,10084
void AcceptDottedId(428,10930
char* ParseContinous(456,11607
void ParseSkipParenthesizedExpr(489,12350

INOUT/cio_commandline.c,569
static char* print_start_of_str(60,1870
static bool shift_array_left(129,3190
static Opt_p find_long_opt(159,3711
static Opt_p find_short_opt(198,4460
static Opt_p process_long_option(227,5118
static Opt_p process_short_option(301,6834
static void append_option_desc(386,9009
CLState_p CLStateAlloc(425,10028
void CLStateFree(460,10814
int CLStateInsertArg(482,11363
Opt_p CLStateGetOpt(511,12169
double CLStateGetFloatArg(561,13328
long CLStateGetIntArg(605,14269
bool CLStateGetBoolArg(649,15244
void PrintOption(686,16115
void PrintOptions(768,17878

INOUT/cio_fileops.c,358
void FileOpenErrorPrint(60,1782
FILE* InputOpen(83,2475
void  InputClose(123,3182
long  FileLoad(150,3755
long ConcatFiles(185,4493
long CopyFile(220,5184
void FileRemove(244,5607
void  FilePrint(268,6196
char* FileNameDirName(297,6884
char *FileFindBaseName(FileFindBaseName330,7468
char* FileNameBaseName(360,8116
char* FileNameStrip(384,8637

INOUT/cio_filevars.c,254
FileVars_p FileVarsAlloc(60,1810
void FileVarsFree(82,2255
long FileVarsParse(118,3134
long FileVarsReadFromFile(175,4512
bool FileVarsGetBool(203,5217
bool FileVarsGetInt(252,6441
bool FileVarsGetStr(304,7723
bool FileVarsGetIdentifier(334,8468

INOUT/cio_initio.c,66
char* TPTP_dir 32,805
void InitIO(63,1823
void ExitIO(100,2480

INOUT/cio_multiplexer.c,270
TCPChannel_p  TCPChannelAlloc(60,1782
void TCPChannelFree(84,2272
void TCPChannelClose(120,2961
bool TCPChannelHasInMsg(141,3464
void TCPChannelSendMsg(169,4005
void TCPChannelSendStr(186,4408
MsgStatus TCPChannelRead(206,4910
MsgStatus TCPChannelWrite(244,5796

INOUT/cio_network.c,593
#define TCP_BACKLOG 37,963
#define TCP_BUF_SIZE 38,986
int create_server_sock_nofail(64,1844
int create_client_sock_nofail(104,2765
TCPMsg_p  TCPMsgAlloc(159,4058
void TCPMsgFree(182,4531
TCPMsg_p TCPMsgPack(201,4940
char* TCPMsgUnpack(230,5675
MsgStatus TCPMsgWrite(253,6236
MsgStatus TCPMsgRead(292,7251
MsgStatus TCPMsgSend(362,8889
TCPMsg_p TCPMsgRecv(393,9447
MsgStatus TCPStringSend(427,10133
char* TCPStringRecv(455,10754
void TCPStringSendX(484,11339
char* TCPStringRecvX(502,11699
int CreateServerSock(523,12191
void Listen(549,12744
int CreateClientSock(575,13313

INOUT/cio_output.c,186
long  OutputLevel 36,932
FILE* GlobalOut;37,955
int   GlobalOutFD 38,972
void OpenGlobalOut(69,2039
FILE* OutOpen(90,2507
void OutClose(131,3482
void PrintDashedStatuses(167,4364

INOUT/cio_scanner.c,873
static TokenRepCell token_print_rep[token_print_rep32,798
static void scan_white(102,3632
static void scan_ident(126,4178
static void scan_int(175,5319
static void scan_line_comment(208,6018
static void scan_C_comment(234,6639
static void scan_string(263,7381
static Token_p scan_token(313,8690
Token_p scan_token_follow_includes(517,14111
static Token_p scan_real_token(581,15778
bool str_n_element(615,16628
char* PosRep(659,17594
char* TokenPosRep(704,18703
char* DescribeToken(724,19230
void PrintToken(762,20006
Scanner_p CreateScanner(790,20864
void DestroyScanner(895,24334
bool TestTok(932,25398
bool TestId(953,25945
bool TestIdnum(976,26434
VOLATILE void AktTokenError(1014,27180
void CheckInpTok(1048,28022
void CheckInpTokNoSkip(1081,28829
void CheckInpId(1115,29695
void NextToken(1146,30548
Scanner_p ScannerParseInclude(1176,31365

INOUT/cio_signals.c,433
rlim_t                ScheduleTimeLimit 33,861
rlim_t                SystemTimeLimit 34,906
rlim_t                SoftTimeLimit 35,963
rlim_t                HardTimeLimit 36,1020
VOLATILE sig_atomic_t TimeIsUp 37,1077
VOLATILE sig_atomic_t TimeLimitIsSoft 38,1122
static VOLATILE sig_atomic_t fatal_error_in_progress 39,1167
bool                  SilentTimeOut 40,1225
void ESignalSetup(72,2264
void ESignalHandler(95,2814

INOUT/cio_simplestuff.c,28
bool ReadTextBlock(64,1980

INOUT/cio_streams.c,377
const StreamType StreamTypeFile 36,1094
const StreamType StreamTypeInternalString 37,1134
const StreamType StreamTypeUserString 40,1263
const StreamType StreamTypeOptionString 42,1338
static int read_char(68,2225
Stream_p CreateStream(121,3312
void DestroyStream(189,4815
int StreamNextChar(223,5699
Stream_p OpenStackedInput(256,6462
void CloseStackedInput(283,7056

INOUT/cio_tempfile.c,192
static StrTree_p temp_file_store 31,798
void TempFileCleanup(61,1813
void TempFileRegister(88,2508
char* TempFileName(112,3041
char* TempFileCreate(157,3942
void TempFileRemove(187,4455

LEARN/cle_annotations.c,337
Annotation_p AnnotationAlloc(60,1834
void AnnotationFree(85,2339
void AnnotationTreeFree(107,2765
Annotation_p AnnotationParse(133,3399
long AnnotationListParse(187,4680
void AnnotationPrint(236,5881
void AnnotationListPrint(264,6463
void AnnotationCombine(292,7128
long AnnotationMerge(335,8426
double AnnotationEval(383,9529

LEARN/cle_annoterms.c,619
void annotation_collect_max(53,1565
void annotation_normalize(83,2288
AnnoTerm_p AnnoTermAlloc(121,3245
void AnnoTermFree(144,3793
AnnoTerm_p AnnoTermParse(165,4252
void AnnoTermPrint(193,4878
void AnnoTermRecToFlatEnc(215,5463
AnnoSet_p AnnoSetAlloc(236,5933
void AnnoSetFree(265,6572
bool AnnoSetAddTerm(298,7377
AnnoSet_p AnnoSetParse(346,8490
void AnnoSetPrint(373,9063
bool AnnoSetComputePatternSubst(402,9769
long AnnoSetRemoveByIdent(437,10701
long AnnoSetRemoveExceptIdentList(492,12132
long AnnoSetFlatten(563,13891
void AnnoSetNormalizeFlatAnnos(624,15411
long AnnoSetRecToFlatEnc(669,16531

LEARN/cle_classification.c,99
double TSMTermClassify(61,1838
bool TSMClassifiedTermCheck(84,2451
long TSMClassifySet(105,2982

LEARN/cle_clauseenc.c,193
Term_p FlatEncodeClauseListRep(61,1880
Term_p   RecEncodeClauseListRep(106,3006
Term_p TermEncodeEqnList(157,4324
Term_p FlatRecodeRecClauseRep(191,5120
Term_p ParseClauseTermRep(256,6797

LEARN/cle_examplerep.c,455
void ExampleRepFree(60,1800
void ExampleRepPrint(80,2212
ExampleRep_p  ExampleRepParse(100,2717
ExampleSet_p ExampleSetAlloc(141,3636
void ExampleSetFree(165,4110
ExampleRep_p  ExampleSetFindName(194,4796
bool ExampleSetInsert(218,5332
ExampleRep_p ExampleSetExtract(254,6088
bool ExampleSetDeleteId(286,6816
bool ExampleSetDeleteName(314,7435
void ExampleSetPrint(342,8037
long ExampleSetParse(369,8714
long ExampleSetSelectByDist(421,10206

LEARN/cle_flatannoterms.c,437
FlatAnnoTerm_p FlatAnnoTermAlloc(61,1797
void FlatAnnoTermPrint(89,2471
FlatAnnoSet_p FlatAnnoSetAlloc(109,3007
void FlatAnnoSetFree(131,3427
void FlatAnnoSetPrint(161,4078
bool FlatAnnoSetAddTerm(187,4773
long FlatAnnoSetTranslate(229,5930
long FlatAnnoSetSize(277,7150
long FlatAnnoTermFlatten(311,7937
long FlatAnnoSetFlatten(352,8912
double FlatAnnoSetEvalAverage(381,9568
double FlatAnnoSetEvalWeightedAverage(420,10350

LEARN/cle_indexfunctions.c,421
char* IndexFunNames[IndexFunNames33,862
static long index_counter 49,1078
static Term_p any_term_top(72,1882
int GetIndexType(116,2964
char* GetIndexName(145,3549
IndexTerm_p IndexTermAlloc(195,4498
void IndexTermFree(220,4993
int IndexTermCompareFun(241,5402
TSMIndex_p TSMIndexAlloc(282,6271
void TSMIndexFree(339,7414
long TSMIndexFind(387,8365
long TSMIndexInsert(476,10509
void TSMIndexPrint(594,13387

LEARN/cle_kbdesc.c,140
KBDesc_p KBDescAlloc(61,1784
void KBDescFree(85,2340
void KBDescPrint(103,2691
KBDesc_p KBDescParse(129,3353
char* KBFileName(168,4330

LEARN/cle_kbinsert.c,103
AnnoTerm_p ParseExampleClause(61,1835
long KBAxiomsInsert(154,4314
void KBParseExampleFile(181,5019

LEARN/cle_numfeatures.c,339
static double relative_difference(54,1580
static double arity_distr_distance(84,2261
static int parse_sig_distrib(118,3016
Features_p FeaturesAlloc(159,4017
void FeaturesFree(181,4497
void ComputeClauseSetNumFeatures(203,5082
void NumFeaturesPrint(321,8489
Features_p NumFeaturesParse(363,9439
double NumFeatureDistance(402,10392

LEARN/cle_patterns.c,1265
static FunCode get_new_fun_symbol(54,1524
FunCode pat_symb_comp_val(81,2186
static CompareResult pat_symbol_compare(130,3583
static void generate_print_rep(165,4399
static CompareResult pat_term_size_compare(197,5403
static void initialize_lit_list(286,7298
static void mark_minimal_literals(334,8574
static int collect_choices(463,12470
static bool complete_state(516,13888
static long lit_list_rep_pattern(561,15225
PatternSubst_p PatternSubstAlloc(655,17865
PatternSubst_p PatternDefaultSubstAlloc(684,18783
void PatternSubstFree(712,19369
bool PatSubstExtend(737,19980
PatternSubst_p PatternSubstCopy(785,21002
FunCode PatSymbValue(812,21728
bool PatSymbolIsBound(844,22433
bool PatternSubstBacktrack(863,22901
bool PatternTermCompute(917,24178
CompareResult PatternTermCompare(950,24862
bool PatternTermPairCompute(1006,26018
CompareResult PatternTermPairCompare(1040,26788
bool PatternLitListCompute(1111,28171
CompareResult PatternLitListCompare(1147,29216
long PatternClauseCompute(1195,30521
void PatternTermPrint(1226,31241
void PatternEqnPrint(1284,32358
void PatternClausePrint(1328,33502
PStack_p DebugPatternClauseToStack(1362,34399
Term_p PatternTranslateSig(1392,35189
FunCode PatternSubstGetOriginalSymbol(1490,37240

LEARN/cle_termtops.c,303
static void term_del_prop_level(55,1624
static void term_set_prop_at_level(98,2606
static Term_p rek_term_top(141,3482
static Term_p alt_rek_term_top(186,4447
Term_p term_top_marked(240,5609
Term_p TermTop(299,6981
Term_p AltTermTop(321,7541
Term_p CSTermTop(353,8293
Term_p ESTermTop(389,9136

LEARN/cle_tsm.c,1025
char* TSMTypeNames[TSMTypeNames31,753
static double dist_combi_entropy(64,1650
static double distribution_entropy(119,2882
static double evaluate_index(164,3920
static double evaluate_index_desc(207,5090
static double evaluate_top_index(242,6058
static double compute_list_entropy(302,7417
static double tsm_rec_eval(352,8476
static double tsm_rec_eval_no_weight(401,9653
static TSM_p tsmbasealloc(459,10904
static void tsmcomplete(484,11453
double TSMRemainderEntropy(524,12657
double TSMFlatAnnoSetEntropy(559,13505
long TSMPartitionSet(613,14781
IndexType TSMFindOptimalIndex(667,16060
long TSMCreateSubtermSet(787,18504
TSMAdmin_p TSMAdminAlloc(821,19302
void TSMAdminFree(862,20355
void TSMAdminBuildTSM(909,21361
TSM_p TSMCreate(1003,24173
void TSMFree(1047,25217
TSA_p TSACreate(1083,25839
void TSAFree(1174,28003
double TSMEvalTerm(1207,28664
double TSMComputeClassificationLimit(1233,29279
double TSMComputeAverageEval(1292,30572
void TSMPrintFlat(1331,31425
void TSMPrintRek(1360,31983

LEARN/cle_tsmio.c,337
static double selection_weights[selection_weights31,761
static double get_default_eval(57,1676
static double rec_get_highest_weight(122,3481
static double level_get_highest_weight(159,4233
static double get_highest_weight(190,4843
double ExampleSetPrepare(242,6166
double ExampleSetFromKB(280,7406
TSMAdmin_p TSMFromKB(329,8686

ORDERINGS/cto_cmpcache.c,99
static bool prepare_key(55,1606
CompareResult CmpCacheFind(91,2470
bool CmpCacheInsert(137,3374

ORDERINGS/cto_kbo.c,363
static __inline__ int getweight(86,2651
static int gettermweight(113,3208
static CompareResult kbocomparevars(150,4063
static CompareResult kbogtrnew(199,5191
CompareResult KBOCompare(318,7982
CompareResult KBOVarCompare(522,12279
CompareResult KBOVarCompare(585,13484
bool KBOGreater(652,14845
bool KBOVarGreater(675,15431
bool KBOVarGreater(719,16296

ORDERINGS/cto_kbodata.c,82
KBOLin_p KBOLinAlloc(62,1894
void KBOLinFree(88,2410
void KBOLinReset(107,2726

ORDERINGS/cto_kbolin.c,299
static void inc_vb(67,2046
static void dec_vb(105,2865
static void local_vb_update(143,3685
static bool mfyvwbc(184,4417
static void mfyvwb(220,5123
static CompareResult kbo6cmplex(249,5820
static CompareResult kbo6cmp(286,6669
CompareResult KBO6Compare(406,9647
bool KBO6Greater(437,10439

ORDERINGS/cto_lpo.c,787
long LPORecursionDepthLimit 50,1778
static bool lpo_term_dominates_args(92,3091
static bool lpo_subterm_dominates_term(121,3686
static CompareResult lpo_lex_greater(156,4537
static CompareResult lpo_greater(207,5601
static bool lpo4_alpha(330,8701
static bool lpo4_majo(359,9429
static bool lpo4_lex_ma(386,10061
static bool lpo4_greater(424,11071
static bool lpo4_copy_alpha(498,13082
static bool lpo4_copy_majo(525,13718
static bool lpo4_copy_lex_ma(550,14289
static bool lpo4_copy_greater(582,15050
bool LPOGreater(628,16273
CompareResult LPOCompare(652,17005
bool LPO4Greater(711,18264
CompareResult LPO4Compare(736,18894
bool LPO4GreaterCopy(777,19844
CompareResult LPO4CompareCopy(830,20851
bool LPOGreaterCopy(897,22179
CompareResult LPOCompareCopy(949,23196

ORDERINGS/cto_lpo_debug.c,406
static CompareResult lpofungtr(89,2896
static CompareResult lpofuneq(141,4185
static CompareResult lpocheckarg(213,5779
static CompareResult lpogtr(244,6550
static CompareResult lpogtrcompvars(330,8659
static CompareResult lpogtrfuneq(378,9765
static CompareResult lpogtrcheckarg(435,11002
CompareResult D_LPOCompare(475,12174
bool D_LPOGreater(557,14540
CompareResult D_LPOCompareVars(584,15283

ORDERINGS/cto_ocb.c,380
char* TONames[TONames32,818
bool ocb_trans_compute(78,1962
static void alloc_precedence(128,3042
OCB_p OCBAlloc(163,3955
void OCBFree(238,5575
void OCBDebugPrint(294,7126
PStackPointer OCBPrecedenceAddTuple(374,9075
bool OCBPrecedenceBacktrack(440,10639
FunCode OCBFindMinConst(474,11623
FunCode OCBTermMaxFunCode(515,12629
CompareResult OCBFunCompareMatrix(558,13585

ORDERINGS/cto_orderings.c,264
bool TOGreater(62,1795
CompareResult TOCompare(140,3848
CompareResult TOCompareSymbolParse(222,6059
PStackPointer TOSymbolComparisonChainParse(262,6864
PStackPointer TOPrecedenceParse(324,8627
void TOSymbolWeightParse(358,9391
long TOWeightsParse(386,10049

PCL2/pcl_analysis.c,242
int pcl_example_cmp(58,1745
long PCLExprProofDistance(116,3245
long PCLStepProofDistance(167,4499
void PCLProtProofDistance(198,5257
void PCLExprUpdateGRefs(226,5853
void PCLProtUpdateGRefs(310,7967
long PCLProtSelectExamples(342,8865

PCL2/pcl_expressions.c,214
PCLExpr_p PCLExprAlloc(60,1764
void PCLExprFree(84,2236
void PCLMiniExprFree(133,3144
PCLExpr_p PCLExprParse(180,4074
void PCLExprPrint(412,9279
void PCLExprPrintTSTP(585,13484
bool PCLStepExtract(800,18773

PCL2/pcl_idents.c,119
PCLId_p PCLIdParse(61,1838
void PCLIdPrintFormatted(95,2542
void PCLIdPrintTSTP(125,3358
int PCLIdCompare(162,4186

PCL2/pcl_lemmas.c,560
LemmaParam_p LemmaParamAlloc(61,1849
InferenceWeight_p InferenceWeightsAlloc(92,2773
void PCLExprUpdateRefs(128,4195
void PCLStepUpdateRefs(220,6365
void PCLProtUpdateRefs(245,6983
int PCLStepLemmaCmpWrapper(273,7538
int PCLStepLemmaCmp(295,8084
long PCLExprProofSize(327,8735
long PCLStepProofSize(378,9867
void PCLProtComputeProofSize(413,10690
float PCLStepComputeLemmaWeight(443,11417
PCLStep_p PCLProtComputeLemmaWeights(504,12955
long PCLProtSeqFindLemmas(543,14097
long PCLProtRecFindLemmas(588,15258
long PCLProtFlatFindLemmas(626,16270

PCL2/pcl_miniclauses.c,316
void MiniClauseFree(61,1807
void MiniClauseAddTerms(85,2403
MiniClause_p ClauseToMiniClause(122,3381
Clause_p MiniClauseToClause(163,4497
MiniClause_p MinifyClause(192,5183
Clause_p UnMinifyClause(213,5641
void MiniClausePrint(234,6140
void MiniClausePCLPrint(257,6697
void MiniClauseTSTPCorePrint(279,7244

PCL2/pcl_miniprotocol.c,511
PCLMiniProt_p PCLMiniProtAlloc(60,1845
void PCLMiniProtFree(86,2404
bool PCLMiniProtInsertStep(123,3205
PCLMiniStep_p PCLMiniProtFindStep(153,3918
PCLMiniStep_p PCLMiniProtExtractStep(175,4400
bool PCLMiniProtDeleteStep(207,5158
long PCLMiniProtParse(238,5853
void PCLMiniProtPrint(292,7241
void PCLMiniExprCollectPreconds(323,7902
bool PCLMiniProtMarkProofClauses(371,8885
void PCLMiniProtSetClauseProp(447,10498
void PCLMiniProtDelClauseProp(474,11071
void PCLMiniProtPrintProofClauses(504,11666

PCL2/pcl_ministeps.c,176
void PCLMiniStepFree(60,1790
PCLMiniStep_p PCLMiniStepParse(96,2476
void PCLMiniStepPrint(164,4073
void PCLMiniStepPrintTSTP(203,4946
void PCLMiniStepPrintFormat(253,6044

PCL2/pcl_positions.c,119
PCL2Pos_p PCL2PosAlloc(61,1781
void PCL2PosFree(85,2274
PCL2Pos_p PCL2PosParse(110,2760
void PCL2PosPrint(160,3757

PCL2/pcl_proofcheck.c,614
static bool pcl_run_prover(56,1630
static bool pcl_verify_eprover(100,2523
static void eqn_print_otter(153,3817
static void clause_print_otter(212,4862
static void clause_set_print_otter(249,5644
static bool pcl_verify_otter(274,6228
static void sig_print_dfg(338,7873
static void eqn_print_dfg(386,9031
static void clause_print_dfg(424,9811
static void clause_set_print_dfg(489,11256
static bool pcl_verify_spass(514,11836
long PCLCollectPreconds(577,13612
long PCLNegSkolemizeClause(620,14673
ClauseSet_p PCLGenerateCheck(664,15819
PCLCheckType PCLStepCheck(695,16536
long PCLProtCheck(755,17789

PCL2/pcl_propanalysis.c,306
static int pcl_weight_compare(55,1615
static int pcl_sc_compare(100,2460
static int pcl_litno_compare(144,3256
static int pcl_depth_compare(186,4018
static void pcl_prot_global_count(229,4814
PCLStep_p PCLProtFindMaxStep(316,7533
void PCLProtPropAnalyse(359,8343
void PCLProtPropDataPrint(386,9107

PCL2/pcl_protocol.c,694
PCLProt_p PCLProtAlloc(60,1799
void PCLProtFree(88,2382
PCLStep_p PCLProtExtractStep(123,3145
bool PCLProtDeleteStep(152,3807
PCLStep_p PCLProtFindStep(181,4412
void PCLProtSerialize(211,4945
long PCLProtParse(245,5675
void PCLProtPrintExtra(301,7074
bool PCLStepHasFOFParent(331,7781
long PCLProtStripFOF(371,8784
void PCLProtResetTreeData(424,10082
void PCLExprCollectPreconds(452,10683
PCLStep_p PCLExprGetQuotedArg(493,11520
bool PCLProtMarkProofClauses(525,12301
void PCLProtSetProp(585,13641
void PCLProtDelProp(612,14234
long PCLProtCountProp(639,14846
long PCLProtCollectPropSteps(671,15514
void PCLProtPrintPropClauses(702,16253
void PCLProtPrintExamples(736,17026

PCL2/pcl_steps.c,524
bool SupportShellPCL 36,1071
static void print_shell_pcl_warning(60,1901
void PCLStepFree(90,2708
PCLStepProperties PCLParseExternalType(128,3566
PCLStep_p PCLStepParse(178,4641
void PCLPrintExternalType(239,6149
void PCLStepPrintExtra(281,6993
char * PCLPropToTSTPType(350,8714
void PCLStepPrintTSTP(396,9637
void PCLStepPrintTPTP(458,10971
void PCLStepPrintLOP(498,11955
void PCLStepPrintFormat(532,12637
void PCLStepPrintExample(575,13818
int PCLStepIdCompare(610,14834
void PCLStepResetTreeData(631,15347

PROPOSITIONAL/cpr_dpll.c,158
long deactivate_clauses(55,1601
long shorten_clauses(75,1996
DPLLState_p DPLLStateAlloc(101,2622
void DPLLStateFree(145,3647
bool DPLLAssignVar(169,4275

PROPOSITIONAL/cpr_dpllformula.c,257
void dpll_form_add_atom_space(49,1361
DPLLFormula_p DPLLFormulaAlloc(97,2672
void DPLLFormulaFree(121,3168
void DPLLFormulaPrint(154,3836
void DPLLRegisterClauseLiteral(202,4945
void DPLLFormulaInsertClause(244,6029
void DPLLFormulaParseLOP(268,6603

PROPOSITIONAL/cpr_propclauses.c,208
int p_atom_compare(56,1657
void DPLLClauseFree(101,2614
DPLLClause_p DPLLClauseFromClause(121,3192
bool DPLLClauseNormalize(177,4729
void DPLLClausePrintLOP(221,5672
void DPLLClausePrintDimacs(267,6927

PROPOSITIONAL/cpr_propsig.c,203
PropSig_p PropSigAlloc(61,1874
void PropSigFree(85,2430
PLiteralCode PropSigGetAtomEnc(106,2919
PLiteralCode PropSigInsertAtom(132,3516
char* PropSigGetAtomName(167,4308
void PropSigPrint(189,4821

PROPOSITIONAL/cpr_varset.c,125
AtomSet_p AtomSetAlloc(60,1778
void AtomSetFree(84,2283
PLiteralCode AtomSetExtract(106,2735
void AtomSetInsert(132,3274

PROVER/checkproof.c,550
#define NAME 37,981
   OPT_NOOPT=41,1026
   OPT_HELP,42,1042
   OPT_VERSION,43,1055
   OPT_VERBOSE,44,1071
   OPT_OUTPUT,45,1087
   OPT_SILENT,46,1102
   OPT_OUTPUTLEVEL,47,1117
   OPT_PROVERTYPE,48,1137
   OPT_EXECUTABLE,49,1156
   OPT_TIME_LIMIT50,1175
}OptionCodes;OptionCodes51,1193
OptCell opts[opts59,1433
char       *outname outname126,3400
long       time_limit 127,3431
char       *executable executable128,3460
ProverType prover 129,3491
int main(144,4054
CLState_p process_options(236,6145
void print_help(310,7701

PROVER/classify_problem.c,2114
#define NAME 38,1063
   OPT_NOOPT=42,1111
   OPT_HELP,43,1127
   OPT_VERSION,44,1140
   OPT_VERBOSE,45,1156
   OPT_OUTPUT,46,1172
   OPT_PARSE_FEATURES,47,1187
   OPT_TPTP_PARSE,48,1210
   OPT_TPTP_PRINT,49,1229
   OPT_TPTP_FORMAT,50,1248
   OPT_TSTP_PARSE,51,1268
   OPT_TSTP_PRINT,52,1287
   OPT_TSTP_FORMAT,53,1306
   OPT_RAW_CLASS,54,1326
   OPT_GEN_TPTP_HEADER,55,1344
   OPT_NO_PREPROCESSING,56,1368
   OPT_EQ_UNFOLD_LIMIT,57,1393
   OPT_EQ_UNFOLD_MAXCLAUSES,58,1417
   OPT_NO_EQ_UNFOLD,59,1446
   OPT_DEF_CNF,60,1467
   OPT_MASK,61,1483
   OPT_RAW_MASK,62,1496
   OPT_NGU_ABSOLUTE,63,1513
   OPT_NGU_FEW_LIMIT,64,1534
   OPT_NGU_MANY_LIMIT,65,1556
   OPT_NGU_FEW_COUNT,66,1579
   OPT_NGU_MANY_COUNT,67,1601
   OPT_GPC_ABSOLUTE,68,1624
   OPT_GPC_FEW_LIMIT,69,1645
   OPT_GPC_MANY_LIMIT,70,1667
   OPT_GPC_FEW_COUNT,71,1690
   OPT_GPC_MANY_COUNT,72,1712
   OPT_AXIOM_MANY_LIMIT,73,1735
   OPT_AXIOM_SOME_LIMIT,74,1760
   OPT_LIT_MANY_LIMIT,75,1785
   OPT_LIT_SOME_LIMIT,76,1808
   OPT_TERM_MEDIUM_LIMIT,77,1831
   OPT_TERM_LARGE_LIMIT,78,1857
   OPT_FAR_SUM_MEDIUM_LIMIT,79,1882
   OPT_FAR_SUM_LARGE_LIMIT,80,1911
   OPT_MAX_DEPTH_MEDIUM_LIMIT,81,1939
   OPT_MAX_DEPTH_DEEP_LIMIT,82,1970
   OPT_SIG_MEDIUM_LIMIT,83,1999
   OPT_SIG_LARGE_LIMIT,84,2024
   OPT_PREDC_MEDIUM_LIMIT,85,2048
   OPT_PREDC_LARGE_LIMIT,86,2075
   OPT_PRED_MEDIUM_LIMIT,87,2101
   OPT_PRED_LARGE_LIMIT,88,2127
   OPT_FUNC_MEDIUM_LIMIT,89,2152
   OPT_FUNC_LARGE_LIMIT,90,2178
   OPT_FUN_MEDIUM_LIMIT,91,2203
   OPT_FUN_LARGE_LIMIT92,2228
}OptionCodes;OptionCodes93,2251
OptCell opts[opts101,2491
char *outname outname409,12294
IOFormat parse_format 413,12384
bool     tptp_header 414,12423
long     eqdef_maxclauses 418,12563
int      eqdef_incrlimit 419,12617
char* parse_raw_feature_line(452,13797
char* parse_feature_line(479,14510
void process_raw_feature_files(504,15141
void process_feature_files(542,16188
void print_tptp_header(582,17305
void do_raw_classification(695,20898
int main(721,21607
CLState_p process_options(844,25114
void print_help(1035,30798

PROVER/direct_examples.c,418
#define NAME 36,975
   OPT_NOOPT=40,1025
   OPT_HELP,41,1041
   OPT_VERSION,42,1054
   OPT_VERBOSE,43,1070
   OPT_OUTPUT,44,1086
   OPT_NEG_NO,45,1101
   OPT_NEG_PROP 46,1116
}OptionCodes;OptionCodes47,1133
OptCell opts[opts55,1373
char   *outname outname96,2356
double neg_proportion 97,2380
long   neg_examples 98,2407
int main(112,2962
CLState_p process_options(196,5159
void print_help(241,6130

PROVER/e_axfilter.c,804
#define NAME 40,1096
   OPT_NOOPT=44,1146
   OPT_HELP,45,1162
   OPT_VERSION,46,1175
   OPT_VERBOSE,47,1191
   OPT_OUTPUT,48,1207
   OPT_FILTER,49,1222
   OPT_DUMP_FILTER,50,1237
   OPT_PRINT_STATISTICS,51,1257
   OPT_SILENT,52,1282
   OPT_OUTPUTLEVEL,53,1297
   OPT_LOP_PARSE,54,1317
   OPT_LOP_FORMAT,55,1335
   OPT_TPTP_PARSE,56,1354
   OPT_TPTP_FORMAT,57,1373
   OPT_TSTP_PARSE,58,1393
   OPT_TSTP_FORMAT,59,1412
   OPT_DUMMY60,1435
}OptionCodes;OptionCodes61,1448
OptCell opts[opts70,1689
IOFormat          parse_format 179,4425
char              *outname outname180,4470
char              *filtername filtername181,4508
bool              dumpfilter 182,4546
void filter_problem(211,5625
int main(259,6785
CLState_p process_options(357,9149
void print_help(415,10430

PROVER/e_client.c,561
#define NAME 43,1150
   OPT_NOOPT=47,1198
   OPT_HELP,48,1214
   OPT_VERSION,49,1227
   OPT_VERBOSE,50,1243
   OPT_OUTPUT,51,1259
   OPT_SERVER,52,1274
   OPT_PORT,53,1289
   OPT_OUTPUTLEVEL,54,1302
   OPT_DUMMY55,1322
}OptionCodes;OptionCodes56,1335
OptCell opts[opts65,1576
IOFormat          parse_format 115,2893
char              *outname outname116,2938
char              *server server117,2976
int               port 118,3021
void tcp_msg_wait(146,3967
int main(184,4673
CLState_p process_options(258,6350
void print_help(307,7521

PROVER/e_ltb_runner.c,572
#define NAME 40,1068
   OPT_NOOPT=44,1120
   OPT_HELP,45,1136
   OPT_VERSION,46,1149
   OPT_VERBOSE,47,1165
   OPT_OUTPUT,48,1181
   OPT_INTERACTIVE,49,1196
   OPT_PRINT_STATISTICS,50,1216
   OPT_SILENT,51,1241
   OPT_OUTPUTLEVEL,52,1256
   OPT_GLOBAL_WTCLIMIT,53,1276
   OPT_DUMMY54,1300
}OptionCodes;OptionCodes55,1313
OptCell opts[opts64,1554
char              *outname outname126,3420
long              total_wtc_limit 127,3462
bool              interactive 128,3501
int main(141,4071
CLState_p process_options(255,7043
void print_help(301,8047

PROVER/e_server.c,835
#define NAME 43,1186
   OPT_NOOPT=47,1234
   OPT_HELP,48,1250
   OPT_VERSION,49,1263
   OPT_VERBOSE,50,1279
   OPT_OUTPUT,51,1295
   OPT_FILTER,52,1310
   OPT_PROVER,53,1325
   OPT_SERVICE_PORT,54,1340
   OPT_PRINT_STATISTICS,55,1361
   OPT_SILENT,56,1386
   OPT_OUTPUTLEVEL,57,1401
   OPT_LOP_PARSE,58,1421
   OPT_LOP_FORMAT,59,1439
   OPT_TPTP_PARSE,60,1458
   OPT_TPTP_FORMAT,61,1477
   OPT_TSTP_PARSE,62,1497
   OPT_TSTP_FORMAT,63,1516
   OPT_DUMMY64,1539
}OptionCodes;OptionCodes65,1552
OptCell opts[opts74,1793
IOFormat          parse_format 190,4762
char              *outname outname191,4807
char              *filtername filtername192,4845
char              *prover prover193,4883
int               port 194,4926
int main(222,5763
CLState_p process_options(372,9381
void print_help(438,10979

PROVER/edpll.c,559
#define NAME 34,905
   OPT_NOOPT=38,942
   OPT_HELP,39,958
   OPT_VERSION,40,971
   OPT_VERBOSE,41,987
   OPT_OUTPUT,42,1003
   OPT_SILENT,43,1018
   OPT_OUTPUTLEVEL,44,1033
   OPT_TPTP_PARSE,45,1053
   OPT_DIMACS_PRINT,46,1072
   OPT_MEM_LIMIT,47,1093
   OPT_CPU_LIMIT,48,1111
   OPT_SOFTCPU_LIMIT,49,1129
}OptionCodes;OptionCodes50,1151
OptCell opts[opts58,1391
char   *outname outname139,3819
IOFormat parse_format 140,3843
bool   dimacs_format 141,3878
int main(154,4435
CLState_p process_options(223,6020
void print_help(353,9423

PROVER/eground.c,1171
#define NAME 41,1138
   OPT_NOOPT=45,1177
   OPT_HELP,46,1193
   OPT_VERSION,47,1206
   OPT_VERBOSE,48,1222
   OPT_OUTPUT,49,1238
   OPT_SILENT,50,1253
   OPT_OUTPUTLEVEL,51,1268
   OPT_PRINT_STATISTICS,52,1288
   OPT_RUSAGE_INFO,53,1313
   OPT_SUPRESS_RESULT,54,1333
   OPT_TPTP_PARSE,55,1356
   OPT_TPTP_PRINT,56,1375
   OPT_TPTP_FORMAT,57,1394
   OPT_TSTP_PARSE,58,1414
   OPT_TSTP_PRINT,59,1433
   OPT_TSTP_FORMAT,60,1452
   OPT_DIMACS_PRINT,61,1472
   OPT_SPLIT_TRIES,62,1493
   OPT_DISABLE_UNIT_SUBSUMPTION,63,1513
   OPT_DISABLE_UNIT_RESOLUTION,64,1546
   OPT_DISABLE_TAUTOLOGY_DETECTION,65,1578
   OPT_MEM_LIMIT,66,1614
   OPT_CPU_LIMIT,67,1632
   OPT_SOFTCPU_LIMIT,68,1650
   OPT_PART_COMPLETE,69,1672
   OPT_GIVE_UP,70,1694
   OPT_CONSTRAINTS,71,1710
   OPT_LOCAL_CONSTRAINTS,72,1730
   OPT_FIX_MINISAT73,1756
}OptionCodes;OptionCodes74,1775
OptCell opts[opts82,2015
char   *outname outname308,8881
IOFormat parse_format 309,8905
bool   dimacs_format 310,8940
int    split_tries 311,8970
bool   unit_sub 312,8994
long   give_up 322,9286
int main(337,9890
CLState_p process_options(605,16876
void print_help(802,22163

PROVER/ekb_create.c,387
#define NAME 35,926
   OPT_NOOPT=39,971
   OPT_HELP,40,987
   OPT_VERSION,41,1000
   OPT_VERBOSE,42,1016
   OPT_NEG_NO,43,1032
   OPT_NEG_PROP,44,1047
   OPT_SELECT_EVAL45,1064
}OptionCodes;OptionCodes46,1083
OptCell opts[opts54,1323
double neg_proportion 90,2203
long   neg_examples 91,2232
int main(105,2789
CLState_p process_options(215,5620
void print_help(257,6536

PROVER/ekb_delete.c,358
#define NAME 32,871
#define VERSION 33,900
   OPT_NOOPT=37,941
   OPT_HELP,38,957
   OPT_VERSION,39,970
   OPT_VERBOSE,40,986
   OPT_KB,41,1002
   OPT_NAME42,1013
}OptionCodes;OptionCodes43,1025
OptCell opts[opts51,1265
char* kb_name 79,1810
char* ex_name;80,1841
int main(94,2384
CLState_p process_options(210,5474
void print_help(247,6166

PROVER/ekb_ginsert.c,318
   OPT_NOOPT=40,1020
   OPT_HELP,41,1036
   OPT_VERSION,42,1049
   OPT_VERBOSE,43,1065
   OPT_KB,44,1081
   OPT_NAME45,1092
}OptionCodes;OptionCodes46,1104
OptCell opts[opts54,1344
char* ex_name 90,2195
char* kb_name 91,2217
int main(105,2776
CLState_p process_options(311,8498
void print_help(348,9196

PROVER/ekb_insert.c,340
#define NAME 37,1084
   OPT_NOOPT=41,1129
   OPT_HELP,42,1145
   OPT_VERSION,43,1158
   OPT_VERBOSE,44,1174
   OPT_KB,45,1190
   OPT_NAME46,1201
}OptionCodes;OptionCodes47,1213
OptCell opts[opts55,1453
char* ex_name 91,2304
char* kb_name 92,2326
int main(106,2885
CLState_p process_options(257,6776
void print_help(294,7468

PROVER/enormalizer.c,972
#define NAME 42,1262
   OPT_NOOPT=46,1305
   OPT_HELP,47,1321
   OPT_VERSION,48,1334
   OPT_VERBOSE,49,1350
   OPT_TERMSOURCE,50,1366
   OPT_CLAUSESOURCE,51,1385
   OPT_FORMULASOURCE,52,1406
   OPT_OUTPUT,53,1428
   OPT_SILENT,54,1443
   OPT_OUTPUTLEVEL,55,1458
   OPT_PRINT_STATISTICS,56,1478
   OPT_RUSAGE_INFO,57,1503
   OPT_TPTP_PARSE,58,1523
   OPT_TPTP_PRINT,59,1542
   OPT_TPTP_FORMAT,60,1561
   OPT_TSTP_PARSE,61,1581
   OPT_TSTP_PRINT,62,1600
   OPT_TSTP_FORMAT,63,1619
   OPT_MEM_LIMIT,64,1639
   OPT_CPU_LIMIT,65,1657
   OPT_SOFTCPU_LIMIT66,1675
}OptionCodes;OptionCodes67,1696
OptCell opts[opts75,1936
char *outname outname244,6825
IOFormat parse_format 248,6921
bool   print_statistics 249,6956
long   give_up 252,7046
long build_rw_system(281,8087
void process_terms(319,9079
void process_clauses(356,10125
void process_formulas(394,11206
int main(433,12340
CLState_p process_options(567,15770
void print_help(731,20129

PROVER/epclanalyse.c,410
#define NAME 38,996
   OPT_NOOPT=42,1042
   OPT_HELP,43,1058
   OPT_VERSION,44,1071
   OPT_VERBOSE,45,1087
   OPT_OUTPUT,46,1103
   OPT_SILENT47,1118
}OptionCodes;OptionCodes48,1132
OptCell opts[opts56,1372
char       *outname outname89,1987
long       time_limit 90,2018
char       *executable executable91,2047
int main(106,2607
CLState_p process_options(184,4404
void print_help(221,5100

PROVER/epclextract.c,650
#define NAME 39,1044
   OPT_NOOPT=43,1090
   OPT_HELP,44,1106
   OPT_VERSION,45,1119
   OPT_VERBOSE,46,1135
   OPT_FAST,47,1151
   OPT_PASS_COMMENTS,48,1164
   OPT_TSTP_PRINT,49,1186
   OPT_COMPETITION,50,1205
   OPT_NO_EXTRACT,51,1225
   OPT_OUTPUT,52,1244
   OPT_SILENT,53,1259
   OPT_OUTPUTLEVEL54,1274
}OptionCodes;OptionCodes55,1293
OptCell opts[opts63,1533
char       *outname outname132,3222
long       time_limit 133,3253
char       *executable executable134,3282
bool       fast_extract 135,3313
OutputFormatType output_format 139,3442
int main(153,4015
CLState_p process_options(315,7318
void print_help(368,8386

PROVER/epcllemma.c,1908
#define NAME 37,985
   OPT_NOOPT=41,1029
   OPT_HELP,42,1045
   OPT_VERSION,43,1058
   OPT_VERBOSE,44,1074
   OPT_OUTPUT,45,1090
   OPT_SILENT,46,1105
   OPT_OUTPUTLEVEL,47,1120
   OPT_TPTP_PRINT,48,1140
   OPT_TPTP_FORMAT,49,1159
   OPT_TSTP_PRINT,50,1179
   OPT_TSTP_FORMAT,51,1198
   OPT_LOP_PRINT,52,1218
   OPT_ITERATIVE_LEMMAS,53,1236
   OPT_RECURSIVE_LEMMAS,54,1261
   OPT_FLAT_LEMMAS,55,1286
   OPT_ABS_LEMMA_LIMIT,56,1306
   OPT_REL_LEMMA_LIMIT,57,1330
   OPT_ABS_LEMQUAL_LIMIT,58,1354
   OPT_REL_LEMQUAL_LIMIT,59,1380
   OPT_LEMMA_TREE_BASE_W,60,1406
   OPT_LEMMA_SIZE_BASE_W,61,1432
   OPT_LEMMA_ACT_PM_W,62,1458
   OPT_LEMMA_O_GEN_W,63,1481
   OPT_LEMMA_ACT_SIMPL_W,64,1503
   OPT_LEMMA_PAS_SIMPL_W,65,1529
   OPT_NO_REFERENCE_WEIGHTS,66,1555
   OPT_LEMMA_HORN_BONUS,67,1584
   OPT_INITIAL_WEIGHT,68,1609
   OPT_QUOTE_WEIGHT,69,1632
   OPT_PARAMOD_WEIGHT,70,1653
   OPT_ERESOLUTION_WEIGHT,71,1676
   OPT_EFACTORING_WEIGHT,72,1703
   OPT_SIMPLIFYREFLECT_WEIGHT,73,1729
   OPT_ACRESOLUTION_WEIGHT,74,1760
   OPT_REWRITE_WEIGHT,75,1788
   OPT_UREWRITE_WEIGHT,76,1811
   OPT_CLAUSENORMALIZE_WEIGHT,77,1835
   OPT_SPLITCLAUSE_WEIGHT78,1866
}OptionCodes;OptionCodes79,1892
   LIterative,84,1924
   LRecursive,85,1939
   LFlat86,1954
}LemmaAlgorithm;LemmaAlgorithm87,1963
OptCell opts[opts94,2205
char       *outname outname344,10806
long       time_limit 345,10843
char       *executable executable346,10878
LemmaAlgorithm algo 347,10915
InferenceWeight_p iw 348,10958
LemmaParam_p      lp 349,10995
long       max_lemmas 350,11032
float      max_lemmas_rel 351,11066
bool       max_lemmas_rel_p 352,11104
float      min_quality 353,11141
float      min_quality_rel 354,11177
bool       min_quality_rel_p 355,11213
OutputFormatType outputformat 356,11251
int main(370,11823
CLState_p process_options(486,14627
void print_help(624,18575

PROVER/eprover.c,4685
#define NAME 47,1201
   OPT_NOOPT=53,1276
   OPT_HELP,54,1292
   OPT_VERSION,55,1305
   OPT_VERBOSE,56,1321
   OPT_OUTPUT,57,1337
   OPT_PRINT_STATISTICS,58,1352
   OPT_EXPENSIVE_DETAILS,59,1377
   OPT_PRINT_SATURATED,60,1406
   OPT_PRINT_SAT_INFO,61,1430
   OPT_FILTER_SATURATED,62,1453
   OPT_PRUNE_ONLY,63,1478
   OPT_CNF_ONLY,64,1497
   OPT_PRINT_PID,65,1514
   OPT_PRINT_VERSION,66,1532
   OPT_REQUIRE_NONEMPTY,67,1554
   OPT_SILENT,68,1579
   OPT_OUTPUTLEVEL,69,1594
   OPT_PROOF_OBJECT,70,1614
   OPT_PCL_COMPRESSED,71,1635
   OPT_PCL_COMPACT,72,1658
   OPT_PCL_SHELL_LEVEL,73,1678
   OPT_MEM_LIMIT,74,1702
   OPT_CPU_LIMIT,75,1720
   OPT_SOFTCPU_LIMIT,76,1738
   OPT_RUSAGE_INFO,77,1760
   OPT_STEP_LIMIT,78,1780
   OPT_ANSWER_LIMIT,79,1799
   OPT_CONJ_ARE_QUEST,80,1820
   OPT_PROC_LIMIT,81,1843
   OPT_UNPROC_LIMIT,82,1862
   OPT_TOTAL_LIMIT,83,1883
   OPT_NO_INFIX,84,1903
   OPT_FULL_EQ_REP,85,1920
   OPT_TPTP_PARSE,86,1940
   OPT_TPTP_PRINT,87,1959
   OPT_TPTP_FORMAT,88,1978
   OPT_TSTP_PARSE,89,1998
   OPT_TSTP_PRINT,90,2017
   OPT_TSTP_FORMAT,91,2036
   OPT_AUTO,92,2056
   OPT_SATAUTO,93,2069
   OPT_AUTODEV,94,2085
   OPT_SATAUTODEV,95,2101
   OPT_AUTO_SCHED,96,2120
   OPT_NO_PREPROCESSING,97,2139
   OPT_EQ_UNFOLD_LIMIT,98,2164
   OPT_EQ_UNFOLD_MAXCLAUSES,99,2188
   OPT_NO_EQ_UNFOLD,100,2217
   OPT_SINE,101,2238
   OPT_REL_PRUNE_LEVEL,102,2251
   OPT_PRESAT_SIMPLIY,103,2275
   OPT_AC_HANDLING,104,2298
   OPT_AC_ON_PROC,105,2318
   OPT_LITERAL_SELECT,106,2337
   OPT_NO_GENERATION,107,2360
   OPT_SELECT_ON_PROC_ONLY,108,2382
   OPT_INHERIT_PM_LIT,109,2410
   OPT_INHERIT_GOAL_PM_LIT,110,2433
   OPT_INHERIT_CONJ_PM_LIT,111,2461
   OPT_POS_LITSEL_MIN,112,2489
   OPT_POS_LITSEL_MAX,113,2512
   OPT_NEG_LITSEL_MIN,114,2535
   OPT_NEG_LITSEL_MAX,115,2558
   OPT_ALL_LITSEL_MIN,116,2581
   OPT_ALL_LITSEL_MAX,117,2604
   OPT_WEIGHT_LITSEL_MIN,118,2627
   OPT_PREFER_INITIAL_CLAUSES,119,2653
   OPT_FILTER_LIMIT,120,2684
   OPT_FILTER_COPIES_LIMIT,121,2705
   OPT_REWEIGHT_LIMIT,122,2733
   OPT_DELETE_BAD_LIMIT,123,2756
   OPT_ASSUME_COMPLETENESS,124,2781
   OPT_ASSUME_INCOMPLETENESS,125,2809
   OPT_DISABLE_EQ_FACTORING,126,2839
   OPT_DISABLE_NEGUNIT_PM,127,2868
   OPT_CONDENSING,128,2895
   OPT_CONDENSING_AGGRESSIVE,129,2914
   OPT_NO_GC_FORWARD_SIMPL,130,2944
   OPT_USE_SIM_PARAMOD,131,2972
   OPT_USE_ORIENTED_SIM_PARAMOD,132,2996
   OPT_SPLIT_TYPES,133,3029
   OPT_SPLIT_HOW,134,3049
   OPT_SPLIT_AGGRESSIVE,135,3067
   OPT_SPLIT_REUSE_DEFS,136,3092
   OPT_ORDERING,137,3117
   OPT_TO_WEIGHTGEN,138,3134
   OPT_TO_WEIGHTS,139,3155
   OPT_TO_PRECGEN,140,3174
   OPT_TO_CONSTWEIGHT,141,3193
   OPT_TO_PRECEDENCE,142,3216
   OPT_TO_LPO_RECLIMIT,143,3238
   OPT_TO_RESTRICT_LIT_CMPS,144,3262
   OPT_TPTP_SOS,145,3291
   OPT_ER_DESTRUCTIVE,146,3308
   OPT_ER_STRONG_DESTRUCTIVE,147,3331
   OPT_ER_AGGRESSIVE,148,3361
   OPT_FORWARD_CSR,149,3383
   OPT_FORWARD_CSR_AGGRESSIVE,150,3403
   OPT_BACKWARD_CSR,151,3434
   OPT_RULES_GENERAL,152,3455
   OPT_FORWARD_DEMOD,153,3477
   OPT_STRONG_RHS_INSTANCE,154,3499
   OPT_STRONGSUBSUMPTION,155,3527
   OPT_WATCHLIST,156,3553
   OPT_WATCHLIST_NO_SIMPLIFY,157,3571
   OPT_NO_INDEXED_SUBSUMPTION,158,3601
   OPT_FVINDEX_STYLE,159,3632
   OPT_FVINDEX_FEATURETYPES,160,3654
   OPT_FVINDEX_MAXFEATURES,161,3683
   OPT_FVINDEX_SLACK,162,3711
   OPT_RW_BW_INDEX,163,3733
   OPT_PM_FROM_INDEX,164,3753
   OPT_PM_INTO_INDEX,165,3775
   OPT_FP_INDEX,166,3797
   OPT_DETSORT_RW,167,3814
   OPT_DETSORT_NEW,168,3833
   OPT_DEFINE_WFUN,169,3853
   OPT_DEFINE_HEURISTIC,170,3873
   OPT_HEURISTIC,171,3898
   OPT_FREE_NUMBERS,172,3916
   OPT_FREE_OBJECTS,173,3937
   OPT_OLD_STYLE_CNF,174,3958
   OPT_DEF_CNF,175,3980
   OPT_DUMMY176,3996
}OptionCodes;OptionCodes177,4009
OptCell opts[opts186,4250
char              *outname outname1189,43529
char              *watchlist_filename watchlist_filename1190,43564
HeuristicParms_p  h_parms;1191,43610
FVIndexParms_p    fvi_parms;1192,43637
bool              print_sat 1193,43666
IOFormat          parse_format 1213,44452
long              step_limit 1214,44496
int               eqdef_incrlimit 1221,44812
char              *outdesc outdesc1222,44873
PStack_p          wfcb_definitions,1224,44988
PStack_p          wfcb_definitions, hcb_definitions;1224,44988
char              *sine=sine1225,45041
FunctionProperties free_symb_prop 1227,45072
ProofState_p parse_spec(1257,46097
static void print_info(1312,47722
int main(1341,48337
bool check_fp_index_arg(1772,62345
CLState_p process_options(1809,63343
void print_help(2550,84976

PROVER/termprops.c,256
   OPT_NOOPT=35,920
   OPT_HELP,36,936
   OPT_VERBOSE,37,949
   OPT_OUTPUT38,965
}OptionCodes;OptionCodes39,979
OptCell opts[opts47,1219
char *outname outname67,1629
int main(80,2178
CLState_p process_options(179,4501
void print_help(208,5030

PROVER/tsm_classify.c,510
#define NAME 37,1042
   OPT_NOOPT=41,1089
   OPT_HELP,42,1105
   OPT_VERSION,43,1118
   OPT_VERBOSE,44,1134
   OPT_OUTPUTLEVEL,45,1152
   OPT_OUTPUT,46,1172
   OPT_INDEXFUN,47,1187
   OPT_INDEXDEPTH,48,1204
   OPT_TSMTYPE49,1223
}OptionCodes;OptionCodes50,1238
OptCell opts[opts58,1478
char      *outname outname109,2599
int       index_type 110,2626
long      index_depth 111,2661
int       tsm_type 112,2688
int main(126,3255
CLState_p process_options(242,6491
void print_help(317,8337

SIMPLE_APPS/ex_commandline.c,260
#define VERSION 27,632
   OPT_NOOPT=35,922
   OPT_HELP,36,938
   OPT_INT_EXAMPLE,37,951
   OPT_FLOAT_EXAMPLE38,971
}OptionCodes;OptionCodes39,992
OptCell opts[opts47,1232
int main(78,2194
CLState_p process_options(121,3233
void print_help(152,3847

SIMPLE_APPS/term2dag.c,312
#define VERSION 30,713
   OPT_NOOPT=38,1005
   OPT_HELP,39,1021
   OPT_VERBOSE,40,1034
   OPT_OUTPUT,41,1050
   OPT_PRINT_REFS42,1065
}OptionCodes;OptionCodes43,1083
OptCell opts[opts51,1323
char *outname outname75,1875
int main(88,2424
CLState_p process_options(150,3859
void print_help(182,4461

TERMS/cte_acterms.c,251
static int acterm_uniq_compare(56,1650
static void ac_collect_args(83,2263
ACTerm_p ACTermAlloc(124,3197
void ACTermFree(153,3698
int ACTermCompare(187,4297
ACTerm_p ACTermNormalize(239,5168
void ACTermPrint(304,6509
bool TermACEqual(347,7381

TERMS/cte_fp_index.c,1455
static FPTree_p fpindex_alternative(59,1680
static FPTree_p* fpindex_alternative_ref(87,2279
static FPTree_p fpindex_extract_alt(114,2896
static bool fpindex_rek_delete(148,3608
static long fp_index_rek_find_unif(189,4563
static long fp_index_rek_find_matchable(301,8610
void fp_index_leaf_prt_size(402,12234
static long fp_index_tree_print(425,12819
long fp_index_tree_collect_distrib(477,14147
static char* fp_symbol(513,15019
void fp_index_tree_print_node(544,15646
void fp_index_tree_print_nodes(577,16525
void fp_index_tree_print_edges(612,17425
void fp_index_collect_leaves(644,18284
long fp_index_find_all(679,19093
#define GET_SYMBOL_ARITY(716,19889
long dt_index_rek_find_matchable(741,20733
static long dt_index_rek_find_unifiable(824,23518
FPTree_p FPTreeAlloc(933,27286
void FPTreeFree(957,27755
FPTree_p FPTreeFind(995,28634
FPTree_p FPTreeInsert(1021,29212
void FPTreeDelete(1057,29957
long FPTreeFindUnifiable(1076,30427
long FPTreeFindMatchable(1101,31068
FPIndex_p FPIndexAlloc(1127,31618
void FPIndexFree(1153,32240
FPTree_p FPIndexFind(1173,32697
FPTree_p  FPIndexInsert(1194,33199
void FPIndexDelete(1217,33741
long FPIndexFindUnifiable(1239,34254
long FPIndexFindMatchable(1280,35340
void FPIndexDistribPrint(1326,36503
long FPIndexCollectDistrib(1355,37353
void FPIndexDistribDataPrint(1382,38011
void FPIndexPrint(1409,38630
long FPIndexCollectLeaves(1433,39190
void FPIndexPrintDot(1454,39669

TERMS/cte_functypes.c,270
#define ATOMIC_FUNC_SYM_TOK 34,953
TokenType FuncSymbToken 37,1079
TokenType FuncSymbStartToken 39,1189
static void normalize_int_rep(66,2200
static void normalize_rational_rep(116,3261
static void normalize_float_rep(207,4913
FuncSymbType FuncSymbParse(261,6109

TERMS/cte_idx_fp.c,926
char* FPIndexNames[FPIndexNames32,827
static FPIndexFunction fp_index_funs[fp_index_funs54,1060
static void push_fcodes(100,2229
FunCode TermFPSample(134,3085
FunCode TermFPFlexSample(179,3957
IndexFP_p IndexFP0Create(229,4840
IndexFP_p IndexFPfpCreate(251,5320
IndexFP_p IndexFP1Create(293,6139
IndexFP_p IndexFP2Create(317,6613
IndexFP_p IndexFP3DCreate(342,7129
IndexFP_p IndexFP3WCreate(369,7684
IndexFP_p IndexFP4DCreate(395,8243
IndexFP_p IndexFP4WCreate(422,8840
IndexFP_p IndexFP4MCreate(450,9432
IndexFP_p IndexFP5MCreate(477,10029
IndexFP_p IndexFP6MCreate(505,10667
IndexFP_p IndexFP7Create(533,11383
IndexFP_p IndexFP7MCreate(563,12104
IndexFP_p IndexFP4X2_2Create(593,12814
IndexFP_p IndexFPFlexCreate(635,13888
IndexFP_p IndexFP3DFlexCreate(666,14520
IndexFP_p IndexDTCreate(705,15470
void IndexFPFree(740,16190
FPIndexFunction GetFPIndexFunction(758,16615
void IndexFPPrint(786,17112

TERMS/cte_match_mgu_1-1.c,150
long UnifAttempts 33,937
long UnifSuccesses 34,961
static bool occur_check(63,1801
bool SubstComputeMatch(127,3636
bool SubstComputeMgu(231,6183

TERMS/cte_replace.c,128
void TermAddRWLink(63,1887
void TermDeleteRWLink(99,2654
Term_p TermFollowRWChain(122,3169
Term_p TBTermPosReplace(159,4332

TERMS/cte_signature.c,1200
bool      SigSupportLists 32,822
static void sig_print_operator(57,1586
static void sig_compute_alpha_ranks(84,2313
Sig_p SigAlloc(118,3180
void SigInsertInternalCodes(195,5468
void SigFree(241,7038
FunCode SigFindFCode(272,7709
void SigSetPredicate(299,8212
bool SigIsPredicate(326,8797
void SigSetFunction(347,9276
bool SigIsFunction(374,9858
void SigSetSpecial(396,10335
bool SigIsSpecial(425,10892
int SigGetAlphaRank(447,11391
void SigSetAllSpecial(474,11952
FunCode SigInsertId(498,12540
FunCode SigInsertFOFOp(558,14168
void SigPrint(579,14687
void SigPrintSpecial(606,15297
void SigPrintACStatus(633,15866
FunCode SigParseKnownOperator(672,16748
FunCode SigParseSymbolDeclaration(719,17928
FunCode SigParse(771,19354
int SigFindMaxUsedArity(798,19991
int SigFindMaxPredicateArity(824,20512
int SigFindMinPredicateArity(855,21180
int SigFindMaxFunctionArity(886,21847
int SigFindMinFunctionArity(916,22480
int SigCountAritySymbols(946,23158
int SigCountSymbols(980,23874
int SigAddSymbolArities(1020,24849
FunCode SigGetOrNCode(1052,25572
FunCode SigGetOtherEqnCode(1093,26452
FunCode SigGetNewSkolemCode(1118,27047
FunCode SigGetNewPredicateCode(1149,27888

TERMS/cte_simplesorts.c,244
void default_sort_table_init(53,1613
SortTable_p SortTableAlloc(86,2574
void SortTableFree(108,3026
SortType SortTableInsert(130,3533
SortTable_p DefaultSortTableAlloc(160,4334
char* SortTableGetRep(180,4782
void SortTablePrint(197,5186

TERMS/cte_subst.c,367
PStackPointer SubstAddBinding(63,1928
bool SubstBacktrackSingle(96,2763
int SubstBacktrackToPos(125,3309
int SubstBacktrack(149,3798
FunCode SubstNormTerm(184,4860
bool SubstBindingPrint(233,5961
long SubstPrint(265,6868
bool SubstIsRenaming(304,7803
void SubstBacktrackSkolem(362,9092
void SubstSkolemizeTerm(389,9704
void SubstCompleteInstance(427,10464

TERMS/cte_termbanks.c,1070
bool TBPrintInternalInfo 49,1703
bool TBPrintDetails 51,1818
static void tb_print_dag(79,2811
static Term_p tb_termtop_insert(139,4162
static Term_p tb_parse_cons_list(194,5620
static Term_p tb_subterm_parse(263,7500
static int tb_term_parse_arglist(299,8392
TB_p TBAlloc(367,10036
void TBFree(413,11169
long TBTermNodes(440,11762
Term_p DefaultSharedTermCellAlloc(460,12329
Term_p TBInsert(487,12960
Term_p TBInsertNoProps(526,13870
Term_p  TBInsertRepl(568,14890
Term_p TBInsertInstantiated(617,16270
Term_p TBInsertOpt(669,17484
Term_p  TBInsertDisjoint(715,18554
Term_p TBTermTopInsert(764,19640
Term_p TBAllocNewSkolem(783,20096
Term_p TBFind(807,20621
void TBPrintBankInOrder(829,21131
void TBPrintTermCompact(868,22237
void TBPrintTerm(917,23339
void TBPrintBankTerms(943,23892
Term_p TBTermParseReal(988,25058
void TBRefSetProp(1143,29543
void TBRefDelProp(1177,30328
long TBTermDelPropCount(1207,31057
void TBGCMarkTerm(1244,31825
long TBGCSweep(1287,32784
Term_p TBCreateMinTerm(1333,33946
long TBTermCollectSubterms(1360,34703

TERMS/cte_termcellstore.c,449
static void collect_unmarked_termcells(57,1664
void TermCellStoreInit(96,2631
void TermCellStoreExit(120,3131
Term_p  TermCellStoreFind(144,3594
Term_p  TermCellStoreInsert(163,4029
Term_p  TermCellStoreExtract(188,4590
bool TermCellStoreDelete(214,5170
void TermCellStoreSetProp(242,5760
void TermCellStoreDelProp(264,6259
long TermCellStoreCountNodes(287,6757
long TermCellStoreGCSweep(316,7535
void TermCellStorePrintDistrib(351,8386

TERMS/cte_termcpos.c,105
Term_p term_cpos_get_subterm(43,1254
Term_p TermCPosGetSubterm(81,2018
void TermPrintAllCPos(103,2588

TERMS/cte_termfunc.c,1501
bool      TermPrintLists 33,871
static void print_cons_list(58,1712
static Term_p parse_cons_list(93,2600
static Term_p term_check_consistency_rek(148,4134
void VarPrint(190,5093
void TermPrint(217,5564
void TermPrintArgList(279,6861
FuncSymbType TermParseOperator(323,8130
FunCode TermSigInsert(354,8805
Term_p TermParse(392,9728
int TermParseArgList(489,12894
Term_p TermCopy(547,14330
Term_p TermCopyKeepVars(583,15299
Term_p TermEquivCellAlloc(621,16182
bool TermStructEqual(651,16761
bool TermStructEqualNoDeref(693,17509
bool TermStructEqualNoDerefHardVars(729,18221
bool TermStructEqualDeref(770,19044
bool TermStructEqualDerefHardVars(811,19955
int TermStructWeightCompare(855,20944
int TermLexCompare(918,22124
bool TermIsSubterm(954,22796
bool TermIsSubtermDeref(989,23523
long TermWeight(1023,24326
long TermFsumWeight(1071,25189
long TermNonLinearWeight(1124,26300
long TermSymTypeWeight(1183,27416
long TermDepth(1240,28384
bool TermIsDefTerm(1265,28918
bool TermHasFCode(1311,29798
bool TermHasVariables(1345,30410
FunCode TermFindMaxVarCode(1385,31217
FunCode VarBankCheckBindings(1421,31985
void TermAddSymbolDistributionLimited(1472,33182
void TermAddSymbolDistExist(1516,34079
void TermAddSymbolFeaturesLimited(1567,35318
void TermAddSymbolFeatures(1612,36506
void TermComputeFunctionRanks(1648,37405
long TermCollectPropVariables(1680,38111
long TermAddFunOcc(1728,39003
long TermLinearize(1775,40095
Term_p TermCheckConsistency(1803,40760

TERMS/cte_termpos.c,99
Term_p TermPosNextLIPosition(62,1858
void TermPosPrint(100,2537
void TermPosDebugPrint(130,3174

TERMS/cte_termtrees.c,312
static Term_p splay_term_tree(56,1706
void TermTreeFree(150,3793
int TermTopCompare(194,4708
Term_p TermTreeFind(232,5456
Term_p TermTreeInsert(260,6094
Term_p TermTreeExtract(307,7011
bool TermTreeDelete(348,7830
void TermTreeSetProp(374,8328
void TermTreeDelProp(406,8993
long TermTreeNodes(437,9635

TERMS/cte_termtypes.c,436
Term_p TermDefaultCellAlloc(64,2009
Term_p TermConstCellAlloc(96,2783
Term_p  TermTopAlloc(119,3284
void TermTopFree(146,3816
void TermFree(173,4392
Term_p TermAllocNewSkolem(212,5155
void TermSetProp(250,6047
bool TermSearchProp(287,6875
void TermDelProp(328,7815
void TermVarSetProp(365,8678
bool TermVarSearchProp(406,9557
void TermVarDelProp(448,10527
void TermStackSetProps(487,11381
void TermStackDelProps(512,11915

TERMS/cte_termvars.c,396
VarBank_p VarBankAlloc(61,1825
void VarBankFree(87,2383
void VarBankClearExtNames(118,3044
void VarBankClearExtNamesNoReset(138,3523
void VarBankVarsSetProp(156,3929
void VarBankVarsDelProp(184,4503
Term_p VarBankFCodeFind(213,5148
Term_p VarBankExtNameFind(233,5664
Term_p VarBankFCodeAssertAlloc(260,6274
Term_p  VarBankGetFreshVar(299,7472
Term_p VarBankExtNameAssertAlloc(324,8121

TERMS/cte_varhash.c,235
void VarHashEntryListFree(60,1812
void VarHashFree(86,2280
int VarHashFunction(109,2744
VarHashEntry_p VarHashListFind(129,3180
long VarHashAddValue(157,3788
void VarHashAddVarDistrib(189,4547
void PDArrayAddVarDistrib(233,5516

TEST/cl_test.c,365
   OPT_NOOPT=35,916
   OPT_HELP,36,932
   OPT_VERBOSE,37,945
   OPT_OUTPUT,38,961
   OPT_PRINT_REFS,39,976
   OPT_DISCOUNT_VARS,40,995
   OPT_NO_INFIX,41,1017
   OPT_FULL_EQ_REP42,1034
}OptionCodes;OptionCodes43,1053
OptCell opts[opts51,1293
char *outname outname59,1377
int main(72,1926
CLState_p process_options(141,3693
void print_help(161,4017

TEST/patterntest.c,343
   OPT_NOOPT=38,986
   OPT_HELP,39,1002
   OPT_VERBOSE,40,1015
   OPT_OUTPUT,41,1031
   OPT_DISCOUNT_VARS,42,1046
   OPT_NO_INFIX,43,1068
   OPT_FULL_EQ_REP44,1085
}OptionCodes;OptionCodes45,1104
OptCell opts[opts53,1344
char *outname outname85,2144
int main(98,2693
CLState_p process_options(186,4667
void print_help(221,5385

ANALYSIS/can_clausestats.h,383
#define CAN_CLAUSESTATS27,599
typedef struct clausestatscell38,905
   long proof_distance;40,938
   long simplify_used;41,962
   long simplify_unused;42,985
   long generate_used;43,1010
   long generate_unused;44,1033
   long subsumed;45,1061
}ClauseStatsCell, *ClauseStats_p;ClauseStats_p46,1079
#define ClauseStatsCellAlloc(54,1339
#define ClauseStatsCellFree(56,1433

ANALYSIS/can_clausestore.h,557
#define CAN_CLAUSESTORE27,635
typedef struct compact_clause_cell41,1088
   ClauseProperties properties;43,1125
   long             ident;44,1157
   long             ext_ident;45,1184
   short            literal_no;47,1293
   short            *sign;sign48,1325
   Term_p           *lit_terms;lit_terms49,1371
   PTree_p          g_parents;50,1442
   PTree_p          s_parents;51,1498
   ClauseStatsCell  stats;52,1555
}CompClauseCell, *CompClause_p;CompClause_p53,1582
#define CompClauseCellAlloc(62,1841
#define CompClauseCellFree(64,1932

ANALYSIS/can_infstate.h,28
#define CAN_INFSTATE26,604

ANALYSIS/can_treeanalyze.h,104
#define CAN_TREEANALYZE26,607
#define PROOF_DIST_INFINITY 42,1109
#define PROOF_DIST_DEFAULT 43,1163

BASICS/clb_avlgeneric.h,113
#define CLB_AVLGENERIC30,846
#define AVL_TRAVERSE_DECLARATION(57,1710
#define AVL_TRAVERSE_DEFINITION(92,2642

BASICS/clb_ddarrays.h,369
#define CLB_DDARRAYS26,623
typedef struct ddarraycell35,894
   long   size;37,923
   long   grow;38,939
   double *array;array39,955
}DDArrayCell, *DDArray_p;DDArray_p40,973
#define DDArrayCellAlloc(47,1225
#define DDArrayCellFree(48,1298
#define   DDArrayAssign(57,1582
#define   DDArrayElement(60,1683
static __inline__ double* DDArrayElementRef(89,2683

BASICS/clb_defines.h,1063
#define CLB_DEFINES26,587
   false 50,1099
   true 51,1113
}bool;bool52,1125
#define CPPCAST(54,1133
#define CPPCAST(59,1193
typedef union int_or_p67,1335
   long i_val;69,1360
   void *p_val;p_val70,1375
}IntOrP;IntOrP71,1391
#define INTORP_MEM 74,1430
#define LONG_MEM 75,1451
#define INTORP_MEM 77,1476
#define LONG_MEM 78,1510
#define NULL 86,1607
#define NULL 88,1637
#define VOLATILE 97,1865
#define VOLATILE99,1897
typedef void (*GenericExitFun)GenericExitFun106,2039
typedef int (*ComparisonFunctionType)ComparisonFunctionType110,2142
typedef unsigned long ulong_c;112,2208
typedef ptrdiff_t ptr_int;121,2589
#undef MAX131,2920
#define MAX(133,2938
#undef MIN136,2985
#define MIN(138,3003
#undef ABS141,3050
#define ABS(143,3068
#undef XOR146,3117
#define XOR(148,3135
#undef EQUIV151,3197
#define EQUIV(153,3217
#define SWAP(155,3268
#define KILO 160,3374
#define MEGA 161,3392
#define WRITE_STR(165,3446
#define TSTPOUT(169,3526
#define TSTPOUTFD(170,3592
#define TSTPOUT(174,3705
#define TSTPOUTFD(175,3732

BASICS/clb_dstacks.h,400
#define CLB_DSTACKS26,593
typedef int DStackPointer;37,893
typedef struct dstackcell39,921
   int           size;41,949
   DStackPointer current;42,1004
   double        *stack;stack43,1078
}DStackCell, *DStack_p;DStack_p44,1121
#define DSTACK_DEFAULT_SIZE 51,1370
#define DStackCellAlloc(56,1502
#define DStackCellFree(57,1572
#define  DStackEmpty(61,1709
#define  DStackGetSP(66,1850

BASICS/clb_dstrings.h,397
#define CLB_DSTRINGS36,1211
typedef struct dstrcell44,1481
   char* string;46,1507
   long  len;47,1524
   long  mem;48,1538
   long  refs;49,1552
}DStrCell, *DStr_p;DStr_p50,1567
#define DSTRGROW 52,1588
#define DStrCellAlloc(60,1856
#define DStrCellFree(61,1920
#define DStrAppendDStr(72,2339
#define DStrLastChar(75,2467
#define DStrGetRef(85,2855
#define DStrReleaseRef(86,2927

BASICS/clb_error.h,554
#define CLB_ERROR29,703
#define getrusage(39,870
   NO_ERROR 50,1172
   NO_ERROR = EXIT_SUCCESS,50,1172
   PROOF_FOUND 51,1200
   PROOF_FOUND = EXIT_SUCCESS,51,1200
   SATISFIABLE,52,1231
   OUT_OF_MEMORY,53,1247
   SYNTAX_ERROR,54,1265
   USAGE_ERROR,55,1282
   FILE_ERROR,56,1298
   SYS_ERROR,57,1313
   CPU_LIMIT_ERROR,58,1327
   RESOURCE_OUT,59,1347
   INCOMPLETE_PROOFSTATE,60,1364
   OTHER_ERROR,61,1390
   INPUT_SEMANTIC_ERROR62,1406
}ErrorCodes;ErrorCodes63,1430
#define MAX_ERRMSG_ADD 69,1667
#define MAX_ERRMSG_LEN 70,1696

BASICS/clb_fixdarrays.h,281
#define CLB_FIXDARRAYS27,632
typedef struct fixd_array_cell36,905
   long *array;array38,938
   long size;39,954
}FixedDArrayCell, *FixedDArray_p;FixedDArray_p40,968
#define FixedDArrayCellAlloc(47,1227
#define FixedDArrayCellFree(48,1315
#define FixedDArraySize(53,1485

BASICS/clb_floattrees.h,428
#define CLB_FLOATTREES27,683
typedef struct floattreecell52,1590
   double               key;54,1621
   IntOrP               val1;55,1650
   IntOrP               val2;56,1680
   struct floattreecell *lson;lson57,1710
   struct floattreecell *rson;rson58,1741
}FloatTreeCell, *FloatTree_p;FloatTree_p59,1772
#define FloatTreeCellAlloc(62,1804
#define FloatTreeCellFree(63,1883
#define FloatTreeTraverseExit(76,2490

BASICS/clb_intmap.h,1233
#define CLB_INTMAP28,711
   IMEmpty,41,1048
   IMSingle,42,1060
   IMArray,43,1073
   IMTree44,1085
}IntMapType;IntMapType45,1095
#define MAX_TREE_DENSITY 47,1109
#define MIN_TREE_DENSITY 48,1136
#define IM_ARRAY_SIZE 49,1163
typedef struct intmap_cell57,1550
   IntMapType type;59,1579
   long entry_no;60,1599
   long min_key;64,1857
   long max_key;68,2108
      void*        value;74,2373
      PDRangeArr_p array;75,2420
      NumTree_p    tree;76,2467
   }values;values77,2514
}IntMapCell, *IntMap_p;IntMap_p78,2526
typedef struct intmap_iter_cell82,2553
   IntMap_p map;84,2587
   long     lower_key;85,2604
   long     upper_key;86,2627
      bool      seen;89,2664
      long      current;90,2710
      PStack_p  tree_iter;91,2756
   }admin_data;admin_data92,2800
}IntMapIterCell, *IntMapIter_p;IntMapIter_p93,2819
typedef long (*IntMapFreeFunc)IntMapFreeFunc96,2853
#define IntMapCellAlloc(102,3126
#define IntMapCellFree(103,3196
#define IntMapIterCellAlloc(114,3524
#define IntMapIterCellFree(115,3606
#define INTMAPCELL_MEM 118,3708
#define INTMAPCELL_MEM 120,3740
#define IntMapDStorage(123,3791
#define IntMapStorage(128,4039
static __inline__ void* IntMapIterNext(158,4918

BASICS/clb_memory.h,872
#define CLB_MEMORY28,827
typedef struct memcell43,1219
   struct memcell* next;45,1244
   unsigned long   test;47,1284
}MemCell, *Mem_p;Mem_p49,1316
#define MEM_ARR_SIZE 55,1558
#define MEM_FREE_PATTERN 56,1584
#define MEM_RSET_PATTERN 57,1620
#define MEMSIZE(73,2204
#define MEMSIZE(75,2301
#define SizeFree(81,2398
#define SizeMalloc(82,2449
#define ENSURE_NULL(83,2491
#define SizeFree(85,2536
#define SizeMalloc(86,2576
#define ENSURE_NULL(87,2618
#define SizeFree(93,2707
#define SizeMalloc(94,2772
#define ENSURE_NULL(95,2822
#define SizeFree(97,2867
#define SizeMalloc(98,2922
#define ENSURE_NULL(99,2972
#define FREE(109,3246
#define IntArrayFree(112,3332
#undef FREE127,3810
#define FREE(128,3822
#undef FREE132,3928
#define FREE(133,3940
static __inline__ void* SizeMallocReal(163,5100
static __inline__ void SizeFreeReal(216,6580

BASICS/clb_newmem.h,546
#define CLB_NEWMEM29,907
typedef struct memcell40,1242
   struct memcell* next;42,1267
   unsigned long   test;44,1307
}MemCell, *Mem_p;Mem_p46,1339
#define MEM_ARR_SIZE 52,1581
#define MEM_ALIGN 53,1611
#define MEM_CHUNKLIMIT 54,1639
#define MEM_MULTIPLIER 56,1762
#define MEM_FREE_PATTERN 57,1793
#define MEM_RSET_PATTERN 58,1829
#define SizeFree(67,2009
#define SizeMalloc(68,2074
#define SizeFree(70,2126
#define SizeMalloc(71,2181
#define FREE(79,2408
#define IntArrayFree(82,2483
#undef FREE96,2927
#define FREE(97,2939

BASICS/clb_numtrees.h,501
#define CLB_NUMTREES27,660
typedef struct numtreecell52,1559
   long               key;54,1588
   IntOrP             val1;55,1615
   IntOrP             val2;56,1643
   struct numtreecell *lson;lson57,1671
   struct numtreecell *rson;rson58,1700
}NumTreeCell, *NumTree_p;NumTree_p59,1729
#define NumTreeCellAlloc(62,1757
#define NumTreeCellFree(63,1830
#define NUMTREECELL_MEM 66,1933
#define NUMTREECELL_MEM 68,1966
#define   NumTreeMaxKey(83,2609
#define NumTreeTraverseExit(88,2779

BASICS/clb_numxtrees.h,449
#define CLB_NUMXTREES27,678
#define NUMXTREEVALUES 44,1206
typedef struct numxtreecell53,1603
   long                key;55,1633
   IntOrP              vals[vals56,1661
   struct numxtreecell *lson;lson57,1706
   struct numxtreecell *rson;rson58,1736
}NumXTreeCell, *NumXTree_p;NumXTree_p59,1766
#define NumXTreeCellAlloc(62,1796
#define NumXTreeCellFree(63,1872
#define   NumXTreeMaxKey(76,2486
#define NumXTreeTraverseExit(81,2662

BASICS/clb_objtrees.h,108
#define CLB_OBJTREES29,784
typedef void (*ObjDelFun)ObjDelFun37,1054
typedef PTree_p PObjTree_p;39,1094

BASICS/clb_os_wrapper.h,659
#define CLB_OS_WRAPPERS25,588
   RLimFailed,41,968
   RLimReduced,42,983
   RLimSuccess43,999
}RLimResult;RLimResult44,1014
#define GETTIME 52,1278
#define GETTIME 54,1312
#define PERF_CTR_DEFINE(58,1376
#define PERF_CTR_DECL(59,1450
#define PERF_CTR_RESET(60,1534
#define PERF_CTR_ENTRY(61,1574
#define PERF_CTR_EXIT(62,1630
#define PERF_CTR_PRINT(63,1694
#define PERF_CTR_DEFINE(65,1809
#define PERF_CTR_DECL(66,1839
#define PERF_CTR_RESET(67,1867
#define PERF_CTR_ENTRY(68,1896
#define PERF_CTR_EXIT(69,1925
#define PERF_CTR_PRINT(70,1953
#define    GetMSecTime(81,2330
#define    GetSecTime(82,2376
#define    GetSecTimeMod(83,2424

BASICS/clb_partial_orderings.h,321
#define CLB_PARTIAL_ORDERINGS26,623
   to_unknown 39,975
   to_uncomparable 40,994
   to_equal 41,1018
   to_greater 42,1035
   to_lesser 43,1054
   to_notgteq,44,1072
   to_notleeq45,1125
}CompareResult;CompareResult46,1139
#define Q_TO_PART(59,1503
static __inline__ CompareResult POInverseRelation(84,2226

BASICS/clb_pdarrays.h,707
#define CLB_PDARRAYS33,977
typedef struct pdarraycell42,1248
   bool   integer;44,1277
   long   size;45,1297
   long   grow;46,1313
   IntOrP *array;array47,1329
}PDArrayCell, *PDArray_p;PDArray_p48,1347
#define GROW_EXPONENTIAL 50,1375
#define PDArrayCellAlloc(56,1626
#define PDArrayCellFree(57,1699
#define PDARRAYCELL_MEM 60,1795
#define PDARRAYCELL_MEM 62,1828
#define PDArrayStorage(64,1880
#define   PDArraySize(69,2107
#define   PDArrayAssign(79,2445
#define   PDArrayAssignP(81,2545
#define   PDArrayAssignInt(83,2652
#define   PDArrayElement(86,2762
#define   PDArrayElementP(88,2839
#define   PDArrayElementInt(90,2925
static __inline__ IntOrP* PDArrayElementRef(123,4192

BASICS/clb_pdrangearrays.h,834
#define CLB_PDRANGEARRAYS33,953
typedef struct pdrangearrcell42,1231
   bool   integer;44,1263
   long   offset;45,1283
   long   size;47,1390
   long   grow;48,1406
   IntOrP *array;array49,1422
}PDRangeArrCell, *PDRangeArr_p;PDRangeArr_p50,1440
#define PDRangeArrCellAlloc(57,1698
#define PDRangeArrCellFree(58,1780
#define PDRANGEARRELL_MEM 61,1882
#define PDRANGEARR_MEM 63,1917
#define PDRangeArrStorage(65,1971
#define   PDRangeArrAssign(78,2538
#define   PDRangeArrAssignP(80,2643
#define   PDRangeArrAssignInt(82,2756
#define   PDRangeArrElement(85,2872
#define   PDRangeArrElementP(87,2955
#define   PDRangeArrElementInt(89,3047
#define   PDRangeArrLowKey(92,3142
#define   PDRangeArrLimitKey(93,3194
#define   PDRangeArrIndexIsCovered(95,3263
static __inline__ IntOrP* PDRangeArrElementRef(121,4255

BASICS/clb_plist.h,285
#define CLB_PLIST26,579
typedef struct plistcell36,848
   IntOrP key;38,875
   struct plistcell *pred;pred39,890
   struct plistcell *succ;succ40,917
}PListCell, *PList_p;PList_p41,944
#define PListCellAlloc(47,1190
#define PListCellFree(48,1257
#define PListEmpty(52,1387

BASICS/clb_pqueue.h,1281
#define CLB_PQUEUE26,561
#define PQUEUE_DEFAULT_SIZE 35,830
typedef struct pqueuecell39,1020
   int    size;41,1048
   long   head;42,1094
   long   tail;43,1153
   IntOrP *queue;queue44,1215
}PQueueCell, *PQueue_p;PQueue_p45,1246
#define PQueueCellAlloc(52,1495
#define PQueueCellFree(53,1565
#define  PQueueEmpty(58,1775
#define  PQueueGetNextInt(68,2225
#define  PQueueGetNextP(69,2287
#define  PQueueGetLastInt(72,2408
#define  PQueueGetLastP(73,2470
#define  PQueueLookInt(76,2588
#define  PQueueLookP(77,2644
#define  PQueueLookLastInt(79,2759
#define  PQueueLookLastP(80,2823
#define  PQueueElementInt(84,2984
#define  PQueueElementP(85,3059
static __inline__ void pqueue_store(107,3756
static __inline__ void pqueue_bury(132,4376
static __inline__ PQueue_p PQueueAlloc(156,4911
static __inline__ void PQueueFree(181,5463
static __inline__ void PQueueReset(199,5870
static __inline__ void PQueueStoreInt(218,6243
static __inline__ void PQueueStoreP(238,6662
static __inline__ void PQueueBuryInt(258,7099
static __inline__ void PQueueBuryP(278,7528
static __inline__ IntOrP PQueueGetNext(299,7982
static __inline__ IntOrP PQueueGetLast(325,8555
static __inline__ IntOrP PQueueLook(351,9096
static __inline__ IntOrP PQueueLookLast(373,9567

BASICS/clb_properties.h,249
#define CLB_PROPERTIES29,807
#define SetProp(45,1283
#define DelProp(46,1359
#define FlipProp(47,1436
#define AssignProp(48,1513
#define QueryProp(51,1645
#define IsAnyPropSet(54,1761
#define GiveProps(58,1938
#define PropsAreEquiv(62,2037

BASICS/clb_pstacks.h,1400
#define CLB_PSTACKS26,600
typedef int PStackPointer;37,939
typedef struct pstackcell39,967
   int           size;41,995
   PStackPointer current;42,1050
   IntOrP        *stack;stack43,1124
}PStackCell, *PStack_p;PStack_p44,1167
#define PSTACK_DEFAULT_SIZE 47,1193
#define PStackCellAlloc(52,1329
#define PStackCellFree(53,1399
#define PSTACK_AVG_MEM 56,1501
#define PSTACK_AVG_MEM 58,1533
#define  PStackBaseAddress(61,1604
#define  PStackEmpty(66,1870
#define  PStackGetSP(71,2114
#define  PStackGetTopSP(72,2161
#define  PStackPopInt(75,2268
#define  PStackPopP(76,2322
#define  PStackTopInt(80,2492
#define  PStackTopP(81,2546
#define  PStackBelowTopInt(84,2699
#define  PStackBelowTopP(85,2763
#define  PStackElementInt(89,2906
#define  PStackElementP(90,2976
static __inline__ void push(122,4183
static __inline__ PStack_p PStackAlloc(154,5019
static __inline__ PStack_p PStackVarAlloc(179,5602
static __inline__ void  PStackFree(204,6135
static __inline__ PStack_p PStackCopy(228,6743
static __inline__ void PStackReset(253,7264
static __inline__ void PStackPushInt(270,7628
static __inline__ void PStackPushP(290,8039
static __inline__ IntOrP PStackPop(311,8455
static __inline__ void PStackDiscardTop(332,8909
static __inline__ IntOrP PStackTop(352,9310
static __inline__ IntOrP PStackBelowTop(374,9763
static __inline__ IntOrP PStackElement(394,10177

BASICS/clb_ptrees.h,499
#define CLB_PTREES33,949
typedef struct ptreecell53,1767
   struct ptreecell *lson;lson55,1794
   struct ptreecell *rson;rson56,1821
   void*            key;57,1848
}PTreeCell, *PTree_p;PTree_p58,1873
#define PTreeCellAlloc(66,2121
#define PTreeCellFree(67,2191
#define PTREE_CELL_MEM 70,2283
#define PTREE_CELL_MEM 72,2315
#define SLOW_PTR_CMP80,2604
#define PCmp(82,2645
#define PCmp(84,2689
#define PTreeTraverseExit(111,3816
AVL_TRAVERSE_DECLARATION(PTreeTraverseExit110,3775

BASICS/clb_quadtrees.h,602
#define CLB_QUADTREES27,668
typedef struct quadkeycell37,997
   void*               p1;39,1026
   int                 i1;40,1053
   void*               p2;41,1080
   int                 i2;42,1107
}QuadKeyCell,QuadKey,*QuadKey_p;QuadKey_p43,1134
typedef struct quadtreecell47,1233
   QuadKey             key;49,1263
   IntOrP              val;50,1291
   struct quadtreecell *lson;lson51,1319
   struct quadtreecell *rson;rson52,1349
}QuadTreeCell, *QuadTree_p;QuadTree_p53,1379
#define QuadTreeCellAlloc(61,1633
#define QuadTreeCellFree(62,1712
#define QuadTreeTraverseExit(74,2308

BASICS/clb_regmem.h,26
#define CLB_REGMEM31,930

BASICS/clb_simple_stuff.h,303
#define CLB_SIMPLE_STUFF26,588
   double weight;39,941
   IntOrP object;40,959
}WeightedObjectCell, *WeightedObject_p;WeightedObject_p41,977
#define MAXINDENTSPACES 48,1242
#define WeightedObjectArrayAlloc(50,1270
#define WeightedObjectArrayFree(52,1371
#define WeightedObjectArraySort(57,1505

BASICS/clb_stringtrees.h,410
#define CLB_STRINGTREES28,704
typedef struct strtreecell54,1691
   char               *key;key56,1720
   IntOrP             val1;57,1748
   IntOrP             val2;58,1776
   struct strtreecell *lson;lson59,1804
   struct strtreecell *rson;rson60,1833
}StrTreeCell, *StrTree_p;StrTree_p61,1862
#define StrTreeCellAlloc(64,1890
#define StrTreeCellFree(65,1963
#define StrTreeTraverseExit(77,2495

BASICS/clb_sysdate.h,416
#define CLB_SYSDATE30,832
typedef long SysDate;42,1191
   DateEarlier 47,1234
   DateEqual 48,1255
   DateLater 49,1273
}DateRelation;DateRelation50,1290
#define      SysDateCreationTime(56,1529
#define      SysDateArmageddonTime(57,1567
#define      SysDateInc(58,1614
#define      SysDateMaximum(61,1798
#define      SysDateIsCreationDate(64,1934
static __inline__ DateRelation SysDateCompare(83,2438

BASICS/clb_verbose.h,240
#define CLB_VERBOSE27,633
#define VERBOSE(44,1148
#define VERBOUT(45,1188
#define VERBOUTARG(47,1288
#define VERBOSE2(51,1413
#define VERBOUT2(52,1457
#define VERBOUTARG2(55,1560
#define VERBOSE10(59,1687
#define VERBOUT10(60,1733

CLAUSES/ccl_axiomsorter.h,406
#define CCL_AXIOMSORTER27,662
   NoAxiom,38,955
   ClauseAxiom,39,967
   FormulaAxiom40,983
}AxiomType;AxiomType41,999
typedef struct w_axiom_cell46,1069
   AxiomType type;48,1099
   double    weight;49,1118
      WFormula_p form;52,1153
      Clause_p   clause;53,1176
   }ax;ax54,1201
}WAxiomCell, *WAxiom_p;WAxiom_p55,1209
#define WAxiomCellAlloc(62,1458
#define WAxiomCellFree(63,1531

CLAUSES/ccl_clausecpos.h,62
#define CCL_CLAUSECPOS27,634
typedef long CompactPos;36,910

CLAUSES/ccl_clausefunc.h,30
#define CCL_CLAUSEFUNC27,684

CLAUSES/ccl_clauseinfo.h,430
#define CCL_CLAUSEINFO30,830
typedef struct clause_info_cell40,1129
   char *name;name42,1163
   char *source;source43,1212
   long line;44,1253
   long column;45,1267
}ClauseInfoCell, *ClauseInfo_p;ClauseInfo_p46,1283
#define ClauseInfoCellAlloc(54,1541
#define ClauseInfoCellFree(55,1626
#define      ClauseInfoAllocEmpty(58,1779
#define ClauseSourceInfoPrintTSTP(62,2030
#define ClauseSourceInfoPrintPCL(65,2136

CLAUSES/ccl_clausepos.h,657
#define CLAUSEPOS26,590
typedef struct clauseposcell38,886
   Clause_p  clause;40,917
   Eqn_p     literal;41,938
   EqnSide   side;42,960
   TermPos_p pos;43,979
}ClausePosCell, *ClausePos_p;ClausePos_p44,997
#define ClausePosCellAlloc(53,1254
#define ClausePosCellFree(54,1333
#define CLAUSEPOSCELL_MEM 57,1441
#define CLAUSEPOSCELL_MEM 59,1476
#define ClausePosIsTop(68,1843
static __inline__ ClausePos_p ClausePosAlloc(100,3020
static __inline__ void ClausePosFree(124,3520
static __inline__ Term_p ClausePosGetSide(146,3975
static __inline__ Term_p ClausePosGetOtherSide(169,4506
static __inline__ Term_p ClausePosGetSubterm(193,5008

CLAUSES/ccl_clausepos_tree.h,300
#define CCL_CLAUSEPOS_TREE26,627
typedef struct clause_tpos_cell37,1020
   Clause_p  clause;39,1054
   NumTree_p pos;40,1075
}ClauseTPosCell, *ClauseTPos_p;ClauseTPos_p41,1093
typedef PObjTree_p ClauseTPosTree_p;44,1127
#define ClauseTPosCellAlloc(52,1390
#define ClauseTPosCellFree(53,1472

CLAUSES/ccl_clauses.h,6744
#define CCL_CLAUSES28,654
   CPIgnoreProps 41,1021
   CPInitial 43,1142
   CPInputClause 44,1205
   CPInputClause       = 2*CPInitial,CPInitial44,1205
   CPIsProcessed 46,1337
   CPIsProcessed       = 2*CPInputClause,CPInputClause46,1337
   CPIsOriented 48,1468
   CPIsOriented        = 2*CPIsProcessed,CPIsProcessed48,1468
   CPIsDIndexed 51,1623
   CPIsDIndexed        = 2*CPIsOriented,CPIsOriented51,1623
   CPIsSIndexed 53,1757
   CPIsSIndexed        = 2*CPIsDIndexed,CPIsDIndexed53,1757
   CPIsGlobalIndexed 55,1887
   CPIsGlobalIndexed   = 2*CPIsSIndexed,CPIsSIndexed55,1887
   CPRWDetected 57,2014
   CPRWDetected        = 2*CPIsGlobalIndexed,CPIsGlobalIndexed57,2014
   CPDeleteClause 61,2271
   CPDeleteClause      = 2*CPRWDetected,CPRWDetected61,2271
   CPType1 63,2406
   CPType1             = 2*CPDeleteClause,CPDeleteClause63,2406
   CPType2 67,2681
   CPType2             = 2*CPType1,CPType167,2681
   CPType3 68,2725
   CPType3             = 2*CPType2,CPType268,2725
   CPTypeMask 69,2768
   CPTypeMask          = CPType1|CPType169,2768
   CPTypeMask          = CPType1|CPType2|CPType269,2768
   CPTypeMask          = CPType1|CPType2|CPType3,CPType369,2768
   CPTypeUnknown 70,2818
   CPTypeAxiom 71,2888
   CPTypeAxiom         = CPType1,71,2888
   CPTypeHypothesis 72,2952
   CPTypeHypothesis    = CPType2,72,2952
   CPTypeConjecture 73,3021
   CPTypeConjecture    = CPType1|CPType173,3021
   CPTypeConjecture    = CPType1|CPType2,CPType273,3021
   CPTypeLemma 74,3090
   CPTypeLemma         = CPType3,74,3090
   CPTypeNegConjecture 75,3154
   CPTypeNegConjecture = CPType1|CPType175,3154
   CPTypeNegConjecture = CPType1|CPType3,CPType375,3154
   CPTypeQuestion 78,3346
   CPTypeQuestion      = CPType2|CPType278,3346
   CPTypeQuestion      = CPType2|CPType3,CPType378,3346
   CPTypeWatchClause 80,3490
   CPTypeWatchClause   = CPType1|CPType180,3490
   CPTypeWatchClause   = CPType1|CPType2|CPType280,3490
   CPTypeWatchClause   = CPType1|CPType2|CPType3,CPType380,3490
   CPIsIRVictim 83,3675
   CPIsIRVictim        = 2*CPType3,CPType383,3675
   CPOpFlag 86,3864
   CPOpFlag            = 2*CPIsIRVictim,CPIsIRVictim86,3864
   CPIsSelected 87,3929
   CPIsSelected        = 2*CPOpFlag,CPOpFlag87,3929
   CPIsFinal 89,4061
   CPIsFinal           = 2*CPIsSelected,CPIsSelected89,4061
   CPIsProofClause 93,4330
   CPIsProofClause  = 2*CPIsFinal,CPIsFinal93,4330
   CPIsSOS 95,4461
   CPIsSOS          = 2*CPIsProofClause,CPIsProofClause95,4461
   CPNoGeneration 96,4541
   CPNoGeneration   = 2*CPIsSOS,CPIsSOS96,4541
   CP_CSSCPA_1 99,4735
   CP_CSSCPA_1      = 2*CPNoGeneration,CPNoGeneration99,4735
   CP_CSSCPA_2 100,4805
   CP_CSSCPA_2      = 2*CP_CSSCPA_1,CP_CSSCPA_1100,4805
   CP_CSSCPA_4 101,4843
   CP_CSSCPA_4      = 2*CP_CSSCPA_2,CP_CSSCPA_2101,4843
   CP_CSSCPA_8 102,4881
   CP_CSSCPA_8      = 2*CP_CSSCPA_4,CP_CSSCPA_4102,4881
   CP_CSSCPA_Mask 103,4918
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_1103,4918
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_2|CP_CSSCPA_2103,4918
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_2|CP_CSSCPA_4|CP_CSSCPA_4103,4918
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_2|CP_CSSCPA_4|CP_CSSCPA_8,CP_CSSCPA_8103,4918
   CP_CSSCPA_Unkown 104,4989
   CPIsProtected 105,5014
   CPIsProtected    = 2*CP_CSSCPA_8,CP_CSSCPA_8105,5014
   CPWatchOnly 110,5336
   CPWatchOnly      = 2*CPIsProtected,CPIsProtected110,5336
   CPSubsumesWatch 111,5375
   CPSubsumesWatch  = 2*CPWatchOnly,CPWatchOnly111,5375
   CPLimitedRW 112,5412
   CPLimitedRW      = 2*CPSubsumesWatch,CPSubsumesWatch112,5412
   CPIsRelevant 116,5670
   CPIsRelevant     = 2*CPLimitedRW CPLimitedRW116,5670
}ClauseProperties;ClauseProperties119,5860
typedef struct clause_cell122,5881
   long                  ident;124,5910
   long                  perm_ident;128,6055
   SysDate               date;131,6194
   Eqn_p                 literals;133,6289
   short                 neg_lit_no;134,6350
   short                 pos_lit_no;135,6412
   long                  weight;136,6474
   Eval_p                evaluations;139,6595
   ClauseProperties      properties;140,6659
   ClauseInfo_p          info;142,6749
   PStack_p              derivation;144,6892
   long                  create_date;146,7028
   long                  proof_depth;149,7149
   long                  proof_size;152,7276
   PTree_p               children;155,7403
   struct clause_cell*   parent1;157,7520
   struct clause_cell*   parent2;158,7592
   struct clausesetcell* set;159,7667
   struct clause_cell*   pred;160,7735
   struct clause_cell*   succ;161,7805
}ClauseCell, *Clause_p;Clause_p162,7862
#define ClauseSetProp(173,8225
#define ClauseDelProp(174,8287
#define ClauseGiveProps(175,8349
#define ClauseQueryProp(178,8466
#define ClauseIsAnyPropSet(181,8581
#define ClauseQueryTPTPType(187,8755
#define TPTPTypesCombine(190,8831
#define ClauseSetCSSCPASource(194,8967
#define ClauseQueryCSSCPASource(197,9111
#define ClauseCellAllocRaw(200,9213
#define ClauseCellFree(201,9286
#define CLAUSECELL_MEM 204,9380
#define CLAUSECELL_MEM 206,9412
#define  ClauseGCMarkTerms(216,9673
#define  ClauseLiteralNumber(218,9748
#define  ClausePropLitNumber(221,9840
#define  ClauseIsEmpty(224,9944
#define  ClauseIsGoal(228,10097
#define  ClauseIsHorn(229,10153
#define  ClauseIsUnit(230,10211
#define  ClauseIsDemodulator(231,10274
#define  ClauseIsRWRule(234,10393
#define  ClauseIsGround(236,10503
#define  ClauseIsPositive(237,10569
#define  ClauseIsNegative(238,10631
#define  ClauseIsMixed(239,10693
#define  ClauseIsHypothesis(241,10790
#define  ClauseIsConjecture(242,10874
#define  ClauseFindNegPureVarLit(246,11037
#define  ClauseIsTrivial(248,11134
#define  ClauseSubsumeOrderSortLits(256,11384
#define  ClauseIsSubsumeOrdered(260,11632
#define  ClauseToStack(266,11900
#define  ClauseIsEquational(270,12015
#define  ClauseIsPureEquational(272,12101
#define  ClauseTermSetProp(275,12196
#define  ClauseTBTermDelPropCount(277,12295
#define  ClauseTermDelProp(279,12408
#define  ClauseIsSOS(282,12508
#define  ClauseCondMarkMaximalTerms(317,14171
#define  ClauseOrientLiterals(321,14322
#define  ClauseMarkMaximalLiterals(323,14417
#define  ClauseDeleteTermProperties(326,14527
#define  ClauseDepth(368,16114
#define  NormSubstClause(383,16710
#define  ClauseAddSymbolDistribution(389,16908
#define  ClauseAddSymbolDistExist(391,17053
#define  ClauseAddSymbolFeatures(394,17214
#define  ClauseComputeFunctionRanks(397,17361
#define  ClauseCollectVariables(399,17505
#define  ClauseAddFunOccs(402,17612
#define CLAUSE_ENSURE_DERIVATION(408,17874

CLAUSES/ccl_clausesets.h,669
#define CCL_CLAUSESETS28,674
typedef struct clausesetcell45,1221
   long      members;47,1252
   long      literals;48,1308
   Clause_p  anchor;49,1360
   SysDate   date;50,1400
   PDTree_p  demod_index;54,1602
   FVIAnchor_p fvindex;55,1659
   PDArray_p eval_indices;56,1719
   long      eval_no;57,1746
}ClauseSetCell, *ClauseSet_p;ClauseSet_p58,1768
#define CLAUSECELL_DYN_MEM 66,2024
#define ClauseSetCellAlloc(68,2086
#define ClauseSetCellFree(69,2168
#define     ClauseSetStorage(71,2239
#define     ClauseSetCardinality(79,2562
#define     ClauseSetEmpty(80,2617
#define     ClauseSetMoveClause(91,3273
#define     ClauseSetDocQuote(139,5640

CLAUSES/ccl_clausetrees.h,36
#define CCL_CLAUSESETFILTERS27,639

CLAUSES/ccl_condensation.h,79
#define CCL_CONDENSATION29,611
typedef bool (*CondenseFun)CondenseFun39,892

CLAUSES/ccl_context_sr.h,30
#define CCL_CONTEXT_SR31,757

CLAUSES/ccl_def_handling.h,327
#define CCL_DEF_HANDLING28,743
typedef struct def_store_cell38,1052
   TB_p         terms;40,1084
   ClauseSet_p  def_clauses;41,1148
   NumTree_p    def_assocs;42,1221
   FormulaSet_p def_archive;43,1297
}DefStoreCell, *DefStore_p;DefStore_p44,1326
#define DefStoreCellAlloc(53,1581
#define DefStoreCellFree(54,1660

CLAUSES/ccl_derivation.h,5316
#define CCL_DERIVATION26,596
   DONop,39,948
   DOQuote,40,958
   DORewrite,42,1036
   DOUnfold,43,1050
   DOApplyDef,44,1063
   DOContextSR,45,1078
   DODesEqRes,46,1094
   DOSR,47,1110
   DOAcRes,48,1119
   DOCondense,49,1131
   DONormalize,50,1146
   DOEvalAnswers,51,1162
   DONegateConjecture,53,1224
   DOFofSimplify,54,1247
   DOFNNF,55,1265
   DOShiftQuantors,56,1279
   DOVarRename,57,1299
   DOSkolemize,58,1315
   DODistDisjunctions,59,1331
   DOAnnoQuestion,60,1354
   DOParamod,62,1404
   DOSimParamod,63,1418
   DOOrderedFactor,64,1435
   DOEqFactor,65,1455
   DOEqRes,66,1470
   DOSplitEquiv,68,1518
   DOIntroDef,69,1535
   DOSplitConjunct70,1550
}OpCodes;OpCodes71,1569
   Arg1Fof 76,1596
   Arg1Cnf 77,1615
   Arg1Num 78,1634
   Arg2Fof 79,1654
   Arg2Cnf 80,1674
   Arg2Num 81,1694
}ArgDesc;ArgDesc82,1714
   DCNop 87,1741
   DCNop              = DONop,87,1741
   DCCnfQuote 88,1772
   DCCnfQuote         = DOQuote|DOQuote88,1772
   DCCnfQuote         = DOQuote|Arg1Cnf,Arg1Cnf88,1772
   DCFofQuote 89,1813
   DCFofQuote         = DOQuote|DOQuote89,1813
   DCFofQuote         = DOQuote|Arg1Fof,Arg1Fof89,1813
   DCRewrite 91,1920
   DCRewrite          = DORewrite|DORewrite91,1920
   DCRewrite          = DORewrite|Arg1Cnf,Arg1Cnf91,1920
   DCUnfold 92,1963
   DCUnfold           = DOUnfold|DOUnfold92,1963
   DCUnfold           = DOUnfold|Arg1Cnf,Arg1Cnf92,1963
   DCApplyDef 93,2005
   DCApplyDef         = DOApplyDef|DOApplyDef93,2005
   DCApplyDef         = DOApplyDef|Arg1Fof,Arg1Fof93,2005
   DCContextSR 94,2049
   DCContextSR        = DOContextSR|DOContextSR94,2049
   DCContextSR        = DOContextSR|Arg1Cnf,Arg1Cnf94,2049
   DCSR 95,2094
   DCSR               = DOSR|DOSR95,2094
   DCSR               = DOSR|Arg1Cnf,Arg1Cnf95,2094
   DCDesEqRes 96,2132
   DCDesEqRes         = DODesEqRes,96,2132
   DCACRes 97,2211
   DCACRes            = DOAcRes|DOAcRes97,2211
   DCACRes            = DOAcRes|Arg1Num,Arg1Num97,2211
   DCCondense 98,2252
   DCCondense         = DOCondense,98,2252
   DCNormalize 99,2288
   DCNormalize        = DONormalize,99,2288
   DCEvalAnswers 100,2325
   DCEvalAnswers      = DOEvalAnswers,100,2325
   DCNegateConjecture 102,2408
   DCNegateConjecture = DONegateConjecture,102,2408
   DCFofSimplify 103,2452
   DCFofSimplify      = DOFofSimplify,103,2452
   DCFNNF 104,2491
   DCFNNF             = DOFNNF,104,2491
   DCShiftQuantors 105,2526
   DCShiftQuantors    = DOShiftQuantors,105,2526
   DCVarRename 106,2567
   DCVarRename        = DOVarRename,106,2567
   DCSkolemize 107,2604
   DCSkolemize        = DOSkolemize,107,2604
   DCDistDisjunctions 108,2641
   DCDistDisjunctions = DODistDisjunctions,108,2641
   DCAnnoQuestion 109,2685
   DCAnnoQuestion     = DOAnnoQuestion,109,2685
   DCParamod 111,2756
   DCParamod          = DOParamod 111,2756
   DCParamod          = DOParamod |Arg1Cnf|Arg1Cnf111,2756
   DCParamod          = DOParamod |Arg1Cnf|Arg2Cnf,Arg2Cnf111,2756
   DCSimParamod 112,2808
   DCSimParamod       = DOSimParamod|DOSimParamod112,2808
   DCSimParamod       = DOSimParamod|Arg1Cnf|Arg1Cnf112,2808
   DCSimParamod       = DOSimParamod|Arg1Cnf|Arg2Cnf,Arg2Cnf112,2808
   DCOrderedFactor 113,2862
   DCOrderedFactor    = DOOrderedFactor|DOOrderedFactor113,2862
   DCOrderedFactor    = DOOrderedFactor|Arg1Cnf,Arg1Cnf113,2862
   DCEqFactor 114,2911
   DCEqFactor         = DOEqFactor|DOEqFactor114,2911
   DCEqFactor         = DOEqFactor|Arg1Cnf,Arg1Cnf114,2911
   DCEqRes 115,2955
   DCEqRes            = DOEqRes|DOEqRes115,2955
   DCEqRes            = DOEqRes|Arg1Cnf,Arg1Cnf115,2955
   DCSplitEquiv 117,3032
   DCSplitEquiv       = DOSplitEquiv|DOSplitEquiv117,3032
   DCSplitEquiv       = DOSplitEquiv|Arg1Fof,Arg1Fof117,3032
   DCIntroDef 118,3078
   DCIntroDef         = DOIntroDef,118,3078
   DCSplitConjunct 119,3114
   DCSplitConjunct    = DOSplitConjunct|DOSplitConjunct119,3114
   DCSplitConjunct    = DOSplitConjunct|Arg1FofArg1Fof119,3114
}DerivationCodes;DerivationCodes120,3162
   PONoObject 125,3197
   POSimpleDeriviation 126,3216
   PODetailedDerivation 127,3244
   POSingleStepDerivation 128,3273
}ProofObjectType;ProofObjectType129,3303
typedef struct derived_cell132,3323
   long       ref_count;134,3353
   bool       is_root;135,3378
   bool       is_fresh;136,3401
   Clause_p   clause;137,3425
   WFormula_p formula;138,3447
}DerivedCell, *Derived_p;Derived_p139,3470
typedef struct derivation_cell142,3498
   bool       ordered;144,3531
   Sig_p      sig;145,3554
   PObjTree_p deriv;146,3573
   PStack_p   roots;147,3594
   PStack_p   ordered_deriv;148,3615
}DerivationCell, *Derivation_p;Derivation_p149,3644
#define DCOpHasCnfArg1(159,3944
#define DCOpHasFofArg1(160,3988
#define DCOpHasNumArg1(161,4032
#define DCOpHasParentArg1(162,4077
#define DCOpHasArg1(163,4132
#define DCOpHasCnfArg2(165,4193
#define DCOpHasFofArg2(166,4238
#define DCOpHasNumArg2(167,4283
#define DCOpHasParentArg2(168,4328
#define DCOpHasArg2(169,4383
#define DPOpGetOpCode(171,4447
#define DerivedCellAlloc(186,4983
#define DerivedCellFree(187,5056
#define DerivedFree(190,5153
#define DerivationCellAlloc(198,5478
#define DerivationCellFree(199,5560

CLAUSES/ccl_eqn.h,3077
#define CCL_EQN27,601
   EPNoProps 42,968
   EPIsPositive 43,1036
   EPIsMaximal 44,1099
   EPIsStrictlyMaximal 45,1164
   EPIsEquLiteral 46,1226
   EPIsOriented 47,1281
   EPMaxIsUpToDate 48,1334
   EPHasEquiv 49,1405
   EPIsDominated 52,1537
   EPDominates 53,1611
   EPDominates         =   EPIsDominated,53,1611
   EPIsUsed 56,1751
   EPGONatural 58,1849
   EPIsSelected 62,2012
   EPIsPMIntoLit 63,2077
   EPFromClauseLit 64,2140
   EPPseudoLit 66,2263
   EPLPatMinimal 69,2463
   EPRPatMinimal 70,2528
   EPIsSplitLit 71,2593
}EqnProperties;EqnProperties73,2684
typedef struct eqncell80,2870
   EqnProperties  properties;82,2895
   Term_p         lterm;83,2966
   Term_p         rterm;84,2991
   int            pos;85,3016
   TB_p           bank;86,3039
   struct eqncell *next;next87,3099
}EqnCell, *Eqn_p, **EqnRef;EqnRef88,3157
   NoSide 93,3202
   LeftSide 94,3217
   MaxSide 95,3234
   RightSide 96,3250
   MinSide 97,3268
   BothSides 98,3284
}EqnSide;EqnSide99,3301
   PENormal 106,3365
   PEReverse 107,3383
}PatEqnDirection;PatEqnDirection108,3399
#define EQUAL_PREDICATE 113,3470
#define EQN_CELL_MEM 116,3532
#define EQN_CELL_MEM 118,3562
#define EqnCellAlloc(133,4061
#define EqnCellFree(134,4125
#define EqnGCMarkTerms(139,4286
#define EqnSetProp(142,4423
#define EqnDelProp(143,4477
#define EqnFlipProp(144,4531
#define EqnQueryProp(147,4634
#define EqnIsAnyPropSet(150,4737
#define EqnIsOriented(152,4801
#define EqnIsPositive(153,4860
#define EqnIsNegative(154,4919
#define EqnIsEquLit(155,4983
#define EqnIsMaximal(156,5044
#define EqnIsStrictlyMaximal(157,5102
#define EqnGetPredCode(160,5199
#define EqnIsSplitLit(161,5266
#define EqnHasEquiv(165,5396
#define EqnIsDominated(166,5452
#define EqnDominates(167,5514
#define EqnIsSelected(168,5572
#define EqnIsPropTrue(170,5632
#define EqnIsPropFalse(171,5711
#define EqnIsGround(173,5791
#define EqnIsPureVar(175,5886
#define EqnIsPartVar(177,5972
#define EqnIsPropositional(179,6058
#define EqnIsTypePred(181,6148
#define EqnIsXTypePred(183,6236
#define EqnIsRealXTypePred(185,6326
#define EqnIsSimpleAnswer(187,6417
#define EqnTermSetProp(190,6517
#define EqnTBTermDelPropCount(193,6676
#define EqnTermDelProp(196,6820
#define EqnTBTermEncode(204,7170
#define EqnPrintOriginal(210,7479
#define EqnSkolemSubst(222,7946
#define EqnIsTrivial(228,8178
#define EqnWeightCompare(241,8502
#define LiteralEqual(253,9208
#define EqnEquiv(267,9731
#define LiteralEquiv(271,9867
#define EqnStandardWeight(292,10680
#define EqnSplitModStandardWeight(296,10802
#define EqnStandardDiff(313,11432
#define EqnCountMaximalLiterals(348,12705
#define EqnAddSymbolDistribution(354,12865
#define EqnAddSymbolDistExist(357,13035
#define EqnAddSymbolDistributionLimited(361,13253
#define EqnAddSymbolFeaturesLimited(364,13469
#define EqnComputeFunctionRanks(373,13889
#define EqnCollectVariables(380,14092
#define EqnCollectPropVariables(384,14231
#define EqnAddFunOccs(388,14404
static __inline__ long EqnDepth(413,15136

CLAUSES/ccl_eqnlist.h,171
#define CCL_EQNLIST27,625
#define EqnListExtractFirst(56,1600
#define EqnListDeleteFirst(61,1804
#define EqnListInsertFirst(64,1930
#define NormSubstEqnList(103,3605

CLAUSES/ccl_eqnresolution.h,33
#define CCL_EQNRESOLUTION26,604

CLAUSES/ccl_f_generality.h,664
#define CCL_F_GENERALITY28,724
typedef struct fun_gen_cell42,1127
   FunCode f_code;44,1157
   long    term_freq;45,1176
   long    fc_freq;46,1198
}FunGenCell, *FunGen_p;FunGen_p47,1221
typedef struct gen_distrib_cell51,1282
   Sig_p    sig;53,1316
   long     size;54,1333
   FunGen_p dist_array;55,1351
   long     *f_distrib;f_distrib56,1377
}GenDistribCell, *GenDistrib_p;GenDistrib_p57,1401
#define GenDistribCellAlloc(65,1659
#define GenDistribCellFree(66,1744
#define GenDistribAddClauseSets(92,2977
#define GenDistribAddFormulaSets(95,3079
#define GenDistribBacktrackClauseSets(99,3184
#define GenDistribBacktrackFormulaSets(102,3304

CLAUSES/ccl_factor.h,26
#define CCL_FACTOR26,572

CLAUSES/ccl_fcvindexing.h,1088
#define CCL_FCVINDEXING29,705
typedef struct fvindex_parms_cell42,1039
   FVCollectCell cspec;44,1075
   bool use_perm_vectors;45,1100
   bool eliminate_uninformative;46,1126
   long max_symbols;47,1159
   long symbol_slack;48,1180
}FVIndexParmsCell, *FVIndexParms_p;FVIndexParms_p49,1202
typedef struct fv_index_cell53,1241
   bool     final;55,1272
   long     clause_count;56,1291
      IntMap_p successors;59,1331
      PTree_p  clauses;60,1358
   }u1;u161,1382
}FVIndexCell, *FVIndex_p;FVIndex_p62,1390
typedef struct fvi_anchor_cell64,1417
   FVCollect_p  cspec;66,1450
   PermVector_p perm_vector;67,1473
   FVIndex_p    index;68,1502
   long         storage;69,1525
}FVIAnchorCell, *FVIAnchor_p;FVIAnchor_p70,1550
#define FVIndexParmsCellAlloc(79,1858
#define FVIndexParmsCellFree(80,1946
#define FVIndexParmsFree(84,2118
#define FVIndexCellAlloc(86,2177
#define FVIndexCellFree(87,2253
#define FVIAnchorCellAlloc(92,2390
#define FVIAnchorCellFree(93,2472
#define FVINDEX_MEM 99,2684
#define FVINDEX_MEM 101,2713
#define FVIndexStorage(104,2762

CLAUSES/ccl_findex.h,193
#define CCL_FINDEX26,612
typedef struct findex_cell36,908
   PDArray_p index;38,937
}FIndexCell, *FIndex_p;FIndex_p40,1073
#define FIndexCellAlloc(50,1325
#define FIndexCellFree(51,1398

CLAUSES/ccl_formula_wrapper.h,1866
#define CCL_FORMULA_WRAPPER28,738
   WPIgnoreProps 38,1033
   WPInitial 39,1101
   WPInputFormula 40,1156
   WPInputFormula      = CPInputClause,40,1156
   WPType1 41,1233
   WPType1          = CPType1,41,1233
   WPType2 42,1274
   WPType2          = CPType2,42,1274
   WPType3 43,1306
   WPType3          = CPType3,43,1306
   WPTypeMask 44,1337
   WPTypeMask       = CPTypeMask,44,1337
   WPTypeUnknown 45,1371
   WPTypeAxiom 46,1439
   WPTypeAxiom      = CPTypeAxiom,46,1439
   WPTypeHypothesis 47,1502
   WPTypeHypothesis = CPTypeHypothesis,47,1502
   WPTypeConjecture 48,1570
   WPTypeConjecture = CPTypeConjecture,48,1570
   WPTypeLemma 49,1638
   WPTypeLemma      = CPTypeLemma,49,1638
   WPTypeNegConjecture 50,1701
   WPTypeNegConjecture = CPTypeNegConjecture,50,1701
   WPTypeQuestion 52,1827
   WPTypeQuestion   = CPTypeQuestion,52,1827
   WPIsRelevant 53,1865
   WPIsRelevant     = CPIsRelevant53,1865
}WFormulaProperties;WFormulaProperties54,1900
typedef struct wformula_cell57,1923
   WFormulaProperties    properties;59,1955
   long                  ident;60,1992
   TB_p                  terms;61,2024
   ClauseInfo_p          info;62,2056
   PStack_p              derivation;63,2087
   TFormula_p            tformula;64,2124
   struct formula_set_cell* set;65,2159
   struct wformula_cell* pred;66,2228
   struct wformula_cell* succ;67,2298
}WFormulaCell, *WFormula_p;WFormula_p68,2355
#define FormulaSetProp(80,2705
#define FormulaDelProp(81,2764
#define FormulaGiveProps(82,2823
#define FormulaQueryProp(85,2935
#define FormulaIsAnyPropSet(87,3044
#define FormulaSetType(88,3113
#define FormulaQueryType(91,3225
#define  FormulaIsHypothesis(93,3289
#define  FormulaIsConjecture(94,3367
#define WFormulaStandardWeight(99,3560
#define WFormulaCellAlloc(101,3637
#define WFormulaCellFree(102,3716

CLAUSES/ccl_formulafunc.h,66
#define CCL_FORMULAFUNC27,612
#define TFORMULA_GC_LIMIT 42,1138

CLAUSES/ccl_formulasets.h,381
#define CCL_FORMULASETS26,620
typedef struct formula_set_cell35,925
   WFormula_p anchor;37,959
   long       members;38,981
}FormulaSetCell, *FormulaSet_p;FormulaSet_p39,1004
#define FormulaSetCellAlloc(47,1262
#define FormulaSetCellFree(48,1347
#define      FormulaSetCardinality(53,1554
#define      FormulaSetEmpty(54,1611
#define      FormulaSetMoveFormula(63,2113

CLAUSES/ccl_freqvectors.h,2069
#define CCL_FREQVECTORS27,644
typedef FixedDArray_p PermVector_p;39,997
typedef struct tuple3_cell41,1034
   long pos;43,1063
   long diff;44,1076
   long value;45,1090
}Tuple3Cell;Tuple3Cell46,1105
#define FVINDEX_MAX_FEATURES_DEFAULT 48,1119
#define FVINDEX_SYMBOL_SLACK_DEFAULT 49,1199
typedef struct freq_vector_cell51,1277
   long size;53,1311
   long *array;array54,1355
   Clause_p clause;55,1371
}FreqVectorCell, *FreqVector_p, *FVPackedClause_p;FVPackedClause_p56,1427
#define FV_CLAUSE_FEATURES 60,1557
   FVINoFeatures,64,1602
   FVIACFeatures,65,1620
   FVISSFeatures,66,1638
   FVIAllFeatures,67,1656
   FVIBillFeatures,68,1675
   FVIBillPlusFeatures,69,1695
   FVIACFold,70,1719
   FVIACStagger,71,1733
   FVICollectFeatures,72,1750
}FVIndexType;FVIndexType73,1773
typedef struct fv_collect_cell79,1880
   FVIndexType features;81,1913
   bool  use_litcount;82,1938
   long* assembly_vector;83,1999
   long  ass_vec_len;85,2115
   long  res_vec_len;86,2178
   long  pos_count_base;90,2427
   long  pos_count_offset;91,2455
   long  pos_count_mod;92,2485
   long  neg_count_base;93,2509
   long  neg_count_offset;94,2537
   long  neg_count_mod;95,2564
   long  pos_depth_base;96,2588
   long  pos_depth_offset;97,2616
   long  pos_depth_mod;98,2643
   long  neg_depth_base;99,2667
   long  neg_depth_offset;100,2695
   long  neg_depth_mod;101,2722
   long        max_symbols;104,2884
}FVCollectCell, *FVCollect_p;FVCollect_p105,2912
#define PermVectorAlloc(114,3197
#define PermVectorFree(115,3250
#define PermVectorCopy(116,3302
#define PermVectorPrint(117,3353
#define FreqVectorCellAlloc(125,3596
#define FreqVectorCellFree(126,3681
#define FVACCompatSize(129,3755
#define FVSSCompatSize(130,3819
#define FVFullSize(131,3864
#define FVSize(132,3928
#define FVCollectCellAlloc(137,4121
#define FVCollectCellFree(138,4203
#define FreqVectorFree(146,4385
#define FreqVectorFree(148,4455
#define FVPackedClauseFree(212,6955
#define FVPackedClauseFree(214,7033
#define FreqVectorSub(221,7280

CLAUSES/ccl_g_lithash.h,485
#define CCL_G_LITHASH28,696
typedef struct lit_desc_cell36,971
   Term_p   lit;38,1002
   Clause_p clause;41,1137
}LitDescCell,*LitDesc_p;LitDesc_p45,1350
typedef struct lit_hash_cell51,1585
   long     sig_size;53,1616
   PTree_p  *pos_lits;pos_lits54,1668
   PTree_p  *neg_lits;neg_lits55,1736
}LitHashCell,*LitHash_p;LitHash_p57,1818
#define LitDescCellAlloc(64,2068
#define LitDescCellFree(65,2144
#define LitHashCellAlloc(69,2268
#define LitHashCellFree(70,2344

CLAUSES/ccl_garbage_coll.h,270
#define CCL_GARBAGE_COLL28,711
typedef struct gc_admin_cell40,1021
   TB_p    bank;42,1052
   PTree_p clause_sets;43,1069
   PTree_p formula_sets;44,1093
}GCAdminCell, *GCAdmin_p;GCAdmin_p45,1118
#define GCAdminCellAlloc(52,1369
#define GCAdminCellFree(53,1445

CLAUSES/ccl_global_indices.h,610
#define CCL_GLOBAL_INDICES26,628
typedef struct global_indices_cell38,972
   char              rw_bw_index_type[rw_bw_index_type40,1009
   char              pm_from_index_type[pm_from_index_type41,1071
   char              pm_into_index_type[pm_into_index_type42,1135
   char              pm_negp_index_type[pm_negp_index_type43,1199
   Sig_p             sig;44,1263
   SubtermIndex_p    bw_rw_index;45,1289
   OverlapIndex_p    pm_from_index;46,1326
   OverlapIndex_p    pm_into_index;47,1362
   OverlapIndex_p    pm_negp_index;48,1398
}GlobalIndices, *GlobalIndices_p;GlobalIndices_p49,1434

CLAUSES/ccl_groundconstr.h,519
#define CCL_GROUNDCONSTR27,617
typedef struct lit_constr_cell36,896
   bool    constrained;38,929
   PTree_p constraints;39,953
}LitConstrCell;LitConstrCell40,977
typedef struct lit_occ_table42,994
   long          sig_size;44,1025
   int           maxarity;45,1052
   LitConstrCell *matrix;matrix46,1079
}LitOccTableCell, *LitOccTable_p;LitOccTable_p47,1105
#define LitOccTableCellAlloc(56,1366
#define LitOccTableCellFree(57,1454
#define LIT_OCC_TABLE_REF(59,1529
#define LIT_OCC_TABLE_ENTRY(62,1645

CLAUSES/ccl_grounding.h,1381
#define CCL_GROUNDING27,656
typedef struct var_inst40,1084
   Term_p        variable;42,1110
   PStack_p      alternatives;43,1137
   PStackPointer position;44,1168
}VarInstCell, *VarInst_p;VarInst_p45,1195
typedef struct varset_inst49,1261
   long size;51,1290
   VarInst_p cells;52,1304
}VarSetInstCell, *VarSetInst_p;VarSetInst_p53,1324
   GCUNone 62,1529
   GCUPos 63,1545
   GCUNeg 64,1561
   GCUBoth 65,1577
   GCUBoth = GCUPos|GCUPos65,1577
   GCUBoth = GCUPos|GCUNegGCUNeg65,1577
}GCUEncoding;GCUEncoding66,1604
#define DEFAULT_LIT_NO 68,1619
#define DEFAULT_LIT_GROW 69,1649
   cpl_complete,73,1696
   cpl_lowmem,74,1713
   cpl_timeout,75,1728
   cpl_unknown76,1744
GroundSetState;78,1761
typedef struct ground_set_cell80,1778
   TB_p            lit_bank;82,1811
   long            max_literal;84,1904
   long            unit_no;85,1965
   GroundSetState  complete;86,1993
   PDArray_p       units;87,2059
   PDArray_p       unit_terms;88,2121
   PropClauseSet_p non_units;89,2181
}GroundSetCell, *GroundSet_p;GroundSet_p90,2211
#define VarSetInstCellAlloc(96,2465
#define VarSetInstCellFree(97,2550
#define EqnLitCode(113,3083
#define GroundSetCellAlloc(115,3131
#define GroundSetCellFree(116,3213
#define     GroundSetMembers(124,3560
#define     GroundSetDimacsPrintMembers(130,3820
#define     GroundSetLiterals(132,3934

CLAUSES/ccl_inferencedoc.h,2174
#define CCL_INFERENCEDOC26,653
   inf_noinf,38,980
   inf_initial,39,994
   inf_quote,40,1010
   inf_paramod,41,1024
   inf_sim_paramod,42,1040
   inf_efactor,43,1060
   inf_factor,44,1076
   inf_eres,45,1091
   inf_split,46,1104
   inf_simplify_reflect,47,1118
   inf_context_simplify_reflect,48,1143
   inf_ac_resolution,49,1176
   inf_condense,50,1198
   inf_minimize,51,1215
   inf_rewrite,52,1232
   inf_fof_simpl,54,1252
   inf_fof_split_equiv,55,1270
   inf_fof_nnf,56,1294
   inf_fof_intro_def,57,1310
   inf_fof_apply_def,58,1332
   inf_shift_quantors,59,1354
   inf_fof_distrib,60,1377
   inf_annotate_question,61,1397
   inf_eval_answers,62,1423
   inf_var_rename,63,1444
   inf_skolemize_out,64,1463
   inf_neg_conjecture65,1485
}InfType;InfType66,1507
   no_format,70,1536
   lop_format,71,1550
   pcl_format,72,1565
   tstp_format,73,1580
   tptp_format,74,1596
   xml_format75,1612
}OutputFormatType;OutputFormatType76,1626
#define PCL_QUOTE 79,1648
#define PCL_ER 80,1671
#define PCL_PM 81,1694
#define PCL_SPM 82,1717
#define PCL_EF 83,1741
#define PCL_OF 84,1764
#define PCL_SPLIT 85,1787
#define TSTP_SPLIT_REFINED 86,1813
#define TSTP_SPLIT_BASE 87,1849
#define PCL_RW 88,1884
#define PCL_SR 89,1907
#define PCL_CSR 90,1930
#define PCL_ACRES 91,1954
#define PCL_CN 92,1977
#define PCL_CONDENSE 93,2000
#define PCL_SC 95,2033
#define PCL_SE 96,2069
#define PCL_FS 97,2102
#define PCL_NNF 98,2142
#define PCL_ID 99,2171
#define PCL_ID_DEF 100,2203
#define PCL_AD 101,2247
#define PCL_SQ 102,2278
#define PCL_VR 103,2314
#define PCL_SK 104,2351
#define PCL_DSTR 105,2382
#define PCL_ANNOQ 106,2414
#define PCL_EVANS 107,2454
#define PCL_NC 108,2495
#define DocClauseCreationDefault(124,3140
#define DocClauseModificationDefault(133,3557
#define DocClauseQuoteDefault(141,3857
#define DocClauseRewriteDefault(148,4129
#define DocFormulaCreationDefault(159,4580
#define DocFormulaModificationDefault(166,4886
#define DocFormulaIntroDefsDefault(171,5143
#define DocIntroSplitDefDefault(177,5342
#define DocIntroSplitDefRestDefault(182,5573
#define DocClauseApplyDefsDefault(188,5879

CLAUSES/ccl_neweval.h,968
#define CCL_NEWEVAL31,784
typedef long EvalPriority;41,1106
#define PrioBest 43,1134
#define PrioPrefer 44,1157
#define PrioNormal 45,1180
#define PrioDefer 46,1203
#define PrioLargestReasonable 47,1226
typedef struct simple_eval_cell50,1263
   EvalPriority      priority;52,1297
   float             heuristic;53,1361
   struct eval_cell* lson;54,1425
   struct eval_cell* rson;55,1491
}SimpleEvalCell, *SimpleEval_p;SimpleEval_p56,1520
typedef struct eval_cell58,1553
   int               eval_no;60,1580
   long              eval_count;61,1648
   void*             object;63,1742
   SimpleEvalCell    evals[evals64,1798
}EvalCell, *Eval_p;Eval_p65,1828
#define EvalsFree(72,2073
#define EvalTreeFindSmallestWrap(73,2114
#define EvalTreePrintInOrderWrap(74,2194
#define EVAL_SIZE(82,2538
#define EvalCellAlloc(83,2619
#define EvalCellFree(84,2694
#define EVAL_MEM(87,2795
#define EVAL_MEM(89,2846
#define EvalTreeTraverseExit(114,3803

CLAUSES/ccl_overlap_index.h,75
#define CCL_OVERLAP_INDEX29,796
typedef FPIndex_p OverlapIndex_p;40,1105

CLAUSES/ccl_paramod.h,601
#define CCL_PARAMOD27,619
   ParamodPlain,39,961
   ParamodAlwaysSim,40,1027
   ParamodOrientedSim,41,1097
   ParamodDecreasingSim,44,1251
   ParamodSizeDecreasingSim 46,1369
}ParamodulationType;ParamodulationType48,1481
   TB_p        bank;52,1524
   OCB_p       ocb;53,1545
   VarBank_p   freshvars;54,1565
   Clause_p    new_orig;55,1591
   Clause_p    from;56,1616
   CompactPos  from_cpos;57,1637
   ClausePos_p from_pos;58,1663
   Clause_p    into;59,1688
   CompactPos  into_cpos;60,1709
   ClausePos_p into_pos;61,1735
}ParamodInfoCell, *ParamodInfo_p;ParamodInfo_p62,1760

CLAUSES/ccl_pdtrees.h,1739
#define CCL_PDTREES31,829
typedef struct pdt_node_cell44,1208
   IntMap_p           f_alternatives;46,1239
   PDArray_p          v_alternatives;47,1302
   FunCode            max_var;48,1358
   long               size_constr;49,1424
   SysDate            age_constr;53,1571
   struct pdt_node_cell *parent;parent56,1711
   long               ref_count;58,1808
   PTree_p            entries;60,1896
   Term_p             variable;63,2028
   bool               bound;68,2212
   FunCode            trav_count;74,2445
}PDTNodeCell, *PDTNode_p;PDTNode_p80,2664
typedef struct pd_tree_cell85,2808
   PDTNode_p tree;87,2838
   PStack_p  term_stack;88,2857
   PStack_p  term_proc;89,2916
   PDTNode_p tree_pos;90,2990
   PStack_p  store_stack;91,3049
   Term_p    term;92,3117
   SysDate   term_date;93,3183
   long      term_weight;94,3252
   int       prefer_general;95,3293
   long      node_count;96,3334
   long      clause_count;97,3390
   long      arr_storage_est;98,3443
   unsigned  long match_count;99,3510
   unsigned  long visited_count;101,3596
}PDTreeCell, *PDTree_p;PDTree_p103,3689
#define PDNODE_FUN_INIT_ALT 109,3937
#define PDNODE_FUN_GROW_ALT 110,3967
#define PDNODE_VAR_INIT_ALT 111,3997
#define PDNODE_VAR_GROW_ALT 112,4027
#define  PDTREE_IGNORE_TERM_WEIGHT 114,4058
#define  PDTREE_IGNORE_NF_DATE 115,4102
#define  PDT_NODE_INIT_VAL(116,4159
#define  PDT_NODE_CLOSED(117,4219
#define   PDTreeCellAlloc(120,4363
#define   PDTreeCellFree(121,4438
#define PDTREE_CELL_MEM 124,4534
#define PDTREE_CELL_MEM 126,4567
#define PDTNODE_MEM 133,4715
#define PDTNODE_MEM 135,4744
#define   PDTreeStorage(138,4793
#define   PDTNodeCellAlloc(148,5037
#define   PDTNodeCellFree(149,5115

CLAUSES/ccl_proofstate.h,2541
#define CTO_PROOFSTATE30,771
typedef struct proofstatecell43,1154
   Sig_p             signature;45,1186
   long              original_symbols;46,1218
   TB_p              original_terms;47,1257
   TB_p              terms;48,1294
   TB_p              tmp_terms;49,1322
   VarBank_p         freshvars;50,1354
   GCAdmin_p         gc_original_terms;51,1386
   GCAdmin_p         gc_terms;52,1427
   FormulaSet_p      f_ax_archive;53,1459
   FormulaSet_p      f_axioms;54,1494
   ClauseSet_p       axioms;55,1525
   ClauseSet_p       ax_archive;56,1554
   ClauseSet_p       processed_pos_rules;57,1587
   ClauseSet_p       processed_pos_eqns;58,1629
   ClauseSet_p       processed_neg_units;59,1670
   ClauseSet_p       processed_non_units;60,1712
   ClauseSet_p       unprocessed;61,1754
   ClauseSet_p       tmp_store;62,1788
   ClauseSet_p       archive;63,1820
   FormulaSet_p      f_archive;64,1850
   PStack_p          extract_roots;65,1882
   GlobalIndices     gindices;66,1918
   bool              fvi_initialized;67,1949
   FVCollect_p       fvi_cspec;69,2073
   ClauseSet_p       demods[demods70,2105
   ClauseSet_p       watchlist;73,2287
   GlobalIndices     wlindices;74,2319
   bool              state_is_complete;75,2351
   DefStore_p        definition_store;76,2391
   FVCollect_p       def_store_cspec;77,2430
   bool              status_reported;79,2469
   ulong_c           answer_count;80,2507
   ulong_c           processed_count;82,2543
   ulong_c           proc_trivial_count;83,2581
   ulong_c           proc_forward_subsumed_count;84,2622
   ulong_c           proc_non_trivial_count;85,2672
   ulong_c           other_redundant_count;86,2717
   ulong_c           non_redundant_deleted;88,2829
   ulong_c           backward_subsumed_count;89,2873
   ulong_c           backward_rewritten_count;90,2919
   ulong_c           backward_rewritten_lit_count;91,2966
   ulong_c           generated_count;92,3017
   ulong_c           generated_lit_count;93,3055
   ulong_c           non_trivial_generated_count;94,3097
   ulong_c           context_sr_count;95,3147
   ulong_c           paramod_count;96,3186
   ulong_c           factor_count;97,3222
   ulong_c           resolv_count;98,3257
}ProofStateCell, *ProofState_p;ProofState_p99,3295
#define ProofStateCellAlloc(107,3553
#define ProofStateCellFree(109,3640
#define      ProofStateStorage(121,4205
#define ProofStateAxNo(136,4815
#define WATCHLIST_INLINE_STRING 139,4960
#define WATCHLIST_INLINE_QSTRING 140,5020

CLAUSES/ccl_propclauses.h,805
#define CCL_PROPCLAUSES28,710
typedef struct proplitcell37,985
   EqnProperties properties;39,1014
   Term_p        lit;40,1043
}PropLitCell, *PropLit_p;PropLit_p41,1065
typedef struct propclausecell44,1093
   int        lit_no;46,1125
   PropLit_p  literals;47,1147
   struct propclausecell *next;next48,1171
}PropClauseCell, *PropClause_p;PropClause_p49,1244
typedef struct propclausesetcell51,1277
   long         members;53,1312
   long         literals;54,1337
   long         empty_clauses;55,1363
   PropClause_p list;56,1394
   PropClause_p *inspos;inspos57,1441
}PropClauseSetCell, *PropClauseSet_p;PropClauseSet_p61,1650
#define PropClauseCellAlloc(71,1916
#define PropClauseCellFree(72,2001
#define PropClauseSetCellAlloc(82,2371
#define PropClauseSetCellFree(83,2465

CLAUSES/ccl_relevance.h,570
#define CCL_RELEVANCE27,647
typedef struct relevance_cell40,1085
   Sig_p     sig;42,1117
   PList_p   clauses_core;44,1136
   PList_p   formulas_core;45,1163
   PList_p   clauses_rest;47,1195
   PList_p   formulas_rest;48,1222
   FIndex_p  clauses_index;50,1251
   FIndex_p  formulas_index;51,1279
   long      max_level;53,1312
   PDArray_p fcode_relevance;54,1336
   PStack_p  new_codes;55,1366
   PStack_p  relevance_levels;56,1390
}RelevanceCell, *Relevance_p;Relevance_p57,1421
#define RelevanceCellAlloc(65,1677
#define RelevanceCellFree(66,1759

CLAUSES/ccl_rewrite.h,414
#define CCL_REWRITE26,594
typedef struct rw_desc_cell40,1024
   OCB_p        ocb;42,1054
   TB_p         bank;43,1075
   ClauseSet_p  *demods;demods44,1097
   SysDate      demod_date;45,1122
   RewriteLevel level;46,1150
   bool         prefer_general;47,1173
   bool         sos_rewritten;48,1205
}RWDescCell, *RWDesc_p;RWDesc_p49,1256
#define RWDescCellAlloc(59,1508
#define RWDescCellFree(60,1581

CLAUSES/ccl_simparamod.h,30
#define CCL_SIMPARAMOD27,657

CLAUSES/ccl_sine.h,560
#define CCL_SINE27,662
typedef struct d_rel_cell39,1022
   FunCode  f_code;41,1050
   bool     activated;42,1070
   PStack_p d_clauses;43,1093
   PStack_p d_formulas;44,1116
}DRelCell, *DRel_p;DRel_p45,1140
typedef struct d_relation_cell50,1229
   PDArray_p relation;52,1262
}DRelationCell, *DRelation_p;DRelation_p53,1301
   ATNoType,60,1371
   ATClause,61,1384
   ATFormula62,1397
}AxiomType;AxiomType63,1410
#define DRelCellAlloc(70,1647
#define DRelCellFree(71,1714
#define DRelationCellAlloc(76,1839
#define DRelationCellFree(77,1921

CLAUSES/ccl_splitting.h,585
#define CCL_SPLITTING27,676
   SplitGroundNone 34,747
   SplitGroundOne 36,828
   SplitGroundFull 38,938
}SplitType;SplitType39,1005
   SplitNone 49,1264
   SplitHorn 50,1289
   SplitNonHorn 51,1314
   SplitNegative 52,1339
   SplitPositive 53,1364
   SplitMixed 54,1389
   SplitAll 55,1415
}SplitClassType;SplitClassType56,1439
#define QuerySplitClass(58,1457
#define SetSplitClass(59,1507
typedef struct lit_split_desc67,1789
   Eqn_p   literal;69,1821
   int     part;70,1841
   PTree_p varset;71,1858
}LitSplitDescCell, *LitSplitDesc_p;LitSplitDesc_p74,2032

CLAUSES/ccl_subsumption.h,30
#define CCL_SUBSUPTION27,668

CLAUSES/ccl_subterm_index.h,75
#define CCL_SUBTERM_INDEX27,698
typedef FPIndex_p SubtermIndex_p;37,1006

CLAUSES/ccl_subterm_tree.h,595
#define CCL_SUBTERM_TREE27,688
typedef struct bw_rw_payload39,1041
   PTree_p rw_rest;41,1072
   PTree_p rw_full;44,1236
}BWRWPayload;BWRWPayload45,1306
typedef struct overlap_payload50,1367
   PObjTree_p clauses;52,1400
}OverlapPayload;OverlapPayload53,1423
typedef struct subterm_occ_cell58,1496
   Term_p       term;60,1530
      BWRWPayload    occs;63,1567
      OverlapPayload pos;64,1594
   }pl;pl65,1620
}SubtermOccCell, *SubtermOcc_p;SubtermOcc_p66,1628
typedef PObjTree_p SubtermTree_p;68,1661
#define SubtermOccCellAlloc(75,1920
#define SubtermOccCellFree(76,2002

CLAUSES/ccl_tautologies.h,31
#define CCL_TAUTOLOGIES28,714

CLAUSES/ccl_tcnf.h,94
#define CCL_TCNF27,655
#define TFORM_MANY_CLAUSES 42,1203
#define TFORM_MANY_LIMIT 43,1239

CLAUSES/ccl_tformulae.h,591
#define CCL_TFORMULAE27,650
typedef Term_p TFormula_p;35,922
#define TFORM_RENAME_LIMIT 41,1173
#define TFORM_RENAME_LIMIT_STR 42,1207
#define   TFormulaHasSubForm1(44,1244
#define   TFormulaHasSubForm2(47,1379
#define   TFormulaIsBinary(51,1516
#define   TFormulaIsUnary(52,1572
#define   TFormulaIsQuantified(53,1628
#define   TFormulaIsLiteral(55,1751
#define   TFormulaIsPropTrue(60,1904
#define   TFormulaIsPropFalse(61,1982
#define    TFormulaGCMarkCells(63,2062
#define    TFormulaEqual(72,2626
#define    TFormulaCopy(74,2741
#define   TFormulaFindMaxVarCode(85,3308

CLAUSES/ccl_unfold_defs.h,114
#define CCL_UNFOLD_DEFS31,925
#define DEFAULT_EQDEF_INCRLIMIT 42,1291
#define DEFAULT_EQDEF_MAXCLAUSES 45,1386

CLAUSES/ccl_unit_simplify.h,206
#define CCL_UNIT_SIMPLIFY28,671
   NoUnitSimplify,40,967
   TopLevelUnitSimplify,41,1021
   FullUnitSimplify 42,1070
}UnitSimplifyType;UnitSimplifyType43,1136
#define TransUnitSimplifyString(52,1415

CONTROL/cco_batch_spec.h,879
#define CCO_BATCH_SPEC27,676
   BONone,43,1095
   BODesired,44,1106
   BORequired45,1120
}BOOutputType;BOOutputType46,1134
typedef struct batch_spec_cell53,1304
   char         *executable;executable55,1337
   IOFormat     format;56,1366
   char*        category;57,1390
   char*        train_dir;58,1438
   bool         ordered;59,1465
   BOOutputType res_assurance;60,1490
   BOOutputType res_proof;61,1521
   BOOutputType res_model;62,1548
   BOOutputType res_answer;63,1575
   BOOutputType res_list_fof;64,1603
   long         per_prob_limit;65,1633
   long         total_wtc_limit;66,1695
   PStack_p     includes;67,1757
   PStack_p     source_files;68,1827
   PStack_p     dest_files;69,1883
}BatchSpecCell, *BatchSpec_p;BatchSpec_p70,1940
#define BatchSpecCellAlloc(79,2197
#define BatchSpecCellFree(80,2279
#define BatchSpecProblemNo(93,2761

CONTROL/cco_clausesplitting.h,35
#define CCO_CLAUSESPLITTING26,611

CONTROL/cco_eqnresolving.h,32
#define CCO_EQNRESOLVING26,596

CONTROL/cco_eserver.h,238
#define CCO_ESERVER25,547
typedef struct eserver_cell37,873
   int         listening;39,903
   PQueue_p    sessions;40,959
}EServerCell, *EServer_p;EServer_p41,1021
#define EServerCellAlloc(56,1449
#define EServerCellFree(57,1525

CONTROL/cco_esession.h,441
#define CCO_ESESSION27,644
   ESNoState,40,986
   ESWaiting,41,1015
   ESActive,42,1062
   ESStale 43,1108
}ESessionState;ESessionState44,1159
typedef struct esession_cell47,1177
   ESessionState state;49,1208
   TCPChannel_p  channel;50,1232
   EPCtrlSet_p   running;51,1258
}ESessionCell, *ESession_p;ESession_p52,1284
#define ESessionCellAlloc(67,1714
#define ESessionCellFree(68,1793
#define     ESessionSetState(77,2090

CONTROL/cco_factoring.h,29
#define CCO_FACTORING26,579

CONTROL/cco_forward_contraction.h,82
#define CCO_FORWARD_CONTRACTION28,693
#define DEFAULT_FILTER_DESCRIPTOR 49,1378

CONTROL/cco_interpreted.h,31
#define CCO_INTERPRETED28,747

CONTROL/cco_paramodulation.h,34
#define CCO_PARAMODULATION26,603

CONTROL/cco_proc_ctrl.h,1193
#define CCO_PROC_CTRL28,710
   PRNoResult 42,1069
   PRTheorem,43,1088
   PRUnsatisfiable,44,1102
   PRSatisfiable,45,1122
   PRCounterSatisfiable,46,1140
   PRFailure,47,1165
   PRGaveUp48,1179
}ProverResult;ProverResult49,1191
typedef struct e_pctrl_cell52,1208
   pid_t        pid;54,1238
   FILE*        pipe;55,1259
   int          fileno;56,1281
   char*        input_file;57,1305
   char*        name;58,1333
   long long    start_time;59,1355
   long         prob_time;60,1383
   ProverResult result;61,1410
   DStr_p       output;62,1434
}EPCtrlCell, *EPCtrl_p;EPCtrl_p63,1458
#define EPCTRL_BUFSIZE 65,1483
typedef struct e_pctrl_set_cell67,1511
   NumTree_p procs;69,1545
   char      buffer[buffer70,1592
}EPCtrlSetCell, *EPCtrlSet_p;EPCtrlSet_p71,1629
#define SZS_THEOREM_STR 77,1883
#define SZS_UNSAT_STR 78,1933
#define SZS_SATSTR_STR 79,1989
#define SZS_COUNTERSAT_STR 80,2043
#define SZS_GAVEUP_STR 81,2104
#define SZS_FAILURE_STR 82,2153
#define E_OPTIONS 85,2195
#define EPCtrlCellAlloc(92,2382
#define EPCtrlCellFree(93,2455
#define EPCtrlSetCellAlloc(108,2883
#define EPCtrlSetCellFree(109,2965
#define     EPCtrlSetEmpty(116,3298

CONTROL/cco_proofproc.h,63
#define CCO_PROOFPROC26,567
#define TMPBANK_GC_LIMIT 57,1589

CONTROL/cco_scheduling.h,329
#define CCO_SCHEDULING26,603
typedef struct schedule_cell37,942
   char*        heu_name;39,973
   TermOrdering ordering;40,999
   char*        sine;41,1025
   float        time_fraction;42,1047
   rlim_t       time_absolute;43,1078
}ScheduleCell, *Schedule_p;Schedule_p44,1109
#define DEFAULT_SCHED_TIME_LIMIT 51,1362

CONTROL/cco_simplification.h,33
#define CCI_SIMPIFICATION26,601

CONTROL/cco_sine.h,518
#define CCO_SINE26,581
typedef struct strtuctured_FOF_spec_cell41,1090
   Sig_p         sig;43,1133
   TB_p          terms;44,1155
   PStack_p      clause_sets;45,1179
   PStack_p      formula_sets;46,1209
   StrTree_p     parsed_includes;47,1240
   PStackPointer shared_ax_sp;48,1274
   GenDistrib_p  f_distrib;49,1305
}StructFOFSpecCell, *StructFOFSpec_p;StructFOFSpec_p50,1333
#define StructFOFSpecCellAlloc(60,1599
#define StructFOFSpecCellFree(61,1693
#define       StructFOFSpecResetShared(73,2100

EXTERNAL/cex_csscpa.h,691
#define CEX_CSSCPA26,611
typedef struct csscpa_state_cell37,938
   Sig_p             sig;39,973
   TB_p              terms;40,999
   TB_p              tmp_terms;41,1027
   ClauseSet_p       pos_units;42,1059
   ClauseSet_p       neg_units;43,1091
   ClauseSet_p       non_units;44,1123
   long              literals;45,1155
   long              clauses;46,1186
   long              weight;47,1216
}CSSCPAStateCell, *CSSCPAState_p;CSSCPAState_p48,1245
   contradicts,53,1319
   improved,54,1335
   rejected,55,1348
   forced,56,1361
   requested,57,1372
   unknown58,1386
ClauseStatusType;60,1399
#define CSSCPAStateCellAlloc(66,1641
#define CSSCPAStateCellFree(67,1729

HEURISTICS/che_axfilter.h,1291
#define CHE_AXFILTER28,742
   AFNoFilter 40,1064
   AFGSinE,41,1083
   AFThreshold 42,1121
}AxFilterType;AxFilterType43,1176
   GMNoMeasure,51,1326
   GMTerms,52,1342
   GMLiterals,53,1354
   GMFormulas,54,1369
   GMPosFormula,55,1384
   GMPosLiteral,56,1401
   GMPosTerms,57,1418
   GMNegFormula,58,1433
   GMNegLiteral,59,1450
   GMNegTerms60,1467
}GeneralityMeasure;GeneralityMeasure61,1481
   char*             name;68,1565
   AxFilterType      type;69,1592
   GeneralityMeasure gen_measure;70,1619
   bool              use_hypotheses;71,1653
   double            benevolence;72,1690
   long              generosity;73,1724
   long              max_recursion_depth;74,1757
   long long         max_set_size;75,1799
   long              threshold;76,1834
   double            max_set_fraction;77,1866
   bool              add_no_symbol_axioms;78,1906
}AxFilterCell, *AxFilter_p;AxFilter_p79,1949
   PStack_p set;85,2020
}AxFilterSetCell, *AxFilterSet_p;AxFilterSet_p86,2037
#define AxFilterCellAlloc(94,2329
#define AxFilterCellFree(95,2408
#define AxFilterSetCellAlloc(106,2821
#define AxFilterSetCellFree(107,2909
#define       AxFilterSetElements(114,3248
#define       AxFilterSetGetFilter(115,3307
#define       AxFilterSetAddFilter(116,3391

HEURISTICS/che_axiomscan.h,31
#define CHE_AXIOMSCAN_H26,584

HEURISTICS/che_clausefeatures.h,76
#define CHE_CLAUSEFEATURES26,606
#define ClauseAddVarDistribution(49,1390

HEURISTICS/che_clausesetfeatures.h,7174
#define CHE_CLAUSESETFEATURES26,616
   SpecUnit,37,947
   SpecHorn,38,960
   SpecGeneral,39,973
   SpecNoEq,40,989
   SpecSomeEq,41,1002
   SpecPureEq,42,1017
   SpecFewPosNonGroundUnits,43,1032
   SpecSomePosNonGroundUnits,44,1061
   SpecManyPosNonGroundUnits,45,1091
   SpecFewPosGround,46,1121
   SpecSomePosGround,47,1142
   SpecManyPosGround,48,1164
   SpecFewAxioms,49,1186
   SpecSomeAxioms,50,1205
   SpecManyAxioms,51,1224
   SpecFewLiterals,52,1243
   SpecSomeLiterals,53,1263
   SpecManyLiterals,54,1284
   SpecSmallTerms,55,1305
   SpecMediumTerms,56,1324
   SpecLargeTerms,57,1344
   SpecArity0,58,1363
   SpecArity1,59,1378
   SpecArity2,60,1393
     SpecArity3Plus,61,1408
   SpecAritySumSmall,62,1429
   SpecAritySumMedium,63,1451
   SpecAritySumLarge,64,1474
   SpecDepthShallow,65,1496
   SpecDepthMedium,66,1517
   SpecDepthDeep,67,1537
}SpecFeatures;SpecFeatures68,1555
typedef struct spec_limits_cell75,1689
   bool   ngu_absolute;77,1723
   double ngu_few_limit;78,1747
   double ngu_many_limit;79,1772
   bool   gpc_absolute;80,1798
   double gpc_few_limit;81,1822
   double gpc_many_limit;82,1847
   long   ax_some_limit;83,1873
   long   ax_many_limit;84,1898
   long   lit_some_limit;85,1923
   long   lit_many_limit;86,1949
   long   term_medium_limit;87,1975
   long   term_large_limit;88,2004
   long   far_sum_medium_limit;89,2032
   long   far_sum_large_limit;90,2064
   long   depth_medium_limit;91,2095
   long   depth_deep_limit;92,2125
   int    symbols_medium_limit;93,2153
   int    symbols_large_limit;94,2185
   int    predc_medium_limit;95,2216
   int    predc_large_limit;96,2246
   int    pred_medium_limit;97,2275
   int    pred_large_limit;98,2304
   int    func_medium_limit;99,2332
   int    func_large_limit;100,2361
   int    fun_medium_limit;101,2389
   int    fun_large_limit;102,2417
}SpecLimitsCell, *SpecLimits_p;SpecLimits_p103,2444
typedef struct spec_feature_cell108,2598
   SpecFeatures axiomtypes;110,2633
   SpecFeatures goaltypes;111,2661
   SpecFeatures eq_content;112,2688
   SpecFeatures ng_unit_content;113,2716
   SpecFeatures ground_positive_content;114,2749
   bool         goals_are_ground;115,2790
   SpecFeatures set_clause_size;116,2824
   SpecFeatures set_literal_size;117,2857
   SpecFeatures set_termcell_size;118,2891
   SpecFeatures max_fun_ar_class;119,2926
   SpecFeatures avg_fun_ar_class;121,3016
   SpecFeatures sum_fun_ar_class;122,3050
   SpecFeatures max_depth_class;123,3084
   long         clauses;124,3117
   long         goals;125,3142
   long         axioms;126,3165
   long         literals;127,3189
   long         term_cells;128,3215
   long         clause_max_depth;129,3243
   long         clause_avg_depth;130,3277
   long         unit;131,3311
   long         unitgoals;132,3333
   long         unitaxioms;133,3360
   long         horn;134,3388
   long         horngoals;135,3410
   long		hornaxioms;136,3437
   long		eq_clauses;137,3458
   long		peq_clauses;138,3479
   long		groundunitaxioms;139,3501
   long         positiveaxioms;140,3528
   long         groundpositiveaxioms;141,3560
   long		groundgoals;142,3598
   double       ng_unit_axioms_part;143,3620
   double       ground_positive_axioms_part;144,3657
   int          max_fun_arity;145,3702
   int          avg_fun_arity;146,3734
   int          sum_fun_arity;147,3765
   int          max_pred_arity;148,3796
   int          avg_pred_arity;149,3829
   int          sum_pred_arity;150,3862
   int          fun_const_count;151,3895
   int          fun_nonconst_count;152,3928
   int          pred_nonconst_count;153,3964
}SpecFeatureCell, *SpecFeature_p;SpecFeature_p154,4001
#define NGU_ABSOLUTE 161,4260
#define NGU_FEW_DEFAULT 162,4296
#define NGU_MANY_DEFAULT 163,4332
#define NGU_FEW_ABSDEFAULT 164,4368
#define NGU_MANY_ABSDEFAULT 165,4404
#define GPC_ABSOLUTE 166,4440
#define GPC_FEW_DEFAULT 167,4476
#define GPC_MANY_DEFAULT 168,4512
#define GPC_FEW_ABSDEFAULT 169,4548
#define GPC_MANY_ABSDEFAULT 170,4584
#define AX_1_DEFAULT 171,4620
#define AX_4_DEFAULT 172,4656
#define AX_SOME_DEFAULT 173,4692
#define AX_MANY_DEFAULT 174,4728
#define LIT_SOME_DEFAULT 175,4764
#define LIT_MANY_DEFAULT 176,4800
#define TERM_MED_DEFAULT 177,4836
#define TERM_LARGE_DEFAULT 178,4872
#define FAR_SUM_MED_DEFAULT 179,4908
#define FAR_SUM_LARGE_DEFAULT 180,4943
#define DEPTH_MEDIUM_DEFAULT 181,4978
#define DEPTH_DEEP_DEFAULT 184,5175
#define SYMBOLS_MEDIUM_DEFAULT 185,5210
#define SYMBOLS_LARGE_DEFAULT 186,5247
#define PREDC_MEDIUM_DEFAULT 188,5286
#define PREDC_LARGE_DEFAULT 189,5321
#define PRED_MEDIUM_DEFAULT 190,5356
#define PRED_LARGE_DEFAULT 191,5394
#define FUNC_MEDIUM_DEFAULT 192,5432
#define FUNC_LARGE_DEFAULT 193,5467
#define FUN_MEDIUM_DEFAULT 194,5504
#define FUN_LARGE_DEFAULT 195,5541
#define DEFAULT_OUTPUT_DESCRIPTOR 199,5581
#define DEFAULT_CLASS_MASK 200,5624
#define SpecLimitsCellAlloc(203,5669
#define SpecLimitsCellFree(205,5762
#define SpecFeatureCellAlloc(209,5877
#define SpecFeatureCellFree(211,5973
#define Spec(214,6058
#define SpecAxiomsAreUnit(216,6115
#define SpecAxiomsAreHorn(217,6186
#define SpecAxiomsAreNonUnitHorn(218,6257
#define SpecAxiomsAreGeneral(220,6392
#define SpecGoalsAreUnit(222,6467
#define SpecGoalsAreHorn(223,6535
#define SpecGoalsAreGround(224,6592
#define SpecGoalsHaveVars(225,6652
#define SpecPureEq(227,6713
#define SpecSomeEq(228,6777
#define SpecNoEq(229,6844
#define SpecFewNGPosUnits(231,6892
#define SpecSomeNGPosUnits(233,6988
#define SpecManyNGPosUnits(235,7086
#define SpecFewGroundPos(238,7185
#define SpecSomeGroundPos(240,7280
#define SpecManyGroundPos(242,7377
#define SpecFewAxioms(245,7475
#define SpecSomeAxioms(247,7556
#define SpecManyAxioms(249,7639
#define SpecFewLiterals(252,7723
#define SpecSomeLiterals(254,7809
#define SpecManyLiterals(256,7897
#define SpecSmallTerms(259,7986
#define SpecMediumTerms(261,8071
#define SpecLargeTerms(263,8158
#define SpecMaxFArity0(266,8246
#define SpecMaxFArity1(268,8326
#define SpecMaxFArity2(270,8406
#define SpecMaxFArity3Plus(272,8486
#define SpecAvgFArity0(275,8574
#define SpecAvgFArity1(277,8654
#define SpecAvgFArity2(279,8734
#define SpecAvgFArity3Plus(281,8814
#define SpecSmallFArSum(284,8902
#define SpecMediumFArSum(286,8990
#define SpecLargeFArSum(288,9080
#define SpecShallowMaxDepth(291,9171
#define SpecMediumMaxDepth(293,9261
#define SpecDeepMaxDepth(295,9349
#define ClauseSetCountAxioms(299,9480
#define ClauseSetCountUnitAxioms(304,9661
#define ClauseSetIsUnitSet(306,9763
#define ClauseSetAxiomsAreUnit(308,9849
#define ClauseSetGoalsAreUnit(310,9956
#define ClauseSetCountHornAxioms(315,10156
#define ClauseSetIsHornSet(317,10259
#define ClauseSetAxiomsAreHorn(319,10345
#define ClauseSetGoalsAreHorn(321,10452
#define ClauseSetIsEquationalSet(327,10643
#define ClauseSetIsEquational(330,10784
#define ClauseSetIsPureEquationalSet(334,10920
#define ClauseSetGoalsAreGround(338,11079
#define ClauseSetIsGround(342,11233
#define ClauseSetCountNonGroundUnitAxioms(349,11492

HEURISTICS/che_clauseweight.h,323
#define CHE_CLAUSEWEIGHT28,702
#define DEFAULT_POS_MULT 36,974
typedef struct weightparamcell38,1002
   double pos_multiplier;40,1035
   long   vweight;41,1061
   long   fweight;42,1080
}WeightParamCell, *WeightParam_p;WeightParam_p43,1099
#define WeightParamCellAlloc(51,1359
#define WeightParamCellFree(53,1455

HEURISTICS/che_fcode_featurearrays.h,611
#define CHE_F_CODE_FEATUREARRAYS28,773
typedef struct fcode_feature_sort_cell38,1116
   int     key1;40,1157
   int     key2;41,1174
   int     key3;42,1191
   int     freq;43,1208
   int     conjfreq;44,1225
   int     pos_rank;45,1246
   FunCode symbol;46,1267
}FCodeFeatureSortCell, *FCodeFeatureSort_p;FCodeFeatureSort_p47,1286
typedef struct fcode_feature_array_cell50,1332
   long size;52,1374
   FCodeFeatureSort_p array;53,1388
}FCodeFeatureArrayCell, *FCodeFeatureArray_p;FCodeFeatureArray_p54,1417
#define FCodeFeatureArrayCellAlloc(63,1690
#define FCodeFeatureArrayCellFree(65,1803

HEURISTICS/che_fifo.h,24
#define CHE_FIFO26,560

HEURISTICS/che_funweights.h,946
#define CHE_FUNWEIGHTS27,645
typedef struct funweightparamcell40,955
   OCB_p        ocb;43,1035
   ClauseSet_p  axioms;44,1056
   ProofState_p proofstate;45,1080
   double max_term_multiplier;47,1109
   double max_literal_multiplier;48,1140
   double pos_multiplier;49,1174
   long   vweight;50,1200
   long   fweight;53,1274
   long   cweight;54,1293
   long   pweight;55,1312
   long   conj_fweight;58,1382
   long   conj_cweight;59,1406
   long   conj_pweight;60,1430
   long default_level_penalty;63,1511
   double level_poly_const;65,1643
   double level_poly_lin;66,1671
   double level_poly_square;67,1697
   void   (*init_fun)init_fun70,1874
   PStack_p weight_stack;73,1977
   long   flimit;76,2048
   long   *fweights;fweights77,2066
   PDArray_p f_occur;81,2225
}FunWeightParamCell, *FunWeightParam_p;FunWeightParam_p83,2251
#define FunWeightParamCellAlloc(91,2517
#define FunWeightParamCellFree(93,2622

HEURISTICS/che_hcb.h,3954
#define CHE_HCB29,669
   NoACHandling,51,1211
   ACDiscardAll,52,1228
   ACKeepUnits,53,1245
   ACKeepOrientable54,1261
}ACHandlingType;ACHandlingType55,1281
typedef struct heuristic_parms_cell60,1360
   char                *heuristic_name;heuristic_name63,1433
   bool                prefer_initial_clauses;64,1473
   TermOrdering        ordertype;67,1548
   TOWeightGenMethod   to_weight_gen;68,1582
   TOPrecGenMethod     to_prec_gen;69,1620
   char*               to_pre_prec;70,1656
   char*               to_pre_weights;71,1692
   long                to_const_weight;72,1731
   bool                no_lit_cmp;73,1771
   LiteralSelectionFun selection_strategy;76,1857
   long                pos_lit_sel_min;77,1900
   long                pos_lit_sel_max;78,1941
   long                neg_lit_sel_min;79,1982
   long                neg_lit_sel_max;80,2023
   long                all_lit_sel_min;81,2064
   long                all_lit_sel_max;82,2105
   long                weight_sel_min;83,2146
   bool                select_on_proc_only;84,2185
   bool                inherit_paramod_lit;85,2229
   bool                inherit_goal_pm_lit;86,2273
   bool                inherit_conj_pm_lit;87,2317
   bool                enable_eq_factoring;90,2398
   bool                enable_neg_unit_paramod;91,2463
   bool                enable_given_forward_simpl;92,2531
   ParamodulationType  pm_type;94,2592
   ACHandlingType      ac_handling;96,2656
   bool                ac_res_aggressive;97,2692
   bool                forward_context_sr;99,2735
   bool                forward_context_sr_aggressive;100,2778
   bool                backward_context_sr;101,2832
   RewriteLevel        forward_demod;103,2877
   bool                prefer_general;104,2915
   bool                condensing;106,2955
   bool                condensing_aggressive;107,2992
   bool                er_varlit_destructive;109,3040
   bool                er_strong_destructive;110,3086
   bool                er_aggressive;111,3132
   SplitClassType      split_clauses;113,3171
   SplitType           split_method;114,3209
   bool                split_aggressive;115,3246
   bool                split_fresh_defs;116,3287
   char                rw_bw_index_type[rw_bw_index_type119,3354
   char                pm_from_index_type[pm_from_index_type120,3418
   char                pm_into_index_type[pm_into_index_type121,3484
   long                filter_limit;124,3578
   long                filter_copies_limit;125,3615
   long                reweight_limit;126,3659
   long long           delete_bad_limit;127,3698
   rlim_t              mem_limit;128,3739
   bool                watchlist_simplify;129,3773
   bool                use_tptp_sos;130,3816
   bool                presat_interreduction;131,3853
   bool                detsort_bw_rw;133,3900
   bool                detsort_tmpset;134,3938
}HeuristicParmsCell, *HeuristicParms_p;HeuristicParms_p135,3977
typedef struct hcb_cell144,4254
   PDArray_p       wfcb_list;150,4521
   int             wfcb_no;151,4551
   int             current_eval;155,4708
   PDArray_p       select_switch;161,4980
   long            select_count;162,5014
   Clause_p        (*hcb_select)hcb_select166,5155
   GenericExitFun  hcb_exit;173,5479
   void*           data;174,5508
}HCBCell, *HCB_p;HCB_p175,5533
#define HCB_DEFAULT_HEURISTIC 177,5552
#define DEFAULT_FILTER_LIMIT 178,5592
#define DEFAULT_FILTER_COPIES_LIMIT 179,5630
#define DEFAULT_REWEIGHT_INTERVAL 180,5675
#define DEFAULT_DELETE_BAD_LIMIT 181,5718
#define DEFAULT_RW_BW_INDEX_NAME 183,5761
#define DEFAULT_PM_FROM_INDEX_NAME 184,5800
#define DEFAULT_PM_INTO_INDEX_NAME 185,5841
typedef Clause_p (*ClauseSelectFun)ClauseSelectFun187,5883
#define HeuristicParmsCellAlloc(194,6173
#define HeuristicParmsCellFree(196,6272
#define HCBCellAlloc(204,6532
#define HCBCellFree(205,6593

HEURISTICS/che_hcbadmin.h,233
#define CHE_HCB_ADMIN26,597
typedef struct hcbadmincell35,866
   PStack_p names;37,896
   PStack_p hcb_set;38,915
}HCBAdminCell, *HCBAdmin_p;HCBAdmin_p39,936
#define HCBAdminCellAlloc(46,1189
#define HCBAdminCellFree(47,1265

HEURISTICS/che_heuristics.h,513
#define CHE_HEURISTICS26,600
   HEU_NO_HEURISTIC 40,1039
   HEU_AUTO_MODE,41,1064
   HEU_AUTO_MODE_CASC,42,1082
   HEU_AUTO_MODE_DEV,43,1105
   HEU_AUTO_SCHED0,44,1127
   HEU_AUTO_SCHED1,45,1147
   HEU_AUTO_SCHED2,46,1167
   HEU_AUTO_SCHED3,47,1187
   HEU_AUTO_SCHED448,1207
}Heuristic;Heuristic49,1226
typedef struct heuristic_assoc_cell51,1239
   Heuristic    heuristic;53,1277
   char*        name;54,1304
   HCBCreateFun heuristic_create;55,1326
}HeuristicAssocCell, HeuristicAssoc_p;56,1360

HEURISTICS/che_learning.h,971
#define CHE_LEARNING26,595
#define DEFAULT_POS_MULT 36,887
typedef struct tsmparamcell44,1230
   long           fweight;46,1260
   long           vweight;47,1287
   double         max_term_multiplier;48,1314
   double         max_literal_multiplier;49,1382
   double         pos_multiplier;50,1450
   bool           flat_clauses;51,1518
   double         learnweight;52,1553
   char*          kb;53,1584
   ProofState_p   state;54,1606
   long           sel_no;55,1631
   double         set_part;56,1657
   double         dist_part;57,1685
   IndexType      indextype;58,1714
   TSMType        tsmtype;59,1744
   long           depth;60,1771
   double         e_weights[e_weights61,1796
   double         eval_base;62,1852
   double         eval_scale;63,1881
   PatternSubst_p pat_subst;64,1911
   TSMAdmin_p     tsmadmin;65,1940
}TSMParamCell, *TSMParam_p;TSMParam_p66,1968
#define TSMParamCellAlloc(74,2222
#define TSMParamCellFree(76,2304

HEURISTICS/che_lifo.h,25
#define CHE_LFIFO26,569

HEURISTICS/che_litselection.h,565
#define CHE_LITSELECTION27,623
typedef void (*LiteralSelectionFun)LiteralSelectionFun36,928
typedef struct litsel_name_fun_assoc_cell38,994
   char*                name;40,1038
   LiteralSelectionFun  fun;41,1068
}LitSelNameFunAssocCell;LitSelNameFunAssocCell42,1097
typedef struct lit_eval_cell44,1123
   Eqn_p literal;46,1154
   bool  forbidden;47,1172
   bool  exclusive;48,1217
   int   w1;49,1281
   int   w2;50,1335
   int   w3;51,1348
}LitEvalCell, *LitEval_p;LitEval_p52,1361
typedef void LitWeightFun(54,1388
#define LitEvalInit(60,1667

HEURISTICS/che_normsubst.h,278
#define CLE_NORMSUBST27,608
typedef struct normsubstcell37,909
   NumTree_p used_ids;39,940
   NumTree_p norm_funs;40,963
   NumTree_p norm_vars;41,987
}NormSubstCell, *NormSubst_p;NormSubst_p42,1011
#define NormSubstCellAlloc(49,1266
#define NormSubstCellFree(50,1345

HEURISTICS/che_orientweight.h,474
#define CHE_ORIENTWEIGHT27,656
#define DEFAULT_MAX_MULT 35,936
typedef struct orientweightparamcell37,966
   OCB_p  ocb;39,1005
   double unorientable_literal_multiplier;40,1020
   double max_literal_multiplier;41,1063
   double pos_multiplier;42,1097
   long   vweight;43,1123
   long   fweight;44,1142
}OrientWeightParamCell, *OrientWeightParam_p;OrientWeightParam_p45,1161
#define OrientWeightParamCellAlloc(53,1433
#define OrientWeightParamCellFree(55,1547

HEURISTICS/che_patterns.h,28
#define CLE_PATTERNS26,580

HEURISTICS/che_prio_funs.h,88
#define CHE_PRIO_FUNS26,584
typedef EvalPriority (*ClausePrioFun)ClausePrioFun35,886

HEURISTICS/che_proofcontrol.h,623
#define CHE_PROOFCONTROL27,653
typedef struct proofcontrolcell39,1016
   OCB_p               ocb;41,1050
   HCB_p               hcb;42,1078
   WFCBAdmin_p         wfcbs;43,1106
   HCBAdmin_p          hcbs;44,1136
   bool                ac_handling_active;45,1165
   HeuristicParmsCell  heuristic_parms;46,1208
   FVIndexParmsCell    fvi_parms;47,1248
   SpecFeatureCell     problem_specs;48,1282
}ProofControlCell, *ProofControl_p;ProofControl_p49,1320
#define HCBARGUMENTS 51,1357
typedef HCB_p (*HCBCreateFun)HCBCreateFun54,1469
#define ProofControlCellAlloc(64,1811
#define ProofControlCellFree(66,1904

HEURISTICS/che_rawspecfeatures.h,409
#define RAWSPECFEATURES26,596
typedef struct raw_spec_feature_cell36,882
   long      sentence_no;38,921
   long long term_size;39,947
   int       sig_size;40,971
   int       pred_size;41,994
   int       predc_size;42,1018
   int       fun_size;43,1043
   int       func_size;44,1066
}RawSpecFeatureCell,RawSpecFeatureCell46,1113
}RawSpecFeatureCell, *RawSpecFeature_p;RawSpecFeature_p46,1113

HEURISTICS/che_refinedweight.h,469
#define CHE_REFINEDWEIGHT27,661
#define DEFAULT_MAX_MULT 35,942
typedef struct refinedweightparamcell37,972
   OCB_p  ocb;39,1012
   double max_term_multiplier;40,1027
   double max_literal_multiplier;41,1058
   double pos_multiplier;42,1092
   long   vweight;43,1118
   long   fweight;44,1137
}RefinedWeightParamCell, *RefinedWeightParam_p;RefinedWeightParam_p45,1156
#define RefinedWeightParamCellAlloc(53,1430
#define RefinedWeightParamCellFree(55,1547

HEURISTICS/che_simweight.h,311
#define CHE_SIMWEIGHT27,637
typedef struct simparamcell36,907
   double equal_weight;38,937
   double var_var_clash;39,961
   double var_term_clash;40,986
   double term_term_clash;41,1012
}SimParamCell, *SimParam_p;SimParam_p42,1039
#define SimParamCellAlloc(50,1293
#define SimParamCellFree(52,1380

HEURISTICS/che_to_autoselect.h,476
#define CHE_TO_AUTOSELECT27,626
typedef struct order_parms_cell41,1183
   TermOrdering      ordertype;43,1217
   TOWeightGenMethod to_weight_gen;44,1249
   TOPrecGenMethod   to_prec_gen;45,1285
   long              to_const_weight;46,1319
   bool              no_lit_cmp;47,1357
}OrderParmsCell, *OrderParms_p;OrderParms_p48,1390
typedef double (*OrderEvaluationFun)OrderEvaluationFun50,1423
#define OrderParmsCellAlloc(58,1751
#define OrderParmsCellFree(60,1838

HEURISTICS/che_to_precgen.h,717
#define CHE_TO_PRECGEN26,598
   PNoMethod 36,898
   PUnaryFirst,37,936
   PUnaryFirstFreq,38,978
   PArity,39,1024
   PInvArity,40,1068
   PConstMax,41,1120
   PInvArConstMin,43,1211
   PByFrequency,45,1297
   PByInvFrequency,46,1359
   PByInvConjFrequency,47,1423
   PByInvFreqConjMax,49,1540
   PByInvFreqConjMin,51,1652
   PByInvFreqConstMin,53,1765
   PByInvFreqHack,55,1858
   PArrayOpt,58,2027
   POrientAxioms,61,2196
   PMinMethod 62,2244
   PMinMethod = PUnaryFirst,62,2244
   PMaxMethod 63,2273
   PMaxMethod = POrientAxioms63,2273
}TOPrecGenMethod;TOPrecGenMethod64,2303
#define FREQ_SEMI_INFTY 71,2546
#define TOGetPrecGenName(77,2714
#define TOGenerateDefaultPrecedence(81,2830

HEURISTICS/che_to_weightgen.h,1112
#define CHE_TO_WEIGHTGEN26,598
   WNoMethod 39,903
   WSelectMaximal,40,943
   WArityWeight,42,1054
   WArityMax0,43,1109
   WModArityWeight,44,1180
   WModArityMax0,45,1249
   WAritySqWeight,47,1364
   WAritySqMax0,48,1422
   WInvArityWeight,50,1527
   WInvArityMax0,51,1591
   WInvAritySqWeight,53,1702
   WInvAritySqMax0,54,1770
   WPrecedence,56,1885
   WPrecedenceInv,57,1939
   WPrecRank5,58,1993
   WPrecRank10,59,2025
   WPrecRank20,60,2058
   WFrequency,61,2091
   WInvFrequency,62,2146
   WFrequencyRank,63,2211
   WInvFrequencyRank,65,2326
   WInvConjFrequencyRank,67,2450
   WFrequencyRankSq,70,2612
   WInvFrequencyRankSq,71,2666
   WInvModFreqRank,72,2704
   WInvModFreqRankMax0,75,2886
   WConstantWeight,76,2957
   WMinMethod 77,3003
   WMinMethod = WSelectMaximal,77,3003
   WMaxMethod 78,3035
   WMaxMethod = WConstantWeight 78,3035
}TOWeightGenMethod;TOWeightGenMethod79,3093
#define WConstNoSpecialWeight 83,3189
#define WConstNoWeight 84,3222
#define W_TO_BASEWEIGHT 88,3296
#define TOGetWeightGenName(98,3582
#define TOGenerateDefaultWeights(103,3716

HEURISTICS/che_varweights.h,902
#define CHE_VARWEIGHTS26,613
typedef struct varweightparamcell36,928
   OCB_p  ocb;38,964
   double max_term_multiplier;39,979
   double max_literal_multiplier;40,1010
   double pos_multiplier;41,1044
   double conjecture_multiplier;42,1070
   double hypothesis_multiplier;43,1103
   double sig_size_multiplier;44,1136
   double proof_size_multiplier;45,1167
   double proof_depth_multiplier;46,1200
   double term_weight_multiplier;47,1234
   double term_depth_multiplier;48,1268
   double weight_multiplier;49,1301
   long   vlweight;50,1330
   long   vweight;51,1350
   long   fweight;52,1369
   long   nvweight;53,1388
   long   nfweight;54,1408
   long   cweight;55,1428
   long   pweight;56,1447
   long   stagger_limit;57,1466
}VarWeightParamCell, *VarWeightParam_p;VarWeightParam_p58,1491
#define VarWeightParamCellAlloc(66,1757
#define VarWeightParamCellFree(68,1862

HEURISTICS/che_wfcb.h,429
#define CHE_WFCB55,1681
typedef double (*ClauseEvalFun)ClauseEvalFun69,2067
typedef struct wfcb_cell72,2134
   ClauseEvalFun     wfcb_eval;74,2161
   GenericExitFun    wfcb_exit;75,2232
   ClausePrioFun     wfcb_priority;77,2321
   void*             data;78,2384
}WFCBCell, *WFCB_p;WFCB_p81,2526
typedef WFCB_p (*WeightFunParseFun)WeightFunParseFun83,2547
#define WFCBCellAlloc(91,2862
#define WFCBCellFree(92,2926

HEURISTICS/che_wfcbadmin.h,279
#define CHE_WFCB_ADMIN26,606
typedef struct wfcbadmincell43,1069
   PStack_p names;45,1100
   PStack_p wfcb_set;46,1119
   long     anon_counter;47,1141
}WFCBAdminCell, *WFCBAdmin_p;WFCBAdmin_p48,1167
#define WFCBAdminCellAlloc(55,1422
#define WFCBAdminCellFree(56,1501

INOUT/cio_basicparser.h,149
#define CIO_BASICPARSER27,647
   SNNoNumber,39,987
   SNInteger,40,1002
   SNRational,41,1016
   SNFloat42,1031
}StrNumType;StrNumType43,1042

INOUT/cio_commandline.h,685
#define CIO_COMMANDLINE39,1169
   NoArg,52,1491
   OptArg,53,1501
   ReqArg54,1512
}OptArgType;OptArgType55,1522
typedef struct optcell57,1536
   int         option_code;59,1561
   char        shortopt;60,1590
   char*       longopt;61,1649
   OptArgType  type;62,1706
   char*       arg_default;63,1762
   char*       desc;65,1853
}OptCell, *Opt_p;Opt_p66,1925
typedef struct clstatecell69,1945
   int     sc_opt_c;71,1974
   int     argi;73,2074
   int     argsize;74,2128
   int     argc;75,2192
   char**  argv;76,2249
}CLStateCell, *CLState_p;CLState_p78,2352
#define CLStateCellAlloc(84,2602
#define CLStateCellFree(85,2675
#define FORMAT_WIDTH 88,2750

INOUT/cio_fileops.h,63
#define CIO_FILEOPS26,565
#define FileNameIsAbsolute(50,1373

INOUT/cio_filevars.h,233
#define CIO_FILEVARS26,601
typedef struct filevarscell37,931
   PStack_p  names;39,961
   StrTree_p vars;40,1018
}FileVarsCell, *FileVars_p;FileVars_p41,1073
#define FileVarsCellAlloc(50,1328
#define FileVarsCellFree(51,1404

INOUT/cio_initio.h,26
#define CIO_INITIO27,627

INOUT/cio_multiplexer.h,373
#define CIO_MULTIPLEXER25,564
typedef struct tcp_channel_cell36,841
   int             sock;38,875
   PQueue_p        in;39,900
   PQueue_p        out;40,926
}TCPChannelCell, *TCPChannel_p;TCPChannel_p41,953
#define TCPChannelCellAlloc(60,1391
#define TCPChannelCellFree(61,1476
#define       TCPChannelHasOutMsg(66,1692
#define       TCPChannelGetInMsg(68,1820

INOUT/cio_network.h,440
#define CIO_NETWORK27,693
   NWIncomplete 44,1113
   NWError 45,1135
   NWConnClosed 46,1157
   NWSuccess 47,1179
}MsgStatus;MsgStatus48,1200
typedef struct tcp_msg_cell52,1237
   DStr_p content;54,1267
   int len;56,1410
   int transmission_count;57,1456
   char len_buf[len_buf58,1529
}TCPMsgCell, *TCPMsg_p;TCPMsg_p59,1564
#define TCPMsgCellAlloc(68,1815
#define TCPMsgCellFree(69,1888
#define TCP_MSG_COMPLETE(71,1953

INOUT/cio_output.h,84
#define CIO_OUTPUT28,700
#define OUTPRINT(38,990
#define      InitOutput(50,1384

INOUT/cio_scanner.h,3318
#define CIO_SCANNER26,599
typedef unsigned long long TokenType;47,1350
#define NoToken 49,1389
#define WhiteSpace 50,1415
#define Comment 51,1449
#define Ident 52,1486
#define Idnum 53,1520
#define SemIdent 54,1552
#define String 55,1584
#define SQString 56,1619
#define PosInt 57,1652
#define OpenBracket 58,1687
#define CloseBracket 59,1720
#define OpenCurly 60,1758
#define CloseCurly 61,1797
#define OpenSquare 62,1833
#define CloseSquare 63,1870
#define LesserSign 64,1907
#define GreaterSign 65,1945
#define EqualSign 66,1982
#define NegEqualSign 67,2020
#define TildeSign 68,2056
#define Exclamation 69,2095
#define AllQuantor 70,2131
#define QuestionMark 71,2167
#define ExistQuantor 72,2205
#define Comma 73,2242
#define Semicolon 74,2281
#define Colon 75,2313
#define Hyphen 76,2349
#define Plus 77,2381
#define Mult 78,2414
#define Fullstop 79,2445
#define Dollar 80,2476
#define Slash 81,2511
#define Pipe 82,2544
#define FOFOr 83,2576
#define Ampersand 84,2605
#define FOFAnd 85,2636
#define FOFLRImpl 86,2670
#define FOFRLImpl 87,2706
#define FOFEquiv 88,2742
#define FOFXor 89,2778
#define FOFNand 90,2813
#define FOFNor 91,2846
#define SkipToken 94,2882
#define Identifier 95,2927
#define Name 96,2965
#define FOFBinOp 97,3009
#define FOFAssocOp 98,3097
   LOPFormat,107,3244
   TPTPFormat,108,3258
   TSTPFormat109,3273
}IOFormat;IOFormat110,3287
typedef struct tokenrepcell113,3300
   TokenType key;115,3330
   char*     rep;116,3348
}TokenRepCell, *TokenRep_p;TokenRep_p117,3366
typedef struct tokencell120,3396
   TokenType     tok;122,3423
   DStr_p        literal;123,3497
   unsigned long numval;124,3571
   DStr_p        comment;125,3645
   bool          skipped;126,3719
   DStr_p        source;127,3793
   StreamType    stream_type;128,3870
   long          line;129,3922
   long          column;130,3996
}TokenCell, *Token_p;Token_p132,4074
#define MAXTOKENLOOKAHEAD 134,4097
typedef struct scannercell136,4126
   Stream_p    source;138,4155
   DStr_p      default_dir;139,4216
   IOFormat    format;140,4281
   DStr_p      accu;141,4304
   bool        ignore_comments;142,4376
   char*       include_key;146,4624
   TokenCell   tok_sequence[tok_sequence147,4689
   int         current;148,4760
   char*       include_pos;149,4831
}ScannerCell, *Scanner_p;Scanner_p150,4904
#define TokenCellAlloc(157,5159
#define TokenCellFree(158,5231
#define ScannerCellAlloc(159,5295
#define ScannerCellFree(160,5371
#define  Source(162,5438
#define  SourceType(163,5499
#define  LookChar(164,5565
#define  CurrChar(165,5638
#define  CurrLine(166,5705
#define  CurrColumn(167,5772
#define  NextChar(168,5841
#define  ScannerSetFormat(170,5909
#define  ScannerGetFormat(171,5977
#define  ScannerGetDefaultDir(173,6040
#define isstartidchar(175,6113
#define isidchar(176,6169
#define ischar(177,6225
#define isstartcomment(178,6264
#define TOKENREALPOS(189,6660
#define AktToken(190,6714
#define AktTokenType(191,6774
#define LookToken(192,6819
#define TestInpTok(199,7034
#define TestInpId(200,7094
#define TestInpIdnum(201,7152
#define TestInpNoSkip(202,7213
#define TestInpTokNoSkip(203,7270
#define AcceptInpTok(213,7574
#define AcceptInpTokNoSkip(215,7678
#define AcceptInpId(218,7827

INOUT/cio_signals.h,27
#define CCO_SIGNALS27,668

INOUT/cio_simplestuff.h,31
#define CIO_SIMPLESTUFF26,588

INOUT/cio_streams.h,806
#define CIO_STREAMS29,757
#define MAXLOOKAHEAD 38,1051
typedef char* StreamType;46,1289
typedef struct streamcell55,1575
   struct streamcell* next;57,1603
   DStr_p             source;58,1631
   StreamType         stream_type;59,1661
   long               string_pos;61,1748
   FILE*              file;62,1782
   bool               eof_seen;63,1810
   long               line;64,1842
   long               column;65,1870
   int                buffer[buffer66,1900
   int                current;67,1944
}StreamCell, *Stream_p, **Inpstack_p;Inpstack_p68,1975
#define StreamCellAlloc(81,2424
#define StreamCellFree(82,2494
#define  STREAMREALPOS(87,2674
#define  StreamLookChar(89,2726
#define  StreamCurrChar(92,2867
#define  StreamCurrLine(93,2937
#define  StreamCurrColumn(94,2988

INOUT/cio_tempfile.h,28
#define CIO_TEMPFILE26,579

LEARN/cle_annotations.h,267
#define CLE_ANNOTATIONS27,620
#define ANNOTATION_DEFAULT_SIZE 58,1680
#define ANNOTATIONS_MERGE_ALL 59,1714
typedef NumTree_p Annotation_p;61,1750
#define      AnnotationValues(69,2090
#define      AnnotationCount(70,2147
#define      AnnotationLength(72,2236

LEARN/cle_annoterms.h,580
#define CLE_ANNOTERMS26,583
typedef struct annotermcell35,886
   Term_p              term;37,916
   Annotation_p        annotation;38,986
}AnnoTermCell, *AnnoTerm_p;AnnoTerm_p39,1053
typedef struct annosetcell41,1082
   TB_p           terms;43,1111
   NumTree_p      set;44,1156
   PatternSubst_p subst;45,1227
   long           annotation_no;46,1296
}AnnoSetCell, *AnnoSet_p;AnnoSet_p47,1329
#define AnnoTermCellAlloc(54,1580
#define AnnoTermCellFree(55,1656
#define    AnnoTermFreeNoRef(60,1909
#define AnnoSetCellAlloc(67,2181
#define AnnoSetCellFree(68,2254

LEARN/cle_classification.h,34
#define CLE_CLASSIFICATION26,611

LEARN/cle_clauseenc.h,29
#define CLE_CLAUSEENC26,601

LEARN/cle_examplerep.h,542
#define CLE_EXAMPLEREP27,638
typedef struct examplerepcell42,1210
   long       ident;44,1242
   char*      name;45,1263
   Features_p features;46,1283
}ExampleRepCell, *ExampleRep_p;ExampleRep_p47,1307
typedef struct examplesetcell52,1401
   long      count;54,1433
   NumTree_p ident_index;56,1513
   StrTree_p name_index;57,1539
}ExampleSetCell, *ExampleSet_p;ExampleSet_p58,1564
#define ExampleRepCellAlloc(65,1821
#define ExampleRepCellFree(66,1904
#define ExampleSetCellAlloc(72,2132
#define ExampleSetCellFree(73,2215

LEARN/cle_flatannoterms.h,671
#define CLE_FLATANNOTERMS26,598
typedef struct flatannotermcell36,903
   Term_p                  term;38,937
   double                  eval;40,1023
   double                  eval_weight;41,1056
   long                    sources;47,1312
   struct flatannotermcell *next;next48,1348
}FlatAnnoTermCell, *FlatAnnoTerm_p;FlatAnnoTerm_p49,1382
typedef struct flatannosetcell51,1419
   NumTree_p      set;53,1452
}FlatAnnoSetCell, *FlatAnnoSet_p;FlatAnnoSet_p55,1534
#define FlatAnnoTermCellAlloc(64,1795
#define FlatAnnoTermCellFree(66,1893
#define         FlatAnnoTermFree(72,2080
#define FlatAnnoSetCellAlloc(74,2147
#define FlatAnnoSetCellFree(76,2242

LEARN/cle_indexfunctions.h,1010
#define CLE_INDEXFUNCTIONS26,609
   IndexNoIndex 40,985
   IndexArity 41,1009
   IndexSymbol 42,1033
   IndexTop 43,1057
   IndexAltTop 44,1081
   IndexCSTop 45,1105
   IndexESTop 46,1129
   IndexIdentity 47,1153
   IndexEmpty 48,1177
}IndexType;IndexType49,1200
typedef struct indextermcell52,1214
   Term_p   term;54,1245
   PatternSubst_p subst;55,1313
   long           key;57,1398
}IndexTermCell, *IndexTerm_p;IndexTerm_p58,1456
typedef struct tsmindexcell71,1678
   long           ident;73,1708
   IndexType      type;74,1733
   int            depth;75,1757
   long           count;76,1782
   TB_p           bank;77,1807
   PatternSubst_p subst;78,1877
      PTree_p     t_index;81,1933
      NumTree_p   n_index;82,2002
   }              tree;83,2062
}TSMIndexCell, *TSMIndex_p;TSMIndex_p84,2089
#define IndexDynamicDepth 86,2118
#define IndexTermCellAlloc(95,2402
#define IndexTermCellFree(96,2484
#define TSMIndexCellAlloc(106,2796
#define TSMIndexCellFree(107,2875

LEARN/cle_kbdesc.h,344
#define CLE_KB26,593
#define KB_VERSION 34,861
typedef struct kbdesccell36,891
   char         *version;version38,919
   double       neg_proportion;39,945
   long         fail_neg_examples;40,977
}KBDescCell, *KBDesc_p;KBDesc_p41,1012
#define KB_ANNOTATION_NO 44,1038
#define KBDescCellAlloc(51,1290
#define KBDescCellFree(52,1361

LEARN/cle_kbinsert.h,28
#define CLE_KBINSERT26,587

LEARN/cle_numfeatures.h,533
#define CHE_NUMFEATURES28,715
#define FEATURE_NUMBER 37,993
#define FEATURE_NUMBER 53,1555
typedef struct featurescell55,1582
   long      pred_max_arity;57,1612
   PDArray_p pred_distrib;58,1641
   long      func_max_arity;59,1668
   PDArray_p func_distrib;60,1697
   double    features[features61,1724
}FeaturesCell, *Features_p;Features_p62,1763
#define SEL_FEATURE_WEIGHTS 64,1792
#define SEL_PRED_WEIGHT 66,1927
#define SEL_FUNC_WEIGHT 67,1955
#define FeaturesCellAlloc(74,2208
#define FeaturesCellFree(75,2285

LEARN/cle_patterns.h,764
#define CLE_PATTERNS27,640
#define NORM_ARITY_LIMIT 42,1264
#define NORM_SYMBOL_LIMIT 43,1325
#define NORM_VAR_INIT 45,1428
typedef struct patternsubstcell47,1466
   PDArray_p used_idents;49,1500
   PDArray_p fun_subst;50,1574
   long      used_vars;54,1750
   PDArray_p var_subst;55,1776
   PStack_p  backtrack;56,1834
   Sig_p     sig;57,1888
}PatternSubstCell, *PatternSubst_p;PatternSubst_p59,1973
#define DEFAULT_LITERAL_NO 66,2234
#define PATTERN_SEARCH_BRANCHLIMIT 67,2263
#define PatternNormCode(69,2301
#define PatternSubstCellAlloc(71,2382
#define PatternSubstCellFree(73,2480
#define PatternIdGetArity(83,2863
#define PatternIdGetIdent(84,2928
#define PatIdIsNormId(86,2990
#define PatEqnLTerm(91,3178
#define PatEqnRTerm(92,3252

LEARN/cle_termtops.h,28
#define CLE_TERMTOPS26,595

LEARN/cle_tsm.h,1493
#define CLE_TSM 26,558
   TSMTypeNoType,38,904
   TSMTypeFlat,39,922
   TSMTypeRecursive,40,938
   TSMTypeRecurrent,41,959
   TSMTypeRecurrentLocal42,980
}TSMType;TSMType43,1005
typedef struct tsmadmincell45,1016
   TSMType        tsmtype;47,1046
   TB_p           index_bank;48,1073
   IndexType      index_type;49,1143
   int            index_depth;50,1173
   double         limit;51,1204
   bool           local_limit;52,1229
   double         eval_limit;53,1260
   double         unmapped_eval;54,1332
   double         unmapped_weight;55,1365
   struct tsmcell *tsm;tsm56,1400
   struct tsmcell *emptytsm;emptytsm57,1424
   PStack_p       tsmstack;58,1453
   PStack_p       cachestack;59,1481
   PatternSubst_p subst;60,1511
}TSMAdminCell, *TSMAdmin_p;TSMAdmin_p61,1536
typedef struct tsmcell64,1566
   TSMAdmin_p admin;66,1593
   TSMIndex_p index;67,1614
   long       maxindex;68,1635
   PDArray_p  tsas;69,1659
}TSMCell, *TSM_p;TSM_p70,1679
typedef struct tsacell72,1698
   TSMAdmin_p admin;74,1723
   double eval_weight;75,1744
   double eval;76,1767
   int    arity;77,1783
   TSM_p  *arg_tsms;arg_tsms78,1800
}TSACell, *TSA_p;TSA_p79,1821
#define TSM_MAX_TERMTOP 82,1841
#define       GetTSMType(90,2121
#define       TSMEvalNormalize(92,2187
#define TSMAdminCellAlloc(108,2838
#define TSMAdminCellFree(109,2915
#define TSMCellAlloc(114,3078
#define TSMCellFree(115,3140
#define TSACellAlloc(122,3401
#define TSACellFree(123,3463

LEARN/cle_tsmio.h,25
#define CLE_TSMIO26,584

ORDERINGS/cto_cmpcache.h,128
#define CTO_CMPCACHE27,663
typedef QuadTree_p CmpCache_p;43,1268
#define CmpCacheInit(49,1523
#define CmpCacheClear(50,1569

ORDERINGS/cto_kbo.h,23
#define CTO_KBO30,766

ORDERINGS/cto_kbodata.h,359
#define CTO_KBODATA30,861
typedef struct kbo_lin_cell41,1195
   int           wb;43,1225
   PDArray_p     vb;44,1246
   FunCode       max_var;45,1267
   int           pos_bal;46,1293
   int           neg_bal;47,1319
   CompareResult res;48,1348
}KBOLinCell, *KBOLin_p;KBOLin_p49,1370
#define KBOLinCellAlloc(57,1620
#define KBOLinCellFree(58,1693

ORDERINGS/cto_kbolin.h,26
#define CTO_KBOLIN29,792

ORDERINGS/cto_lpo.h,23
#define CTO_LPO28,660

ORDERINGS/cto_lpo_debug.h,29
#define CTO_LPO_DEBUG28,647

ORDERINGS/cto_ocb.h,1331
#define CTO_OCB27,620
   NoOrdering,41,932
   AUTO,42,947
   AUTOCASC,43,956
   AUTODEV,44,969
   AUTOSCHED0,45,981
   AUTOSCHED1,46,996
   AUTOSCHED2,47,1011
   AUTOSCHED3,48,1026
   AUTOSCHED4,49,1041
   OPTIMIZE_AX,50,1056
   KBO,51,1072
   KBO6,52,1080
   LPO,53,1089
   LPOCopy,54,1097
   LPO4,55,1109
   LPO4Copy,56,1118
   RPO,57,1131
   EMPTY58,1139
}TermOrdering;TermOrdering59,1148
typedef struct ocb_cell62,1165
   TermOrdering  type;64,1191
   Sig_p         sig;65,1214
   FunCode       min_constant;68,1340
   int           sig_size;69,1371
   long          *weights;weights70,1398
   long          var_weight;71,1452
   long          *prec_weights;prec_weights72,1505
   CompareResult *precedence;precedence74,1606
   bool           no_lit_cmp;77,1739
   PStack_p       statestack;80,1853
   KBOLin_p       kbobalance;81,1921
}OCBCell, *OCB_p;OCB_p82,1952
#define OCB_FUN_DEFAULT_WEIGHT 84,1971
#define W_DEFAULT_WEIGHT 89,2125
#define OCBCellAlloc(95,2376
#define OCBCellFree(96,2437
#define OCBPrecedenceGetState(111,2920
#define OCBFunWeightPos(126,3424
#define OCBFunComparePos(127,3481
#define OCBDesignatedMinConst(132,3616
#define OCBDesignatedMinTerm(135,3752
static __inline__ long OCBFunWeight(166,4856
static __inline__ CompareResult OCBFunCompare(190,5464

ORDERINGS/cto_orderings.h,29
#define CTO_ORDERINGS26,592

PCL2/pcl_analysis.h,64
#define PCL_ANALYSIS27,637
#define PCLStepUpdateGRefs(48,1371

PCL2/pcl_expressions.h,2135
#define PCL_EXPRESSIONS26,577
   PCLOpNoOp,42,1032
   PCLOpInitial,43,1046
   PCLOpIntroDef,44,1063
   PCLOpQuote,45,1081
   PCLOpParamod,46,1096
   PCLOpSimParamod,47,1113
   PCLOpEResolution,48,1133
   PCLOpCondense,49,1154
   PCLOpEFactoring,50,1172
   PCLOpSimplifyReflect,51,1192
   PCLOpContextSimplifyReflect,52,1217
   PCLOpACResolution,53,1249
   PCLOpRewrite,54,1271
   PCLOpURewrite,55,1288
   PCLOpClauseNormalize,56,1306
   PCLOpSplitClause,57,1331
   PCLOpSplitEquiv,58,1352
   PCLOpApplyDef,59,1372
   PCLOpFOFSplitConjunct,60,1390
   PCLOpFOFSimplify,61,1416
   PCLOpFOFDeMorgan,62,1437
   PCLOpFOFDistributeQuantors,63,1458
   PCLOpFOFDistributeDisjunction,64,1489
   PCLOpAnnotateQuestion,65,1523
   PCLOpEvalAnswers,66,1549
   PCLOpFOFVarRename,67,1570
   PCLOpFOFSkolemize,68,1592
   PCLOpFOFAssumeNegation,69,1614
   PCLOpMaxOp70,1641
}PCLOpcodes;PCLOpcodes71,1655
#define PCL_OP_NOOP_WEIGHT 74,1670
#define PCL_OP_INITIAL_WEIGHT 75,1710
#define PCL_OP_QUOTE_WEIGHT 76,1750
#define PCL_OP_PARAMOD_WEIGHT 77,1790
#define PCL_OP_SIM_PARAMOD_WEIGHT 78,1830
#define PCL_OP_ERESOLUTION_WEIGHT 79,1870
#define PCL_OP_CONDENSE_WEIGHT 80,1910
#define PCL_OP_EFACTORING_WEIGHT 81,1950
#define PCL_OP_SIMPLIFYREFLECT_WEIGHT 82,1990
#define PCL_OP_CONTEXTSIMPLIFYREFLECT_WEIGHT 83,2030
#define PCL_OP_ACRESOLUTION_WEIGHT 84,2077
#define PCL_OP_REWRITE_WEIGHT 85,2117
#define PCL_OP_UREWRITE_WEIGHT 86,2157
#define PCL_OP_CLAUSENORMALIZE_WEIGHT 87,2197
#define PCL_OP_SPLITCLAUSE_WEIGHT 88,2237
typedef struct pclexprcell91,2279
   PCLOpcodes op;93,2308
   long       arg_no;94,2326
   PDArray_p  args;95,2348
}PCLExprCell, *PCLExpr_p;PCLExpr_p96,2410
#define PCL_VAR_ARG 99,2438
#define PCLExprCellAlloc(105,2685
#define PCLExprCellFree(106,2758
#define PCLExprArg(108,2832
#define PCLExprArgInt(109,2899
#define PCLExprArgPos(110,2968
#define   PCLFullExprParse(120,3314
#define   PCLMiniExprParse(121,3370
#define   PCLFullExprPrint(124,3488
#define   PCLMiniExprPrint(125,3559
#define   PCLFullExprPrintTSTP(128,3691
#define   PCLMiniExprPrintTSTP(129,3770

PCL2/pcl_idents.h,280
#define PCL_IDENTS26,583
#define NO_PCL_ID_ELEMENT 37,938
typedef PDArrayCell PCLIdCell;39,968
typedef PDArray_p   PCLId_p;40,999
#define PCLIdCellAlloc(46,1252
#define PCLIdCellFree(47,1319
#define PCLIdAlloc(49,1390
#define PCLIdFree(50,1436
#define PCLIdPrint(54,1581

PCL2/pcl_lemmas.h,1077
#define PCL_LEMMAS27,583
typedef struct lemma_param_cell64,1557
   long   tree_base_weight;66,1591
   double act_pm_w;67,1619
   double o_gen_w;68,1639
   double act_simpl_w;69,1658
   double pas_simpl_w;70,1681
   double proof_tree_w;71,1704
   double proof_dag_w;72,1728
   long   size_base_weight;73,1751
   double horn_bonus;74,1779
}LemmaParamCell, *LemmaParam_p;LemmaParam_p75,1801
#define LEMMA_TREE_BASE_W 77,1834
#define LEMMA_ACT_PM_W 78,1863
#define LEMMA_O_GEN_W 79,1894
#define LEMMA_ACT_SIMPL_W 80,1925
#define LEMMA_PAS_SIMPL_W 81,1956
#define LEMMA_PROOF_TREE_W 82,1987
#define LEMMA_PROOF_DAG_W 83,2018
#define LEMMA_SIZE_BASE_W 85,2127
#define LEMMA_HORN_BONUS_W 86,2156
typedef long InferenceWeightType[InferenceWeightType88,2188
typedef InferenceWeightType *InferenceWeight_p;InferenceWeight_p89,2234
#define LemmaParamCellAlloc(98,2509
#define LemmaParamCellFree(99,2591
#define LemmaParamFree(101,2706
#define InferenceWeightCellAlloc(103,2761
#define InferenceWeightCellFree(105,2864
#define InferenceWeightsFree(108,2999

PCL2/pcl_miniclauses.h,327
#define PCL_MINICLAUSES28,755
typedef struct mini_clause_cell40,1154
   short            literal_no;43,1226
   short            *sign;sign44,1258
   Term_p           *lit_terms;lit_terms45,1304
}MiniClauseCell, *MiniClause_p;MiniClause_p46,1375
#define MiniClauseCellAlloc(55,1634
#define MiniClauseCellFree(57,1725

PCL2/pcl_miniprotocol.h,285
#define PCL_MINIPROTOCOL26,593
typedef struct pclminiprotcell34,870
   TB_p      terms;36,903
   long      max_ident;37,923
   PDArray_p steps;38,947
}PCLMiniProtCell, *PCLMiniProt_p;PCLMiniProt_p39,995
#define PCLMiniProtCellAlloc(46,1254
#define PCLMiniProtCellFree(47,1339

PCL2/pcl_ministeps.h,453
#define PCL_MINISTEPS26,600
typedef struct pclministepcell36,928
   TB_p             bank;38,961
   unsigned long id;39,987
      MiniClause_p  clause;42,1022
      TFormula_p    formula;43,1050
   }logic;logic44,1079
   PCLStepProperties properties;45,1090
   PCLExpr_p just;46,1123
   char*     extra;47,1142
}PCLMiniStepCell, *PCLMiniStep_p;PCLMiniStep_p48,1162
#define PCLMiniStepCellAlloc(57,1423
#define PCLMiniStepCellFree(58,1508

PCL2/pcl_positions.h,295
#define PCL_POSITIONS26,564
typedef struct pcl2poscell39,1046
   long      literal;41,1075
   EqnSide   side;42,1097
   long      termposlen;43,1116
   PDArray_p termpos;44,1188
}PCL2PosCell, *PCL2Pos_p;PCL2Pos_p45,1252
#define PCL2PosCellAlloc(53,1504
#define PCL2PosCellFree(54,1577

PCL2/pcl_proofcheck.h,396
#define PCL_PROOFCHECK27,614
   CheckFail,38,930
   CheckOk,39,944
   CheckByAssumption,40,956
   CheckNotImplemented41,978
}PCLCheckType;PCLCheckType42,1001
   NoProver,46,1032
   EProver,47,1045
   Spass,48,1057
   Setheo,49,1067
   Otter50,1078
}ProverType;ProverType51,1087
#define E_EXEC_DEFAULT 58,1325
#define OTTER_EXEC_DEFAULT 59,1362
#define SPASS_EXEC_DEFAULT 60,1397

PCL2/pcl_propanalysis.h,806
#define PCL_PROPANALYIS27,616
typedef struct pcl_propdata_cell37,924
   long      fof_formulae;39,959
   long      pos_clauses;40,986
   long      neg_clauses;41,1012
   long      mix_clauses;42,1038
   long      pos_clause_literals;43,1064
   long      neg_clause_literals;44,1098
   long      mix_clause_literals;45,1132
   long      pos_literals;46,1166
   long      neg_literals;47,1193
   long      const_count;48,1220
   long      func_count;49,1246
   long      pred_count;50,1271
   long      var_count;51,1296
   PCLStep_p longest_clause;52,1334
   PCLStep_p max_symbol_clause;53,1363
   PCLStep_p max_standard_weight_clause;54,1395
   PCLStep_p max_depth_clause;55,1436
}PCLPropDataCell, *PCLPropData_p;PCLPropData_p56,1467
typedef int (*PCLCmpFunType)PCLCmpFunType64,1727

PCL2/pcl_protocol.h,497
#define PCL_PROTOCOL26,554
typedef struct pclprotcell34,823
   TB_p     terms;36,852
   long     number;37,871
   PTree_p  steps;38,891
   PStack_p in_order;39,941
   bool     is_ordered;40,1005
}PCLProtCell, *PCLProt_p;PCLProt_p41,1064
#define PCLProtCellAlloc(48,1315
#define PCLProtCellFree(49,1388
#define PCLProtInsertStep(54,1533
#define   PCLProtStepNo(63,1870
#define   PCLProtPrint(71,2171
#define   PCLStepCollectPreconds(82,2561
#define PCLProtPrintProofClauses(96,3256

PCL2/pcl_steps.h,2492
#define PCL_STEPS26,544
#define PCL_PROOF_DIST_INFINITY 34,816
#define PCL_PROOF_DIST_DEFAULT 35,874
#define PCL_PROOF_DIST_UNKNOWN 36,938
   PCLNoProp 41,1014
   PCLIsLemma 42,1041
   PCLIsInitial 43,1068
   PCLIsFinal 44,1095
   PCLIsMarked 45,1122
   PCLIsProofStep 46,1149
   PCLIsExample 47,1176
   PCLIsFOFStep 48,1231
   PCLIsShellStep 49,1287
   PCLType1 50,1315
   PCLType1          = CPType1,50,1315
   PCLType2 51,1357
   PCLType2          = CPType2,51,1357
   PCLType3 52,1390
   PCLType3          = CPType3,52,1390
   PCLTypeMask 53,1422
   PCLTypeMask       = CPTypeMask,53,1422
   PCLTypeUnknown 54,1457
   PCLTypeAxiom 55,1526
   PCLTypeAxiom      = CPTypeAxiom,55,1526
   PCLTypeHypothesis 56,1590
   PCLTypeHypothesis = CPTypeHypothesis,56,1590
   PCLTypeConjecture 57,1659
   PCLTypeConjecture = CPTypeConjecture,57,1659
   PCLTypeNegConjecture 59,1793
   PCLTypeNegConjecture = CPTypeNegConjecture,59,1793
   PCLTypeQuestion 60,1871
   PCLTypeQuestion      = CPTypeQuestion,60,1871
}PCLStepProperties;PCLStepProperties62,1936
typedef struct pclstepcell65,1958
   TB_p              bank;67,1987
   PCLId_p           id;68,2014
      Clause_p          clause;71,2053
      TFormula_p        formula;72,2085
   }logic;logic73,2118
   PCLExpr_p         just;74,2129
   char*             extra;75,2156
   PCLStepProperties properties;76,2184
   long              proof_dag_size;78,2279
   long              proof_tree_size;79,2316
   long              active_pm_refs;80,2354
   long              other_generating_refs;81,2391
   long              active_simpl_refs;82,2435
   long              passive_simpl_refs;83,2475
   long              pure_quote_refs;84,2516
   float             lemma_quality;85,2554
   long              contrib_simpl_refs;87,2658
   long              contrib_gen_refs;90,2852
   long              useless_simpl_refs;91,2927
   long              useless_gen_refs;94,3121
   long              proof_distance;95,3197
}PCLStepCell, *PCLStep_p;PCLStep_p96,3234
#define PCLNoWeight 98,3261
bool SupportShellPCL;105,3509
#define PCLStepCellAlloc(107,3532
#define PCLStepCellFree(108,3605
#define PCLStepSetProp(110,3680
#define PCLStepDelProp(111,3743
#define PCLStepGiveProps(112,3806
#define PCLStepQueryProp(113,3873
#define PCLStepIsAnyPropSet(114,3940
#define PCLStepIsFOF(116,4014
#define PCLStepIsShell(117,4080
#define PCLStepIsClausal(118,4150
#define   PCLStepPrint(126,4482

PROPOSITIONAL/cpr_dpll.h,363
#define CPR_DPLL26,563
typedef struct dpll_state_cell36,859
   DPLLFormula_p form;38,892
   PStack_p      assignment;39,915
   PStack_p      deactivated;42,1118
   PStack_p      unproc_units;44,1228
   AtomSet_p     open_atoms;45,1296
}DPLLStateCell, *DPLLState_p;DPLLState_p46,1361
#define DPLLStateCellAlloc(54,1617
#define DPLLStateCellFree(55,1696

PROPOSITIONAL/cpr_dpllformula.h,568
#define CPR_DPLLFORMULA28,714
typedef struct atom_cell37,993
   long pos_occur;39,1020
   long neg_occur;40,1039
   PTree_p pos_active;41,1058
   PTree_p neg_active;42,1081
}AtomCell, *Atom_p;Atom_p43,1104
typedef struct dpllrep_cell45,1125
   PropSig_p sig;47,1155
   PStack_p  clauses;48,1173
   long      atom_no;49,1195
   Atom_p    atoms;50,1217
}DPLLFormulaCell, *DPLLFormula_p;DPLLFormula_p51,1237
#define DEFAULT_ATOM_NUMBER 54,1273
#define ATOM_GROWTH_FACTOR 55,1306
#define DPLLFormulaCellAlloc(62,1563
#define DPLLFormulaCellFree(63,1648

PROPOSITIONAL/cpr_propclauses.h,496
#define CPR_PROPCLAUSES27,628
   DPLLOutNoFormat,39,943
   DPLLOutLOP,40,963
   DPLLOutDimacs41,978
}DPLLOutputFormat;DPLLOutputFormat42,995
typedef struct dpll_clause_cell44,1015
   unsigned long mem_size;46,1049
   unsigned long lit_no;47,1076
   unsigned long active_no;48,1101
   PLiteralCode  *literals;literals49,1129
}DPLLClauseCell, *DPLLClause_p;DPLLClause_p50,1157
#define DPLLClauseCellAlloc(59,1416
#define DPLLClauseCellFree(60,1498
#define DPLLClauseIsUnit(62,1582

PROPOSITIONAL/cpr_propsig.h,368
#define CPR_PROPSIG28,711
typedef struct propsigcell38,1012
   PStack_p  enc_to_name;40,1041
   StrTree_p name_to_enc;41,1068
}PropSigCell, *PropSig_p;PropSig_p42,1094
typedef long PLiteralCode;45,1122
#define PropSigCellAlloc(52,1374
#define PropSigCellFree(53,1447
#define PLiteralNoLit 54,1524
#define PAtomP(55,1548
#define   PropSigAtomNumber(64,1835

PROPOSITIONAL/cpr_varset.h,327
#define CPR_VARSET27,627
typedef struct atomset_cell35,896
   PLiteralCode        atom;37,926
   struct atomset_cell *prev;prev38,955
   struct atomset_cell *succ;succ39,985
}AtomSetCell, *AtomSet_p;AtomSet_p40,1015
#define AtomSetCellAlloc(47,1266
#define AtomSetCellFree(48,1339
#define      AtomSetEmpty(52,1491

PROVER/e_version.h,185
#define E_VERSION26,611
#define VERSION 42,1107
#define E_NICKNAME 44,1141
#define E_URL 46,1178
#define STS_MAIL 48,1218
#define STS_COPYRIGHT 49,1256
#define STS_SNAIL 50,1318

TERMS/cte_acterms.h,239
#define CTE_ACTERMS27,633
typedef struct actermopcell39,1050
   FunCode          f_code;41,1080
   PDArray_p        args;42,1140
}ACTermCell, *ACTerm_p;ACTerm_p43,1210
#define ACTermCellAlloc(50,1459
#define ACTermCellFree(51,1529

TERMS/cte_fp_index.h,764
#define CTE_FP_INDEX28,707
typedef struct fp_index_cell50,1576
   IntMap_p             f_alternatives;52,1607
   long                 count;55,1746
   PObjTree_p           payload;56,1777
}FPTreeCell, *FPTree_p;FPTree_p57,1810
typedef void (*FPTreeFreeFun)FPTreeFreeFun60,1836
typedef struct subterm_index_cell65,1905
   FPTree_p        index;67,1941
   FPIndexFunction fp_fun;68,1967
   Sig_p           sig;69,1994
   FPTreeFreeFun   payload_free;70,2018
}FPIndexCell, *FPIndex_p;FPIndex_p71,2051
typedef void (*FPLeafPrintFun)FPLeafPrintFun73,2078
typedef void (*FPLeafPayloadPrint)FPLeafPayloadPrint75,2153
#define FPTreeCellAlloc(86,2521
#define FPTreeCellFree(87,2591
#define FPIndexCellAlloc(107,3273
#define FPIndexCellFree(108,3346

TERMS/cte_functypes.h,297
#define CTE_FUNCTYPES27,619
   FSNone,41,1033
   FSIdentVar,42,1057
   FSIdentFreeFun,43,1137
   FSIdentInt,44,1217
   FSIdentFloat,45,1254
   FSIdentRational,46,1305
   FSIdentInterpreted,47,1350
   FSIdentObject 48,1430
}FuncSymbType;FuncSymbType49,1510
typedef long FunCode;59,1898

TERMS/cte_idx_fp.h,259
#define CTE_IDX_FP29,793
typedef FunCode *IndexFP_p;IndexFP_p44,1251
typedef IndexFP_p (*FPIndexFunction)FPIndexFunction46,1280
#define MAX_PM_INDEX_NAME_LEN 55,1583
#define   BELOW_VAR 57,1617
#define   ANY_VAR 58,1644
#define   NOT_IN_TERM 59,1671

TERMS/cte_match_mgu_1-1.h,62
#define CTE_MATCH_MGU_1_128,677
#define VerifyMatch(56,1489

TERMS/cte_replace.h,154
#define CTE_REPLACE26,581
   RWNotRewritable 41,1002
   RWLimitedRewritable 42,1030
   RWAlwaysRewritable 43,1058
}RWResultType;RWResultType44,1086

TERMS/cte_signature.h,2917
#define CTE_SIGNATURE27,671
   FPIgnoreProps 41,1044
   FPPredSymbol 42,1111
   FPFuncSymbol 43,1184
   FPFOFOp 45,1321
   FPSpecial 46,1392
   FPAssociative 47,1473
   FPCommutative 48,1547
   FPIsAC 49,1620
   FPIsAC         =   FPAssociative|FPAssociative49,1620
   FPIsAC         =   FPAssociative|FPCommutative,FPCommutative49,1620
   FPInterpreted 50,1671
   FPIsInteger 51,1729
   FPIsRational 52,1805
   FPIsFloat 53,1844
   FPIsObject 54,1898
   FPDistinctProp 56,2017
   FPDistinctProp =  FPIsObject 56,2017
   FPDistinctProp =  FPIsObject | FPIsInteger 56,2017
   FPDistinctProp =  FPIsObject | FPIsInteger | FPIsRational 56,2017
   FPDistinctProp =  FPIsObject | FPIsInteger | FPIsRational | FPIsFloat,56,2017
   FPOpFlag 57,2091
   FPClSplitDef 59,2214
   FPPseudoPred 61,2319
}FunctionProperties;FunctionProperties64,2506
typedef struct funccell71,2716
   char* name;74,2795
   int   arity;75,2810
   int   alpha_rank;76,2826
   FunctionProperties properties;78,2935
}FuncCell, *Func_p;Func_p79,2969
#define DEFAULT_SIGNATURE_SIZE 92,3474
#define DEFAULT_SIGNATURE_GROW 93,3508
typedef struct sigcell95,3542
   bool      alpha_ranks_valid;97,3567
   long      size;98,3636
   FunCode   f_count;99,3683
   FunCode   internal_symbols;100,3732
   Func_p    f_info;101,3807
   StrTree_p f_index;102,3846
   PStack_p  ac_axioms;103,3917
   FunCode   eqn_code;107,4128
   FunCode   neqn_code;108,4151
   FunCode   cnil_code;109,4175
   PDArray_p orn_codes;110,4199
   FunCode   not_code;116,4469
   FunCode   qex_code;117,4492
   FunCode   qall_code;118,4515
   FunCode   and_code;119,4539
   FunCode   or_code;120,4562
   FunCode   impl_code;121,4584
   FunCode   equiv_code;122,4608
   FunCode   nand_code;123,4633
   FunCode   nor_code;124,4657
   FunCode   bimpl_code;125,4680
   FunCode   xor_code;126,4705
   FunCode   answer_code;128,4780
   long      skolem_count;131,4887
   long      newpred_count;132,4914
   FunctionProperties distinct_props;134,5015
}SigCell, *Sig_p;Sig_p135,5053
#define SIG_TRUE_CODE 146,5346
#define SIG_FALSE_CODE 147,5371
#define SIG_NIL_CODE 148,5396
#define SIG_CONS_CODE 149,5421
#define FuncSetProp(153,5472
#define FuncDelProp(154,5528
#define FuncQueryProp(157,5634
#define FuncIsAnyPropSet(160,5741
#define SigSetFuncProp(164,5858
#define SigDelFuncProp(166,5952
#define SigQueryFuncProp(168,6046
#define SigIsAnyFuncPropSet(170,6144
#define SigCellAlloc(176,6376
#define SigCellFree(177,6437
#define SigExternalSymbols(182,6600
#define SigInterpreteNumbers(185,6684
#define SigIsFunConst(196,7152
#define SigIsSimpleAnswerPred(198,7292
static __inline__ int SigFindArity(254,9516
static __inline__ char*  SigFindName(277,10092
static __inline__ FunCode SigGetEqnCode(298,10581
static __inline__ FunCode SigGetOrCode(339,11460
static __inline__ FunCode SigGetCNilCode(365,11970

TERMS/cte_simplesorts.h,422
#define CTE_SIMPLESORTS27,634
   STNoSort 41,1106
   STBool,42,1129
   STIndividuals,44,1232
   STInteger,45,1287
   STReal 46,1330
}SortType;SortType47,1363
typedef struct sort_table53,1505
   SortType  default_type;55,1533
   StrTree_p sort_index;58,1712
   PStack_p  back_index;59,1783
}SortTableCell, *SortTable_p;SortTable_p63,2018
#define SortTableCellAlloc(71,2274
#define SortTableCellFree(72,2356

TERMS/cte_subst.h,248
#define CTE_SUBST29,735
typedef PStackCell SubstCell;39,1054
typedef PStack_p   Subst_p;40,1084
#define SubstAlloc(46,1336
#define SubstFree(47,1374
#define SubstDelete(49,1416
#define SubstDeleteSkolem(50,1479
#define SubstIsEmpty(51,1554

TERMS/cte_termbanks.h,994
#define CTE_TERMBANKS38,1191
typedef struct tbcell48,1524
   unsigned long in_count;50,1548
   PDArray_p     ext_index;51,1622
   TermProperties garbage_state;64,2212
   Sig_p         sig;70,2464
   VarBank_p     vars;71,2518
   Term_p        true_term;72,2594
   Term_p        false_term;74,2694
   Term_p        min_term;76,2795
   unsigned long rewrite_steps;79,2985
   TermCellStoreCell term_store;80,3057
   struct gc_admin_cell *gc;gc81,3115
}TBCell, *TB_p;TB_p86,3437
#define TBCellAlloc(98,3774
#define TBCellFree(99,3832
#define TBNonVarTermNodes(105,3985
#define TBStorage(106,4057
#define TBCellIdent(110,4188
#define TermIsTrueTerm(113,4305
#define TBTermIsSubterm(116,4425
#define TBTermIsTypeTerm(119,4526
#define TBTermIsXTypeTerm(121,4618
#define TBTermIsGround(123,4742
#define TBPrintTermFull(141,5455
#define  TBTermParse(147,5750
#define  TBRawTermParse(148,5816
#define TBTermCellIsMarked(155,6085
static __inline__ bool TBTermEqual(183,7041

TERMS/cte_termcellstore.h,457
#define CTE_TERMCELLSTORE33,914
#define TERM_STORE_HASH_SIZE 41,1192
#define TERM_STORE_HASH_MASK 42,1230
typedef struct termcellstore44,1285
   long   entries;46,1316
   long   arg_count;47,1335
   Term_p store[store48,1356
}TermCellStoreCell, *TermCellStore_p;TermCellStore_p49,1395
#define tcs_arity0hash(56,1658
#define tcs_arity1hash(57,1704
#define tcs_aritynhash(58,1788
#define TermCellHash(60,1873
#define TermCellStoreNodes(79,2577

TERMS/cte_termcpos.h,93
#define CTE_TERMCPOS28,716
typedef long TermCPos;37,988
#define  TermCPosIsTopPos(44,1236

TERMS/cte_termfunc.h,289
#define CTE_TERMFUNC26,640
#define TermStartToken 46,1227
#define TermIsStructSubterm(83,2831
#define TermStandardWeight(87,3003
#define TermIsGround(106,3653
#define TermHasUnboundVariables(107,3715
#define TermAddSymbolDistribution(113,3896
#define TermCollectVariables(129,4665

TERMS/cte_termpos.h,346
#define CTE_TERMPOS26,608
typedef PStackCell TermPosCell;58,1663
typedef PStack_p   TermPos_p;59,1695
#define TERM_POS_ELEMENT_SIZE 63,1796
#define TermPosAlloc(70,2053
#define TermPosFree(71,2093
#define TermPosIsTopPos(73,2137
static __inline__ Term_p TermPosGetSubterm(99,3019
static __inline__ Term_p TermPosFirstLIPosition(134,3737

TERMS/cte_termtrees.h,68
#define CTE_TERMTREES36,1071
#define TermTreeTraverseExit(62,2045

TERMS/cte_termtypes.h,2883
#define CTE_TERMTYPES30,818
#define DEFAULT_VWEIGHT 44,1206
#define DEFAULT_FWEIGHT 45,1271
   TPIgnoreProps 51,1416
   TPRestricted 52,1481
   TPTopPos 53,1556
   TPIsGround 54,1621
   TPPredPos 55,1681
   TPIsRewritable 57,1813
   TPIsRRewritable 63,2235
   TPIsSOSRewritten 66,2431
   TPSpecialFlag 68,2561
   TPOpFlag 69,2642
   TPCheckFlag 70,2697
   TPOutputFlag 71,2752
   TPIsSpecialVar 73,2880
   TPIsRewritten 75,3024
   TPIsRRewritten 77,3153
   TPIsShared 81,3398
   TPGarbageFlag 82,3459
   TPIsFreeVar 83,3534
   TPPotentialParamod 84,3590
   TPPosPolarity 86,3714
   TPNegPolarity 88,3858
}TermProperties;TermProperties90,4002
   NoRewrite 96,4079
   RuleRewrite 97,4128
   FullRewrite 98,4180
}RewriteLevel;RewriteLevel99,4241
   SysDate          nf_date[nf_date103,4274
      struct termcell*   replace;108,4562
      struct clause_cell *demod;demod111,4772
   }rw_desc;rw_desc112,4840
}RewriteState;RewriteState113,4853
typedef struct termcell116,4870
   TermProperties   properties;118,4896
   FunCode          f_code;119,4958
   int              arity;120,5018
   struct termcell* *args;args123,5198
   struct termcell* binding;124,5269
   unsigned long    entry_no;129,5583
   long             weight;133,5832
   RewriteState     rw_data;135,5955
   struct termcell* lson;136,6006
   struct termcell* rson;137,6080
}TermCell, *Term_p, **TermRef;TermRef139,6201
typedef long DerefType,142,6234
typedef long DerefType, *DerefType_p;DerefType_p142,6234
#define DEREF_ALWAYS 144,6273
#define DEREF_NEVER 145,6297
#define DEREF_ONCE 146,6321
#define TERMCELL_MEM 153,6517
#define TERMARG_MEM 154,6541
#define TERMP_MEM 155,6564
#define TERMCELL_MEM 157,6593
#define TERMARG_MEM 158,6632
#define TERMP_MEM 159,6667
#define TERMCELL_DYN_MEM 162,6711
typedef bool (*TermEqualTestFun)TermEqualTestFun172,7076
#define TERMS_INITIAL_ARGS 174,7133
#define RewriteAdr(176,7164
#define TermIsVar(177,7216
#define TermIsConst(178,7255
#define TermCellSetProp(180,7313
#define TermCellDelProp(181,7373
#define TermCellAssignProp(182,7433
#define TermCellQueryProp(184,7557
#define TermCellIsAnyPropSet(187,7668
#define TermCellGiveProps(189,7739
#define TermCellFlipProp(190,7804
#define TermCellAlloc(192,7868
#define TermCellFree(193,7932
#define TermArgArrayAlloc(194,8000
#define TermArgArrayFree(195,8079
#define TermIsRewritten(197,8158
#define TermIsRRewritten(198,8229
#define TermIsTopRewritten(199,8302
#define TermIsShared(200,8383
#define TermNFDate(202,8455
#define TermRWReplaceField(206,8648
#define TermRWDemodField(207,8715
#define REWRITE_AT_SUBTERM 208,8780
#define TermRWReplace(211,8873
#define TermRWDemod(212,8954
static __inline__ Term_p TermDeref(258,10679
static __inline__ Term_p* TermArgListCopy(297,11418
static __inline__ Term_p TermTopCopy(342,12624

TERMS/cte_termvars.h,540
#define CTE_TERMVARS26,638
typedef struct varbankcell44,1431
   FunCode   v_count;46,1460
   FunCode   max_var;47,1527
   StrTree_p ext_index;48,1590
   PDArray_p f_code_index;49,1649
}VarBankCell, *VarBank_p;VarBank_p50,1714
#define DEFAULT_VARBANK_SIZE 59,1967
#define FRESH_VAR_LIMIT 64,2183
#define VarBankCellAlloc(66,2219
#define VarBankCellFree(67,2292
#define VarBankGetVCount(81,2961
#define VarBankSetVCount(82,3010
#define VarBankResetVCount(83,3075
#define VarIsFreshVar(84,3130
#define VarFCodeIsFresh(85,3193

TERMS/cte_varhash.h,756
#define CTE_VARHASH29,752
#define VAR_HASH_SIZE 44,1251
#define VAR_HASH_MASK 45,1286
typedef struct var_hash_entry_cell47,1329
   Term_p                     key;49,1366
   long                       val;50,1401
   struct var_hash_entry_cell *next;next51,1436
}VarHashEntryCell, *VarHashEntry_p;VarHashEntry_p52,1473
typedef struct var_hash_cell54,1510
   VarHashEntry_p hash[hash56,1541
}VarHashCell, *VarHash_p;VarHash_p57,1580
#define VarHashEntryCellAlloc(67,1834
#define VarHashEntryCellFree(69,1930
#define VarHashCellAlloc(75,2150
#define VarHashCellFree(77,2231
static __inline__ VarHashEntry_p VarHashEntryAlloc(112,3382
static __inline__ VarHash_p VarHashAlloc(137,3915
static __inline__ VarHashEntry_p VarHashFind(163,4432

include/can_clausestats.h,383
#define CAN_CLAUSESTATS27,599
typedef struct clausestatscell38,905
   long proof_distance;40,938
   long simplify_used;41,962
   long simplify_unused;42,985
   long generate_used;43,1010
   long generate_unused;44,1033
   long subsumed;45,1061
}ClauseStatsCell, *ClauseStats_p;ClauseStats_p46,1079
#define ClauseStatsCellAlloc(54,1339
#define ClauseStatsCellFree(56,1433

include/can_clausestore.h,557
#define CAN_CLAUSESTORE27,635
typedef struct compact_clause_cell41,1088
   ClauseProperties properties;43,1125
   long             ident;44,1157
   long             ext_ident;45,1184
   short            literal_no;47,1293
   short            *sign;sign48,1325
   Term_p           *lit_terms;lit_terms49,1371
   PTree_p          g_parents;50,1442
   PTree_p          s_parents;51,1498
   ClauseStatsCell  stats;52,1555
}CompClauseCell, *CompClause_p;CompClause_p53,1582
#define CompClauseCellAlloc(62,1841
#define CompClauseCellFree(64,1932

include/can_infstate.h,28
#define CAN_INFSTATE26,604

include/can_treeanalyze.h,104
#define CAN_TREEANALYZE26,607
#define PROOF_DIST_INFINITY 42,1109
#define PROOF_DIST_DEFAULT 43,1163

include/ccl_axiomsorter.h,406
#define CCL_AXIOMSORTER27,662
   NoAxiom,38,955
   ClauseAxiom,39,967
   FormulaAxiom40,983
}AxiomType;AxiomType41,999
typedef struct w_axiom_cell46,1069
   AxiomType type;48,1099
   double    weight;49,1118
      WFormula_p form;52,1153
      Clause_p   clause;53,1176
   }ax;ax54,1201
}WAxiomCell, *WAxiom_p;WAxiom_p55,1209
#define WAxiomCellAlloc(62,1458
#define WAxiomCellFree(63,1531

include/ccl_clausecpos.h,62
#define CCL_CLAUSECPOS27,634
typedef long CompactPos;36,910

include/ccl_clausefunc.h,30
#define CCL_CLAUSEFUNC27,684

include/ccl_clauseinfo.h,430
#define CCL_CLAUSEINFO30,830
typedef struct clause_info_cell40,1129
   char *name;name42,1163
   char *source;source43,1212
   long line;44,1253
   long column;45,1267
}ClauseInfoCell, *ClauseInfo_p;ClauseInfo_p46,1283
#define ClauseInfoCellAlloc(54,1541
#define ClauseInfoCellFree(55,1626
#define      ClauseInfoAllocEmpty(58,1779
#define ClauseSourceInfoPrintTSTP(62,2030
#define ClauseSourceInfoPrintPCL(65,2136

include/ccl_clausepos.h,657
#define CLAUSEPOS26,590
typedef struct clauseposcell38,886
   Clause_p  clause;40,917
   Eqn_p     literal;41,938
   EqnSide   side;42,960
   TermPos_p pos;43,979
}ClausePosCell, *ClausePos_p;ClausePos_p44,997
#define ClausePosCellAlloc(53,1254
#define ClausePosCellFree(54,1333
#define CLAUSEPOSCELL_MEM 57,1441
#define CLAUSEPOSCELL_MEM 59,1476
#define ClausePosIsTop(68,1843
static __inline__ ClausePos_p ClausePosAlloc(100,3020
static __inline__ void ClausePosFree(124,3520
static __inline__ Term_p ClausePosGetSide(146,3975
static __inline__ Term_p ClausePosGetOtherSide(169,4506
static __inline__ Term_p ClausePosGetSubterm(193,5008

include/ccl_clausepos_tree.h,300
#define CCL_CLAUSEPOS_TREE26,627
typedef struct clause_tpos_cell37,1020
   Clause_p  clause;39,1054
   NumTree_p pos;40,1075
}ClauseTPosCell, *ClauseTPos_p;ClauseTPos_p41,1093
typedef PObjTree_p ClauseTPosTree_p;44,1127
#define ClauseTPosCellAlloc(52,1390
#define ClauseTPosCellFree(53,1472

include/ccl_clauses.h,6744
#define CCL_CLAUSES28,654
   CPIgnoreProps 41,1021
   CPInitial 43,1142
   CPInputClause 44,1205
   CPInputClause       = 2*CPInitial,CPInitial44,1205
   CPIsProcessed 46,1337
   CPIsProcessed       = 2*CPInputClause,CPInputClause46,1337
   CPIsOriented 48,1468
   CPIsOriented        = 2*CPIsProcessed,CPIsProcessed48,1468
   CPIsDIndexed 51,1623
   CPIsDIndexed        = 2*CPIsOriented,CPIsOriented51,1623
   CPIsSIndexed 53,1757
   CPIsSIndexed        = 2*CPIsDIndexed,CPIsDIndexed53,1757
   CPIsGlobalIndexed 55,1887
   CPIsGlobalIndexed   = 2*CPIsSIndexed,CPIsSIndexed55,1887
   CPRWDetected 57,2014
   CPRWDetected        = 2*CPIsGlobalIndexed,CPIsGlobalIndexed57,2014
   CPDeleteClause 61,2271
   CPDeleteClause      = 2*CPRWDetected,CPRWDetected61,2271
   CPType1 63,2406
   CPType1             = 2*CPDeleteClause,CPDeleteClause63,2406
   CPType2 67,2681
   CPType2             = 2*CPType1,CPType167,2681
   CPType3 68,2725
   CPType3             = 2*CPType2,CPType268,2725
   CPTypeMask 69,2768
   CPTypeMask          = CPType1|CPType169,2768
   CPTypeMask          = CPType1|CPType2|CPType269,2768
   CPTypeMask          = CPType1|CPType2|CPType3,CPType369,2768
   CPTypeUnknown 70,2818
   CPTypeAxiom 71,2888
   CPTypeAxiom         = CPType1,71,2888
   CPTypeHypothesis 72,2952
   CPTypeHypothesis    = CPType2,72,2952
   CPTypeConjecture 73,3021
   CPTypeConjecture    = CPType1|CPType173,3021
   CPTypeConjecture    = CPType1|CPType2,CPType273,3021
   CPTypeLemma 74,3090
   CPTypeLemma         = CPType3,74,3090
   CPTypeNegConjecture 75,3154
   CPTypeNegConjecture = CPType1|CPType175,3154
   CPTypeNegConjecture = CPType1|CPType3,CPType375,3154
   CPTypeQuestion 78,3346
   CPTypeQuestion      = CPType2|CPType278,3346
   CPTypeQuestion      = CPType2|CPType3,CPType378,3346
   CPTypeWatchClause 80,3490
   CPTypeWatchClause   = CPType1|CPType180,3490
   CPTypeWatchClause   = CPType1|CPType2|CPType280,3490
   CPTypeWatchClause   = CPType1|CPType2|CPType3,CPType380,3490
   CPIsIRVictim 83,3675
   CPIsIRVictim        = 2*CPType3,CPType383,3675
   CPOpFlag 86,3864
   CPOpFlag            = 2*CPIsIRVictim,CPIsIRVictim86,3864
   CPIsSelected 87,3929
   CPIsSelected        = 2*CPOpFlag,CPOpFlag87,3929
   CPIsFinal 89,4061
   CPIsFinal           = 2*CPIsSelected,CPIsSelected89,4061
   CPIsProofClause 93,4330
   CPIsProofClause  = 2*CPIsFinal,CPIsFinal93,4330
   CPIsSOS 95,4461
   CPIsSOS          = 2*CPIsProofClause,CPIsProofClause95,4461
   CPNoGeneration 96,4541
   CPNoGeneration   = 2*CPIsSOS,CPIsSOS96,4541
   CP_CSSCPA_1 99,4735
   CP_CSSCPA_1      = 2*CPNoGeneration,CPNoGeneration99,4735
   CP_CSSCPA_2 100,4805
   CP_CSSCPA_2      = 2*CP_CSSCPA_1,CP_CSSCPA_1100,4805
   CP_CSSCPA_4 101,4843
   CP_CSSCPA_4      = 2*CP_CSSCPA_2,CP_CSSCPA_2101,4843
   CP_CSSCPA_8 102,4881
   CP_CSSCPA_8      = 2*CP_CSSCPA_4,CP_CSSCPA_4102,4881
   CP_CSSCPA_Mask 103,4918
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_1103,4918
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_2|CP_CSSCPA_2103,4918
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_2|CP_CSSCPA_4|CP_CSSCPA_4103,4918
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_2|CP_CSSCPA_4|CP_CSSCPA_8,CP_CSSCPA_8103,4918
   CP_CSSCPA_Unkown 104,4989
   CPIsProtected 105,5014
   CPIsProtected    = 2*CP_CSSCPA_8,CP_CSSCPA_8105,5014
   CPWatchOnly 110,5336
   CPWatchOnly      = 2*CPIsProtected,CPIsProtected110,5336
   CPSubsumesWatch 111,5375
   CPSubsumesWatch  = 2*CPWatchOnly,CPWatchOnly111,5375
   CPLimitedRW 112,5412
   CPLimitedRW      = 2*CPSubsumesWatch,CPSubsumesWatch112,5412
   CPIsRelevant 116,5670
   CPIsRelevant     = 2*CPLimitedRW CPLimitedRW116,5670
}ClauseProperties;ClauseProperties119,5860
typedef struct clause_cell122,5881
   long                  ident;124,5910
   long                  perm_ident;128,6055
   SysDate               date;131,6194
   Eqn_p                 literals;133,6289
   short                 neg_lit_no;134,6350
   short                 pos_lit_no;135,6412
   long                  weight;136,6474
   Eval_p                evaluations;139,6595
   ClauseProperties      properties;140,6659
   ClauseInfo_p          info;142,6749
   PStack_p              derivation;144,6892
   long                  create_date;146,7028
   long                  proof_depth;149,7149
   long                  proof_size;152,7276
   PTree_p               children;155,7403
   struct clause_cell*   parent1;157,7520
   struct clause_cell*   parent2;158,7592
   struct clausesetcell* set;159,7667
   struct clause_cell*   pred;160,7735
   struct clause_cell*   succ;161,7805
}ClauseCell, *Clause_p;Clause_p162,7862
#define ClauseSetProp(173,8225
#define ClauseDelProp(174,8287
#define ClauseGiveProps(175,8349
#define ClauseQueryProp(178,8466
#define ClauseIsAnyPropSet(181,8581
#define ClauseQueryTPTPType(187,8755
#define TPTPTypesCombine(190,8831
#define ClauseSetCSSCPASource(194,8967
#define ClauseQueryCSSCPASource(197,9111
#define ClauseCellAllocRaw(200,9213
#define ClauseCellFree(201,9286
#define CLAUSECELL_MEM 204,9380
#define CLAUSECELL_MEM 206,9412
#define  ClauseGCMarkTerms(216,9673
#define  ClauseLiteralNumber(218,9748
#define  ClausePropLitNumber(221,9840
#define  ClauseIsEmpty(224,9944
#define  ClauseIsGoal(228,10097
#define  ClauseIsHorn(229,10153
#define  ClauseIsUnit(230,10211
#define  ClauseIsDemodulator(231,10274
#define  ClauseIsRWRule(234,10393
#define  ClauseIsGround(236,10503
#define  ClauseIsPositive(237,10569
#define  ClauseIsNegative(238,10631
#define  ClauseIsMixed(239,10693
#define  ClauseIsHypothesis(241,10790
#define  ClauseIsConjecture(242,10874
#define  ClauseFindNegPureVarLit(246,11037
#define  ClauseIsTrivial(248,11134
#define  ClauseSubsumeOrderSortLits(256,11384
#define  ClauseIsSubsumeOrdered(260,11632
#define  ClauseToStack(266,11900
#define  ClauseIsEquational(270,12015
#define  ClauseIsPureEquational(272,12101
#define  ClauseTermSetProp(275,12196
#define  ClauseTBTermDelPropCount(277,12295
#define  ClauseTermDelProp(279,12408
#define  ClauseIsSOS(282,12508
#define  ClauseCondMarkMaximalTerms(317,14171
#define  ClauseOrientLiterals(321,14322
#define  ClauseMarkMaximalLiterals(323,14417
#define  ClauseDeleteTermProperties(326,14527
#define  ClauseDepth(368,16114
#define  NormSubstClause(383,16710
#define  ClauseAddSymbolDistribution(389,16908
#define  ClauseAddSymbolDistExist(391,17053
#define  ClauseAddSymbolFeatures(394,17214
#define  ClauseComputeFunctionRanks(397,17361
#define  ClauseCollectVariables(399,17505
#define  ClauseAddFunOccs(402,17612
#define CLAUSE_ENSURE_DERIVATION(408,17874

include/ccl_clausesets.h,669
#define CCL_CLAUSESETS28,674
typedef struct clausesetcell45,1221
   long      members;47,1252
   long      literals;48,1308
   Clause_p  anchor;49,1360
   SysDate   date;50,1400
   PDTree_p  demod_index;54,1602
   FVIAnchor_p fvindex;55,1659
   PDArray_p eval_indices;56,1719
   long      eval_no;57,1746
}ClauseSetCell, *ClauseSet_p;ClauseSet_p58,1768
#define CLAUSECELL_DYN_MEM 66,2024
#define ClauseSetCellAlloc(68,2086
#define ClauseSetCellFree(69,2168
#define     ClauseSetStorage(71,2239
#define     ClauseSetCardinality(79,2562
#define     ClauseSetEmpty(80,2617
#define     ClauseSetMoveClause(91,3273
#define     ClauseSetDocQuote(139,5640

include/ccl_clausetrees.h,36
#define CCL_CLAUSESETFILTERS27,639

include/ccl_condensation.h,79
#define CCL_CONDENSATION29,611
typedef bool (*CondenseFun)CondenseFun39,892

include/ccl_context_sr.h,30
#define CCL_CONTEXT_SR31,757

include/ccl_def_handling.h,327
#define CCL_DEF_HANDLING28,743
typedef struct def_store_cell38,1052
   TB_p         terms;40,1084
   ClauseSet_p  def_clauses;41,1148
   NumTree_p    def_assocs;42,1221
   FormulaSet_p def_archive;43,1297
}DefStoreCell, *DefStore_p;DefStore_p44,1326
#define DefStoreCellAlloc(53,1581
#define DefStoreCellFree(54,1660

include/ccl_derivation.h,5316
#define CCL_DERIVATION26,596
   DONop,39,948
   DOQuote,40,958
   DORewrite,42,1036
   DOUnfold,43,1050
   DOApplyDef,44,1063
   DOContextSR,45,1078
   DODesEqRes,46,1094
   DOSR,47,1110
   DOAcRes,48,1119
   DOCondense,49,1131
   DONormalize,50,1146
   DOEvalAnswers,51,1162
   DONegateConjecture,53,1224
   DOFofSimplify,54,1247
   DOFNNF,55,1265
   DOShiftQuantors,56,1279
   DOVarRename,57,1299
   DOSkolemize,58,1315
   DODistDisjunctions,59,1331
   DOAnnoQuestion,60,1354
   DOParamod,62,1404
   DOSimParamod,63,1418
   DOOrderedFactor,64,1435
   DOEqFactor,65,1455
   DOEqRes,66,1470
   DOSplitEquiv,68,1518
   DOIntroDef,69,1535
   DOSplitConjunct70,1550
}OpCodes;OpCodes71,1569
   Arg1Fof 76,1596
   Arg1Cnf 77,1615
   Arg1Num 78,1634
   Arg2Fof 79,1654
   Arg2Cnf 80,1674
   Arg2Num 81,1694
}ArgDesc;ArgDesc82,1714
   DCNop 87,1741
   DCNop              = DONop,87,1741
   DCCnfQuote 88,1772
   DCCnfQuote         = DOQuote|DOQuote88,1772
   DCCnfQuote         = DOQuote|Arg1Cnf,Arg1Cnf88,1772
   DCFofQuote 89,1813
   DCFofQuote         = DOQuote|DOQuote89,1813
   DCFofQuote         = DOQuote|Arg1Fof,Arg1Fof89,1813
   DCRewrite 91,1920
   DCRewrite          = DORewrite|DORewrite91,1920
   DCRewrite          = DORewrite|Arg1Cnf,Arg1Cnf91,1920
   DCUnfold 92,1963
   DCUnfold           = DOUnfold|DOUnfold92,1963
   DCUnfold           = DOUnfold|Arg1Cnf,Arg1Cnf92,1963
   DCApplyDef 93,2005
   DCApplyDef         = DOApplyDef|DOApplyDef93,2005
   DCApplyDef         = DOApplyDef|Arg1Fof,Arg1Fof93,2005
   DCContextSR 94,2049
   DCContextSR        = DOContextSR|DOContextSR94,2049
   DCContextSR        = DOContextSR|Arg1Cnf,Arg1Cnf94,2049
   DCSR 95,2094
   DCSR               = DOSR|DOSR95,2094
   DCSR               = DOSR|Arg1Cnf,Arg1Cnf95,2094
   DCDesEqRes 96,2132
   DCDesEqRes         = DODesEqRes,96,2132
   DCACRes 97,2211
   DCACRes            = DOAcRes|DOAcRes97,2211
   DCACRes            = DOAcRes|Arg1Num,Arg1Num97,2211
   DCCondense 98,2252
   DCCondense         = DOCondense,98,2252
   DCNormalize 99,2288
   DCNormalize        = DONormalize,99,2288
   DCEvalAnswers 100,2325
   DCEvalAnswers      = DOEvalAnswers,100,2325
   DCNegateConjecture 102,2408
   DCNegateConjecture = DONegateConjecture,102,2408
   DCFofSimplify 103,2452
   DCFofSimplify      = DOFofSimplify,103,2452
   DCFNNF 104,2491
   DCFNNF             = DOFNNF,104,2491
   DCShiftQuantors 105,2526
   DCShiftQuantors    = DOShiftQuantors,105,2526
   DCVarRename 106,2567
   DCVarRename        = DOVarRename,106,2567
   DCSkolemize 107,2604
   DCSkolemize        = DOSkolemize,107,2604
   DCDistDisjunctions 108,2641
   DCDistDisjunctions = DODistDisjunctions,108,2641
   DCAnnoQuestion 109,2685
   DCAnnoQuestion     = DOAnnoQuestion,109,2685
   DCParamod 111,2756
   DCParamod          = DOParamod 111,2756
   DCParamod          = DOParamod |Arg1Cnf|Arg1Cnf111,2756
   DCParamod          = DOParamod |Arg1Cnf|Arg2Cnf,Arg2Cnf111,2756
   DCSimParamod 112,2808
   DCSimParamod       = DOSimParamod|DOSimParamod112,2808
   DCSimParamod       = DOSimParamod|Arg1Cnf|Arg1Cnf112,2808
   DCSimParamod       = DOSimParamod|Arg1Cnf|Arg2Cnf,Arg2Cnf112,2808
   DCOrderedFactor 113,2862
   DCOrderedFactor    = DOOrderedFactor|DOOrderedFactor113,2862
   DCOrderedFactor    = DOOrderedFactor|Arg1Cnf,Arg1Cnf113,2862
   DCEqFactor 114,2911
   DCEqFactor         = DOEqFactor|DOEqFactor114,2911
   DCEqFactor         = DOEqFactor|Arg1Cnf,Arg1Cnf114,2911
   DCEqRes 115,2955
   DCEqRes            = DOEqRes|DOEqRes115,2955
   DCEqRes            = DOEqRes|Arg1Cnf,Arg1Cnf115,2955
   DCSplitEquiv 117,3032
   DCSplitEquiv       = DOSplitEquiv|DOSplitEquiv117,3032
   DCSplitEquiv       = DOSplitEquiv|Arg1Fof,Arg1Fof117,3032
   DCIntroDef 118,3078
   DCIntroDef         = DOIntroDef,118,3078
   DCSplitConjunct 119,3114
   DCSplitConjunct    = DOSplitConjunct|DOSplitConjunct119,3114
   DCSplitConjunct    = DOSplitConjunct|Arg1FofArg1Fof119,3114
}DerivationCodes;DerivationCodes120,3162
   PONoObject 125,3197
   POSimpleDeriviation 126,3216
   PODetailedDerivation 127,3244
   POSingleStepDerivation 128,3273
}ProofObjectType;ProofObjectType129,3303
typedef struct derived_cell132,3323
   long       ref_count;134,3353
   bool       is_root;135,3378
   bool       is_fresh;136,3401
   Clause_p   clause;137,3425
   WFormula_p formula;138,3447
}DerivedCell, *Derived_p;Derived_p139,3470
typedef struct derivation_cell142,3498
   bool       ordered;144,3531
   Sig_p      sig;145,3554
   PObjTree_p deriv;146,3573
   PStack_p   roots;147,3594
   PStack_p   ordered_deriv;148,3615
}DerivationCell, *Derivation_p;Derivation_p149,3644
#define DCOpHasCnfArg1(159,3944
#define DCOpHasFofArg1(160,3988
#define DCOpHasNumArg1(161,4032
#define DCOpHasParentArg1(162,4077
#define DCOpHasArg1(163,4132
#define DCOpHasCnfArg2(165,4193
#define DCOpHasFofArg2(166,4238
#define DCOpHasNumArg2(167,4283
#define DCOpHasParentArg2(168,4328
#define DCOpHasArg2(169,4383
#define DPOpGetOpCode(171,4447
#define DerivedCellAlloc(186,4983
#define DerivedCellFree(187,5056
#define DerivedFree(190,5153
#define DerivationCellAlloc(198,5478
#define DerivationCellFree(199,5560

include/ccl_eqn.h,3077
#define CCL_EQN27,601
   EPNoProps 42,968
   EPIsPositive 43,1036
   EPIsMaximal 44,1099
   EPIsStrictlyMaximal 45,1164
   EPIsEquLiteral 46,1226
   EPIsOriented 47,1281
   EPMaxIsUpToDate 48,1334
   EPHasEquiv 49,1405
   EPIsDominated 52,1537
   EPDominates 53,1611
   EPDominates         =   EPIsDominated,53,1611
   EPIsUsed 56,1751
   EPGONatural 58,1849
   EPIsSelected 62,2012
   EPIsPMIntoLit 63,2077
   EPFromClauseLit 64,2140
   EPPseudoLit 66,2263
   EPLPatMinimal 69,2463
   EPRPatMinimal 70,2528
   EPIsSplitLit 71,2593
}EqnProperties;EqnProperties73,2684
typedef struct eqncell80,2870
   EqnProperties  properties;82,2895
   Term_p         lterm;83,2966
   Term_p         rterm;84,2991
   int            pos;85,3016
   TB_p           bank;86,3039
   struct eqncell *next;next87,3099
}EqnCell, *Eqn_p, **EqnRef;EqnRef88,3157
   NoSide 93,3202
   LeftSide 94,3217
   MaxSide 95,3234
   RightSide 96,3250
   MinSide 97,3268
   BothSides 98,3284
}EqnSide;EqnSide99,3301
   PENormal 106,3365
   PEReverse 107,3383
}PatEqnDirection;PatEqnDirection108,3399
#define EQUAL_PREDICATE 113,3470
#define EQN_CELL_MEM 116,3532
#define EQN_CELL_MEM 118,3562
#define EqnCellAlloc(133,4061
#define EqnCellFree(134,4125
#define EqnGCMarkTerms(139,4286
#define EqnSetProp(142,4423
#define EqnDelProp(143,4477
#define EqnFlipProp(144,4531
#define EqnQueryProp(147,4634
#define EqnIsAnyPropSet(150,4737
#define EqnIsOriented(152,4801
#define EqnIsPositive(153,4860
#define EqnIsNegative(154,4919
#define EqnIsEquLit(155,4983
#define EqnIsMaximal(156,5044
#define EqnIsStrictlyMaximal(157,5102
#define EqnGetPredCode(160,5199
#define EqnIsSplitLit(161,5266
#define EqnHasEquiv(165,5396
#define EqnIsDominated(166,5452
#define EqnDominates(167,5514
#define EqnIsSelected(168,5572
#define EqnIsPropTrue(170,5632
#define EqnIsPropFalse(171,5711
#define EqnIsGround(173,5791
#define EqnIsPureVar(175,5886
#define EqnIsPartVar(177,5972
#define EqnIsPropositional(179,6058
#define EqnIsTypePred(181,6148
#define EqnIsXTypePred(183,6236
#define EqnIsRealXTypePred(185,6326
#define EqnIsSimpleAnswer(187,6417
#define EqnTermSetProp(190,6517
#define EqnTBTermDelPropCount(193,6676
#define EqnTermDelProp(196,6820
#define EqnTBTermEncode(204,7170
#define EqnPrintOriginal(210,7479
#define EqnSkolemSubst(222,7946
#define EqnIsTrivial(228,8178
#define EqnWeightCompare(241,8502
#define LiteralEqual(253,9208
#define EqnEquiv(267,9731
#define LiteralEquiv(271,9867
#define EqnStandardWeight(292,10680
#define EqnSplitModStandardWeight(296,10802
#define EqnStandardDiff(313,11432
#define EqnCountMaximalLiterals(348,12705
#define EqnAddSymbolDistribution(354,12865
#define EqnAddSymbolDistExist(357,13035
#define EqnAddSymbolDistributionLimited(361,13253
#define EqnAddSymbolFeaturesLimited(364,13469
#define EqnComputeFunctionRanks(373,13889
#define EqnCollectVariables(380,14092
#define EqnCollectPropVariables(384,14231
#define EqnAddFunOccs(388,14404
static __inline__ long EqnDepth(413,15136

include/ccl_eqnlist.h,171
#define CCL_EQNLIST27,625
#define EqnListExtractFirst(56,1600
#define EqnListDeleteFirst(61,1804
#define EqnListInsertFirst(64,1930
#define NormSubstEqnList(103,3605

include/ccl_eqnresolution.h,33
#define CCL_EQNRESOLUTION26,604

include/ccl_f_generality.h,664
#define CCL_F_GENERALITY28,724
typedef struct fun_gen_cell42,1127
   FunCode f_code;44,1157
   long    term_freq;45,1176
   long    fc_freq;46,1198
}FunGenCell, *FunGen_p;FunGen_p47,1221
typedef struct gen_distrib_cell51,1282
   Sig_p    sig;53,1316
   long     size;54,1333
   FunGen_p dist_array;55,1351
   long     *f_distrib;f_distrib56,1377
}GenDistribCell, *GenDistrib_p;GenDistrib_p57,1401
#define GenDistribCellAlloc(65,1659
#define GenDistribCellFree(66,1744
#define GenDistribAddClauseSets(92,2977
#define GenDistribAddFormulaSets(95,3079
#define GenDistribBacktrackClauseSets(99,3184
#define GenDistribBacktrackFormulaSets(102,3304

include/ccl_factor.h,26
#define CCL_FACTOR26,572

include/ccl_fcvindexing.h,1088
#define CCL_FCVINDEXING29,705
typedef struct fvindex_parms_cell42,1039
   FVCollectCell cspec;44,1075
   bool use_perm_vectors;45,1100
   bool eliminate_uninformative;46,1126
   long max_symbols;47,1159
   long symbol_slack;48,1180
}FVIndexParmsCell, *FVIndexParms_p;FVIndexParms_p49,1202
typedef struct fv_index_cell53,1241
   bool     final;55,1272
   long     clause_count;56,1291
      IntMap_p successors;59,1331
      PTree_p  clauses;60,1358
   }u1;u161,1382
}FVIndexCell, *FVIndex_p;FVIndex_p62,1390
typedef struct fvi_anchor_cell64,1417
   FVCollect_p  cspec;66,1450
   PermVector_p perm_vector;67,1473
   FVIndex_p    index;68,1502
   long         storage;69,1525
}FVIAnchorCell, *FVIAnchor_p;FVIAnchor_p70,1550
#define FVIndexParmsCellAlloc(79,1858
#define FVIndexParmsCellFree(80,1946
#define FVIndexParmsFree(84,2118
#define FVIndexCellAlloc(86,2177
#define FVIndexCellFree(87,2253
#define FVIAnchorCellAlloc(92,2390
#define FVIAnchorCellFree(93,2472
#define FVINDEX_MEM 99,2684
#define FVINDEX_MEM 101,2713
#define FVIndexStorage(104,2762

include/ccl_findex.h,193
#define CCL_FINDEX26,612
typedef struct findex_cell36,908
   PDArray_p index;38,937
}FIndexCell, *FIndex_p;FIndex_p40,1073
#define FIndexCellAlloc(50,1325
#define FIndexCellFree(51,1398

include/ccl_formula_wrapper.h,1866
#define CCL_FORMULA_WRAPPER28,738
   WPIgnoreProps 38,1033
   WPInitial 39,1101
   WPInputFormula 40,1156
   WPInputFormula      = CPInputClause,40,1156
   WPType1 41,1233
   WPType1          = CPType1,41,1233
   WPType2 42,1274
   WPType2          = CPType2,42,1274
   WPType3 43,1306
   WPType3          = CPType3,43,1306
   WPTypeMask 44,1337
   WPTypeMask       = CPTypeMask,44,1337
   WPTypeUnknown 45,1371
   WPTypeAxiom 46,1439
   WPTypeAxiom      = CPTypeAxiom,46,1439
   WPTypeHypothesis 47,1502
   WPTypeHypothesis = CPTypeHypothesis,47,1502
   WPTypeConjecture 48,1570
   WPTypeConjecture = CPTypeConjecture,48,1570
   WPTypeLemma 49,1638
   WPTypeLemma      = CPTypeLemma,49,1638
   WPTypeNegConjecture 50,1701
   WPTypeNegConjecture = CPTypeNegConjecture,50,1701
   WPTypeQuestion 52,1827
   WPTypeQuestion   = CPTypeQuestion,52,1827
   WPIsRelevant 53,1865
   WPIsRelevant     = CPIsRelevant53,1865
}WFormulaProperties;WFormulaProperties54,1900
typedef struct wformula_cell57,1923
   WFormulaProperties    properties;59,1955
   long                  ident;60,1992
   TB_p                  terms;61,2024
   ClauseInfo_p          info;62,2056
   PStack_p              derivation;63,2087
   TFormula_p            tformula;64,2124
   struct formula_set_cell* set;65,2159
   struct wformula_cell* pred;66,2228
   struct wformula_cell* succ;67,2298
}WFormulaCell, *WFormula_p;WFormula_p68,2355
#define FormulaSetProp(80,2705
#define FormulaDelProp(81,2764
#define FormulaGiveProps(82,2823
#define FormulaQueryProp(85,2935
#define FormulaIsAnyPropSet(87,3044
#define FormulaSetType(88,3113
#define FormulaQueryType(91,3225
#define  FormulaIsHypothesis(93,3289
#define  FormulaIsConjecture(94,3367
#define WFormulaStandardWeight(99,3560
#define WFormulaCellAlloc(101,3637
#define WFormulaCellFree(102,3716

include/ccl_formulafunc.h,66
#define CCL_FORMULAFUNC27,612
#define TFORMULA_GC_LIMIT 42,1138

include/ccl_formulasets.h,381
#define CCL_FORMULASETS26,620
typedef struct formula_set_cell35,925
   WFormula_p anchor;37,959
   long       members;38,981
}FormulaSetCell, *FormulaSet_p;FormulaSet_p39,1004
#define FormulaSetCellAlloc(47,1262
#define FormulaSetCellFree(48,1347
#define      FormulaSetCardinality(53,1554
#define      FormulaSetEmpty(54,1611
#define      FormulaSetMoveFormula(63,2113

include/ccl_freqvectors.h,2069
#define CCL_FREQVECTORS27,644
typedef FixedDArray_p PermVector_p;39,997
typedef struct tuple3_cell41,1034
   long pos;43,1063
   long diff;44,1076
   long value;45,1090
}Tuple3Cell;Tuple3Cell46,1105
#define FVINDEX_MAX_FEATURES_DEFAULT 48,1119
#define FVINDEX_SYMBOL_SLACK_DEFAULT 49,1199
typedef struct freq_vector_cell51,1277
   long size;53,1311
   long *array;array54,1355
   Clause_p clause;55,1371
}FreqVectorCell, *FreqVector_p, *FVPackedClause_p;FVPackedClause_p56,1427
#define FV_CLAUSE_FEATURES 60,1557
   FVINoFeatures,64,1602
   FVIACFeatures,65,1620
   FVISSFeatures,66,1638
   FVIAllFeatures,67,1656
   FVIBillFeatures,68,1675
   FVIBillPlusFeatures,69,1695
   FVIACFold,70,1719
   FVIACStagger,71,1733
   FVICollectFeatures,72,1750
}FVIndexType;FVIndexType73,1773
typedef struct fv_collect_cell79,1880
   FVIndexType features;81,1913
   bool  use_litcount;82,1938
   long* assembly_vector;83,1999
   long  ass_vec_len;85,2115
   long  res_vec_len;86,2178
   long  pos_count_base;90,2427
   long  pos_count_offset;91,2455
   long  pos_count_mod;92,2485
   long  neg_count_base;93,2509
   long  neg_count_offset;94,2537
   long  neg_count_mod;95,2564
   long  pos_depth_base;96,2588
   long  pos_depth_offset;97,2616
   long  pos_depth_mod;98,2643
   long  neg_depth_base;99,2667
   long  neg_depth_offset;100,2695
   long  neg_depth_mod;101,2722
   long        max_symbols;104,2884
}FVCollectCell, *FVCollect_p;FVCollect_p105,2912
#define PermVectorAlloc(114,3197
#define PermVectorFree(115,3250
#define PermVectorCopy(116,3302
#define PermVectorPrint(117,3353
#define FreqVectorCellAlloc(125,3596
#define FreqVectorCellFree(126,3681
#define FVACCompatSize(129,3755
#define FVSSCompatSize(130,3819
#define FVFullSize(131,3864
#define FVSize(132,3928
#define FVCollectCellAlloc(137,4121
#define FVCollectCellFree(138,4203
#define FreqVectorFree(146,4385
#define FreqVectorFree(148,4455
#define FVPackedClauseFree(212,6955
#define FVPackedClauseFree(214,7033
#define FreqVectorSub(221,7280

include/ccl_g_lithash.h,485
#define CCL_G_LITHASH28,696
typedef struct lit_desc_cell36,971
   Term_p   lit;38,1002
   Clause_p clause;41,1137
}LitDescCell,*LitDesc_p;LitDesc_p45,1350
typedef struct lit_hash_cell51,1585
   long     sig_size;53,1616
   PTree_p  *pos_lits;pos_lits54,1668
   PTree_p  *neg_lits;neg_lits55,1736
}LitHashCell,*LitHash_p;LitHash_p57,1818
#define LitDescCellAlloc(64,2068
#define LitDescCellFree(65,2144
#define LitHashCellAlloc(69,2268
#define LitHashCellFree(70,2344

include/ccl_garbage_coll.h,270
#define CCL_GARBAGE_COLL28,711
typedef struct gc_admin_cell40,1021
   TB_p    bank;42,1052
   PTree_p clause_sets;43,1069
   PTree_p formula_sets;44,1093
}GCAdminCell, *GCAdmin_p;GCAdmin_p45,1118
#define GCAdminCellAlloc(52,1369
#define GCAdminCellFree(53,1445

include/ccl_global_indices.h,610
#define CCL_GLOBAL_INDICES26,628
typedef struct global_indices_cell38,972
   char              rw_bw_index_type[rw_bw_index_type40,1009
   char              pm_from_index_type[pm_from_index_type41,1071
   char              pm_into_index_type[pm_into_index_type42,1135
   char              pm_negp_index_type[pm_negp_index_type43,1199
   Sig_p             sig;44,1263
   SubtermIndex_p    bw_rw_index;45,1289
   OverlapIndex_p    pm_from_index;46,1326
   OverlapIndex_p    pm_into_index;47,1362
   OverlapIndex_p    pm_negp_index;48,1398
}GlobalIndices, *GlobalIndices_p;GlobalIndices_p49,1434

include/ccl_groundconstr.h,519
#define CCL_GROUNDCONSTR27,617
typedef struct lit_constr_cell36,896
   bool    constrained;38,929
   PTree_p constraints;39,953
}LitConstrCell;LitConstrCell40,977
typedef struct lit_occ_table42,994
   long          sig_size;44,1025
   int           maxarity;45,1052
   LitConstrCell *matrix;matrix46,1079
}LitOccTableCell, *LitOccTable_p;LitOccTable_p47,1105
#define LitOccTableCellAlloc(56,1366
#define LitOccTableCellFree(57,1454
#define LIT_OCC_TABLE_REF(59,1529
#define LIT_OCC_TABLE_ENTRY(62,1645

include/ccl_grounding.h,1381
#define CCL_GROUNDING27,656
typedef struct var_inst40,1084
   Term_p        variable;42,1110
   PStack_p      alternatives;43,1137
   PStackPointer position;44,1168
}VarInstCell, *VarInst_p;VarInst_p45,1195
typedef struct varset_inst49,1261
   long size;51,1290
   VarInst_p cells;52,1304
}VarSetInstCell, *VarSetInst_p;VarSetInst_p53,1324
   GCUNone 62,1529
   GCUPos 63,1545
   GCUNeg 64,1561
   GCUBoth 65,1577
   GCUBoth = GCUPos|GCUPos65,1577
   GCUBoth = GCUPos|GCUNegGCUNeg65,1577
}GCUEncoding;GCUEncoding66,1604
#define DEFAULT_LIT_NO 68,1619
#define DEFAULT_LIT_GROW 69,1649
   cpl_complete,73,1696
   cpl_lowmem,74,1713
   cpl_timeout,75,1728
   cpl_unknown76,1744
GroundSetState;78,1761
typedef struct ground_set_cell80,1778
   TB_p            lit_bank;82,1811
   long            max_literal;84,1904
   long            unit_no;85,1965
   GroundSetState  complete;86,1993
   PDArray_p       units;87,2059
   PDArray_p       unit_terms;88,2121
   PropClauseSet_p non_units;89,2181
}GroundSetCell, *GroundSet_p;GroundSet_p90,2211
#define VarSetInstCellAlloc(96,2465
#define VarSetInstCellFree(97,2550
#define EqnLitCode(113,3083
#define GroundSetCellAlloc(115,3131
#define GroundSetCellFree(116,3213
#define     GroundSetMembers(124,3560
#define     GroundSetDimacsPrintMembers(130,3820
#define     GroundSetLiterals(132,3934

include/ccl_inferencedoc.h,2174
#define CCL_INFERENCEDOC26,653
   inf_noinf,38,980
   inf_initial,39,994
   inf_quote,40,1010
   inf_paramod,41,1024
   inf_sim_paramod,42,1040
   inf_efactor,43,1060
   inf_factor,44,1076
   inf_eres,45,1091
   inf_split,46,1104
   inf_simplify_reflect,47,1118
   inf_context_simplify_reflect,48,1143
   inf_ac_resolution,49,1176
   inf_condense,50,1198
   inf_minimize,51,1215
   inf_rewrite,52,1232
   inf_fof_simpl,54,1252
   inf_fof_split_equiv,55,1270
   inf_fof_nnf,56,1294
   inf_fof_intro_def,57,1310
   inf_fof_apply_def,58,1332
   inf_shift_quantors,59,1354
   inf_fof_distrib,60,1377
   inf_annotate_question,61,1397
   inf_eval_answers,62,1423
   inf_var_rename,63,1444
   inf_skolemize_out,64,1463
   inf_neg_conjecture65,1485
}InfType;InfType66,1507
   no_format,70,1536
   lop_format,71,1550
   pcl_format,72,1565
   tstp_format,73,1580
   tptp_format,74,1596
   xml_format75,1612
}OutputFormatType;OutputFormatType76,1626
#define PCL_QUOTE 79,1648
#define PCL_ER 80,1671
#define PCL_PM 81,1694
#define PCL_SPM 82,1717
#define PCL_EF 83,1741
#define PCL_OF 84,1764
#define PCL_SPLIT 85,1787
#define TSTP_SPLIT_REFINED 86,1813
#define TSTP_SPLIT_BASE 87,1849
#define PCL_RW 88,1884
#define PCL_SR 89,1907
#define PCL_CSR 90,1930
#define PCL_ACRES 91,1954
#define PCL_CN 92,1977
#define PCL_CONDENSE 93,2000
#define PCL_SC 95,2033
#define PCL_SE 96,2069
#define PCL_FS 97,2102
#define PCL_NNF 98,2142
#define PCL_ID 99,2171
#define PCL_ID_DEF 100,2203
#define PCL_AD 101,2247
#define PCL_SQ 102,2278
#define PCL_VR 103,2314
#define PCL_SK 104,2351
#define PCL_DSTR 105,2382
#define PCL_ANNOQ 106,2414
#define PCL_EVANS 107,2454
#define PCL_NC 108,2495
#define DocClauseCreationDefault(124,3140
#define DocClauseModificationDefault(133,3557
#define DocClauseQuoteDefault(141,3857
#define DocClauseRewriteDefault(148,4129
#define DocFormulaCreationDefault(159,4580
#define DocFormulaModificationDefault(166,4886
#define DocFormulaIntroDefsDefault(171,5143
#define DocIntroSplitDefDefault(177,5342
#define DocIntroSplitDefRestDefault(182,5573
#define DocClauseApplyDefsDefault(188,5879

include/ccl_neweval.h,968
#define CCL_NEWEVAL31,784
typedef long EvalPriority;41,1106
#define PrioBest 43,1134
#define PrioPrefer 44,1157
#define PrioNormal 45,1180
#define PrioDefer 46,1203
#define PrioLargestReasonable 47,1226
typedef struct simple_eval_cell50,1263
   EvalPriority      priority;52,1297
   float             heuristic;53,1361
   struct eval_cell* lson;54,1425
   struct eval_cell* rson;55,1491
}SimpleEvalCell, *SimpleEval_p;SimpleEval_p56,1520
typedef struct eval_cell58,1553
   int               eval_no;60,1580
   long              eval_count;61,1648
   void*             object;63,1742
   SimpleEvalCell    evals[evals64,1798
}EvalCell, *Eval_p;Eval_p65,1828
#define EvalsFree(72,2073
#define EvalTreeFindSmallestWrap(73,2114
#define EvalTreePrintInOrderWrap(74,2194
#define EVAL_SIZE(82,2538
#define EvalCellAlloc(83,2619
#define EvalCellFree(84,2694
#define EVAL_MEM(87,2795
#define EVAL_MEM(89,2846
#define EvalTreeTraverseExit(114,3803

include/ccl_overlap_index.h,75
#define CCL_OVERLAP_INDEX29,796
typedef FPIndex_p OverlapIndex_p;40,1105

include/ccl_paramod.h,601
#define CCL_PARAMOD27,619
   ParamodPlain,39,961
   ParamodAlwaysSim,40,1027
   ParamodOrientedSim,41,1097
   ParamodDecreasingSim,44,1251
   ParamodSizeDecreasingSim 46,1369
}ParamodulationType;ParamodulationType48,1481
   TB_p        bank;52,1524
   OCB_p       ocb;53,1545
   VarBank_p   freshvars;54,1565
   Clause_p    new_orig;55,1591
   Clause_p    from;56,1616
   CompactPos  from_cpos;57,1637
   ClausePos_p from_pos;58,1663
   Clause_p    into;59,1688
   CompactPos  into_cpos;60,1709
   ClausePos_p into_pos;61,1735
}ParamodInfoCell, *ParamodInfo_p;ParamodInfo_p62,1760

include/ccl_pdtrees.h,1739
#define CCL_PDTREES31,829
typedef struct pdt_node_cell44,1208
   IntMap_p           f_alternatives;46,1239
   PDArray_p          v_alternatives;47,1302
   FunCode            max_var;48,1358
   long               size_constr;49,1424
   SysDate            age_constr;53,1571
   struct pdt_node_cell *parent;parent56,1711
   long               ref_count;58,1808
   PTree_p            entries;60,1896
   Term_p             variable;63,2028
   bool               bound;68,2212
   FunCode            trav_count;74,2445
}PDTNodeCell, *PDTNode_p;PDTNode_p80,2664
typedef struct pd_tree_cell85,2808
   PDTNode_p tree;87,2838
   PStack_p  term_stack;88,2857
   PStack_p  term_proc;89,2916
   PDTNode_p tree_pos;90,2990
   PStack_p  store_stack;91,3049
   Term_p    term;92,3117
   SysDate   term_date;93,3183
   long      term_weight;94,3252
   int       prefer_general;95,3293
   long      node_count;96,3334
   long      clause_count;97,3390
   long      arr_storage_est;98,3443
   unsigned  long match_count;99,3510
   unsigned  long visited_count;101,3596
}PDTreeCell, *PDTree_p;PDTree_p103,3689
#define PDNODE_FUN_INIT_ALT 109,3937
#define PDNODE_FUN_GROW_ALT 110,3967
#define PDNODE_VAR_INIT_ALT 111,3997
#define PDNODE_VAR_GROW_ALT 112,4027
#define  PDTREE_IGNORE_TERM_WEIGHT 114,4058
#define  PDTREE_IGNORE_NF_DATE 115,4102
#define  PDT_NODE_INIT_VAL(116,4159
#define  PDT_NODE_CLOSED(117,4219
#define   PDTreeCellAlloc(120,4363
#define   PDTreeCellFree(121,4438
#define PDTREE_CELL_MEM 124,4534
#define PDTREE_CELL_MEM 126,4567
#define PDTNODE_MEM 133,4715
#define PDTNODE_MEM 135,4744
#define   PDTreeStorage(138,4793
#define   PDTNodeCellAlloc(148,5037
#define   PDTNodeCellFree(149,5115

include/ccl_proofstate.h,2541
#define CTO_PROOFSTATE30,771
typedef struct proofstatecell43,1154
   Sig_p             signature;45,1186
   long              original_symbols;46,1218
   TB_p              original_terms;47,1257
   TB_p              terms;48,1294
   TB_p              tmp_terms;49,1322
   VarBank_p         freshvars;50,1354
   GCAdmin_p         gc_original_terms;51,1386
   GCAdmin_p         gc_terms;52,1427
   FormulaSet_p      f_ax_archive;53,1459
   FormulaSet_p      f_axioms;54,1494
   ClauseSet_p       axioms;55,1525
   ClauseSet_p       ax_archive;56,1554
   ClauseSet_p       processed_pos_rules;57,1587
   ClauseSet_p       processed_pos_eqns;58,1629
   ClauseSet_p       processed_neg_units;59,1670
   ClauseSet_p       processed_non_units;60,1712
   ClauseSet_p       unprocessed;61,1754
   ClauseSet_p       tmp_store;62,1788
   ClauseSet_p       archive;63,1820
   FormulaSet_p      f_archive;64,1850
   PStack_p          extract_roots;65,1882
   GlobalIndices     gindices;66,1918
   bool              fvi_initialized;67,1949
   FVCollect_p       fvi_cspec;69,2073
   ClauseSet_p       demods[demods70,2105
   ClauseSet_p       watchlist;73,2287
   GlobalIndices     wlindices;74,2319
   bool              state_is_complete;75,2351
   DefStore_p        definition_store;76,2391
   FVCollect_p       def_store_cspec;77,2430
   bool              status_reported;79,2469
   ulong_c           answer_count;80,2507
   ulong_c           processed_count;82,2543
   ulong_c           proc_trivial_count;83,2581
   ulong_c           proc_forward_subsumed_count;84,2622
   ulong_c           proc_non_trivial_count;85,2672
   ulong_c           other_redundant_count;86,2717
   ulong_c           non_redundant_deleted;88,2829
   ulong_c           backward_subsumed_count;89,2873
   ulong_c           backward_rewritten_count;90,2919
   ulong_c           backward_rewritten_lit_count;91,2966
   ulong_c           generated_count;92,3017
   ulong_c           generated_lit_count;93,3055
   ulong_c           non_trivial_generated_count;94,3097
   ulong_c           context_sr_count;95,3147
   ulong_c           paramod_count;96,3186
   ulong_c           factor_count;97,3222
   ulong_c           resolv_count;98,3257
}ProofStateCell, *ProofState_p;ProofState_p99,3295
#define ProofStateCellAlloc(107,3553
#define ProofStateCellFree(109,3640
#define      ProofStateStorage(121,4205
#define ProofStateAxNo(136,4815
#define WATCHLIST_INLINE_STRING 139,4960
#define WATCHLIST_INLINE_QSTRING 140,5020

include/ccl_propclauses.h,805
#define CCL_PROPCLAUSES28,710
typedef struct proplitcell37,985
   EqnProperties properties;39,1014
   Term_p        lit;40,1043
}PropLitCell, *PropLit_p;PropLit_p41,1065
typedef struct propclausecell44,1093
   int        lit_no;46,1125
   PropLit_p  literals;47,1147
   struct propclausecell *next;next48,1171
}PropClauseCell, *PropClause_p;PropClause_p49,1244
typedef struct propclausesetcell51,1277
   long         members;53,1312
   long         literals;54,1337
   long         empty_clauses;55,1363
   PropClause_p list;56,1394
   PropClause_p *inspos;inspos57,1441
}PropClauseSetCell, *PropClauseSet_p;PropClauseSet_p61,1650
#define PropClauseCellAlloc(71,1916
#define PropClauseCellFree(72,2001
#define PropClauseSetCellAlloc(82,2371
#define PropClauseSetCellFree(83,2465

include/ccl_relevance.h,570
#define CCL_RELEVANCE27,647
typedef struct relevance_cell40,1085
   Sig_p     sig;42,1117
   PList_p   clauses_core;44,1136
   PList_p   formulas_core;45,1163
   PList_p   clauses_rest;47,1195
   PList_p   formulas_rest;48,1222
   FIndex_p  clauses_index;50,1251
   FIndex_p  formulas_index;51,1279
   long      max_level;53,1312
   PDArray_p fcode_relevance;54,1336
   PStack_p  new_codes;55,1366
   PStack_p  relevance_levels;56,1390
}RelevanceCell, *Relevance_p;Relevance_p57,1421
#define RelevanceCellAlloc(65,1677
#define RelevanceCellFree(66,1759

include/ccl_rewrite.h,414
#define CCL_REWRITE26,594
typedef struct rw_desc_cell40,1024
   OCB_p        ocb;42,1054
   TB_p         bank;43,1075
   ClauseSet_p  *demods;demods44,1097
   SysDate      demod_date;45,1122
   RewriteLevel level;46,1150
   bool         prefer_general;47,1173
   bool         sos_rewritten;48,1205
}RWDescCell, *RWDesc_p;RWDesc_p49,1256
#define RWDescCellAlloc(59,1508
#define RWDescCellFree(60,1581

include/ccl_simparamod.h,30
#define CCL_SIMPARAMOD27,657

include/ccl_sine.h,560
#define CCL_SINE27,662
typedef struct d_rel_cell39,1022
   FunCode  f_code;41,1050
   bool     activated;42,1070
   PStack_p d_clauses;43,1093
   PStack_p d_formulas;44,1116
}DRelCell, *DRel_p;DRel_p45,1140
typedef struct d_relation_cell50,1229
   PDArray_p relation;52,1262
}DRelationCell, *DRelation_p;DRelation_p53,1301
   ATNoType,60,1371
   ATClause,61,1384
   ATFormula62,1397
}AxiomType;AxiomType63,1410
#define DRelCellAlloc(70,1647
#define DRelCellFree(71,1714
#define DRelationCellAlloc(76,1839
#define DRelationCellFree(77,1921

include/ccl_splitting.h,585
#define CCL_SPLITTING27,676
   SplitGroundNone 34,747
   SplitGroundOne 36,828
   SplitGroundFull 38,938
}SplitType;SplitType39,1005
   SplitNone 49,1264
   SplitHorn 50,1289
   SplitNonHorn 51,1314
   SplitNegative 52,1339
   SplitPositive 53,1364
   SplitMixed 54,1389
   SplitAll 55,1415
}SplitClassType;SplitClassType56,1439
#define QuerySplitClass(58,1457
#define SetSplitClass(59,1507
typedef struct lit_split_desc67,1789
   Eqn_p   literal;69,1821
   int     part;70,1841
   PTree_p varset;71,1858
}LitSplitDescCell, *LitSplitDesc_p;LitSplitDesc_p74,2032

include/ccl_subsumption.h,30
#define CCL_SUBSUPTION27,668

include/ccl_subterm_index.h,75
#define CCL_SUBTERM_INDEX27,698
typedef FPIndex_p SubtermIndex_p;37,1006

include/ccl_subterm_tree.h,595
#define CCL_SUBTERM_TREE27,688
typedef struct bw_rw_payload39,1041
   PTree_p rw_rest;41,1072
   PTree_p rw_full;44,1236
}BWRWPayload;BWRWPayload45,1306
typedef struct overlap_payload50,1367
   PObjTree_p clauses;52,1400
}OverlapPayload;OverlapPayload53,1423
typedef struct subterm_occ_cell58,1496
   Term_p       term;60,1530
      BWRWPayload    occs;63,1567
      OverlapPayload pos;64,1594
   }pl;pl65,1620
}SubtermOccCell, *SubtermOcc_p;SubtermOcc_p66,1628
typedef PObjTree_p SubtermTree_p;68,1661
#define SubtermOccCellAlloc(75,1920
#define SubtermOccCellFree(76,2002

include/ccl_tautologies.h,31
#define CCL_TAUTOLOGIES28,714

include/ccl_tcnf.h,94
#define CCL_TCNF27,655
#define TFORM_MANY_CLAUSES 42,1203
#define TFORM_MANY_LIMIT 43,1239

include/ccl_tformulae.h,591
#define CCL_TFORMULAE27,650
typedef Term_p TFormula_p;35,922
#define TFORM_RENAME_LIMIT 41,1173
#define TFORM_RENAME_LIMIT_STR 42,1207
#define   TFormulaHasSubForm1(44,1244
#define   TFormulaHasSubForm2(47,1379
#define   TFormulaIsBinary(51,1516
#define   TFormulaIsUnary(52,1572
#define   TFormulaIsQuantified(53,1628
#define   TFormulaIsLiteral(55,1751
#define   TFormulaIsPropTrue(60,1904
#define   TFormulaIsPropFalse(61,1982
#define    TFormulaGCMarkCells(63,2062
#define    TFormulaEqual(72,2626
#define    TFormulaCopy(74,2741
#define   TFormulaFindMaxVarCode(85,3308

include/ccl_unfold_defs.h,114
#define CCL_UNFOLD_DEFS31,925
#define DEFAULT_EQDEF_INCRLIMIT 42,1291
#define DEFAULT_EQDEF_MAXCLAUSES 45,1386

include/ccl_unit_simplify.h,206
#define CCL_UNIT_SIMPLIFY28,671
   NoUnitSimplify,40,967
   TopLevelUnitSimplify,41,1021
   FullUnitSimplify 42,1070
}UnitSimplifyType;UnitSimplifyType43,1136
#define TransUnitSimplifyString(52,1415

include/cco_batch_spec.h,879
#define CCO_BATCH_SPEC27,676
   BONone,43,1095
   BODesired,44,1106
   BORequired45,1120
}BOOutputType;BOOutputType46,1134
typedef struct batch_spec_cell53,1304
   char         *executable;executable55,1337
   IOFormat     format;56,1366
   char*        category;57,1390
   char*        train_dir;58,1438
   bool         ordered;59,1465
   BOOutputType res_assurance;60,1490
   BOOutputType res_proof;61,1521
   BOOutputType res_model;62,1548
   BOOutputType res_answer;63,1575
   BOOutputType res_list_fof;64,1603
   long         per_prob_limit;65,1633
   long         total_wtc_limit;66,1695
   PStack_p     includes;67,1757
   PStack_p     source_files;68,1827
   PStack_p     dest_files;69,1883
}BatchSpecCell, *BatchSpec_p;BatchSpec_p70,1940
#define BatchSpecCellAlloc(79,2197
#define BatchSpecCellFree(80,2279
#define BatchSpecProblemNo(93,2761

include/cco_clausesplitting.h,35
#define CCO_CLAUSESPLITTING26,611

include/cco_eqnresolving.h,32
#define CCO_EQNRESOLVING26,596

include/cco_eserver.h,238
#define CCO_ESERVER25,547
typedef struct eserver_cell37,873
   int         listening;39,903
   PQueue_p    sessions;40,959
}EServerCell, *EServer_p;EServer_p41,1021
#define EServerCellAlloc(56,1449
#define EServerCellFree(57,1525

include/cco_esession.h,441
#define CCO_ESESSION27,644
   ESNoState,40,986
   ESWaiting,41,1015
   ESActive,42,1062
   ESStale 43,1108
}ESessionState;ESessionState44,1159
typedef struct esession_cell47,1177
   ESessionState state;49,1208
   TCPChannel_p  channel;50,1232
   EPCtrlSet_p   running;51,1258
}ESessionCell, *ESession_p;ESession_p52,1284
#define ESessionCellAlloc(67,1714
#define ESessionCellFree(68,1793
#define     ESessionSetState(77,2090

include/cco_factoring.h,29
#define CCO_FACTORING26,579

include/cco_forward_contraction.h,82
#define CCO_FORWARD_CONTRACTION28,693
#define DEFAULT_FILTER_DESCRIPTOR 49,1378

include/cco_interpreted.h,31
#define CCO_INTERPRETED28,747

include/cco_paramodulation.h,34
#define CCO_PARAMODULATION26,603

include/cco_proc_ctrl.h,1193
#define CCO_PROC_CTRL28,710
   PRNoResult 42,1069
   PRTheorem,43,1088
   PRUnsatisfiable,44,1102
   PRSatisfiable,45,1122
   PRCounterSatisfiable,46,1140
   PRFailure,47,1165
   PRGaveUp48,1179
}ProverResult;ProverResult49,1191
typedef struct e_pctrl_cell52,1208
   pid_t        pid;54,1238
   FILE*        pipe;55,1259
   int          fileno;56,1281
   char*        input_file;57,1305
   char*        name;58,1333
   long long    start_time;59,1355
   long         prob_time;60,1383
   ProverResult result;61,1410
   DStr_p       output;62,1434
}EPCtrlCell, *EPCtrl_p;EPCtrl_p63,1458
#define EPCTRL_BUFSIZE 65,1483
typedef struct e_pctrl_set_cell67,1511
   NumTree_p procs;69,1545
   char      buffer[buffer70,1592
}EPCtrlSetCell, *EPCtrlSet_p;EPCtrlSet_p71,1629
#define SZS_THEOREM_STR 77,1883
#define SZS_UNSAT_STR 78,1933
#define SZS_SATSTR_STR 79,1989
#define SZS_COUNTERSAT_STR 80,2043
#define SZS_GAVEUP_STR 81,2104
#define SZS_FAILURE_STR 82,2153
#define E_OPTIONS 85,2195
#define EPCtrlCellAlloc(92,2382
#define EPCtrlCellFree(93,2455
#define EPCtrlSetCellAlloc(108,2883
#define EPCtrlSetCellFree(109,2965
#define     EPCtrlSetEmpty(116,3298

include/cco_proofproc.h,63
#define CCO_PROOFPROC26,567
#define TMPBANK_GC_LIMIT 57,1589

include/cco_scheduling.h,329
#define CCO_SCHEDULING26,603
typedef struct schedule_cell37,942
   char*        heu_name;39,973
   TermOrdering ordering;40,999
   char*        sine;41,1025
   float        time_fraction;42,1047
   rlim_t       time_absolute;43,1078
}ScheduleCell, *Schedule_p;Schedule_p44,1109
#define DEFAULT_SCHED_TIME_LIMIT 51,1362

include/cco_simplification.h,33
#define CCI_SIMPIFICATION26,601

include/cco_sine.h,518
#define CCO_SINE26,581
typedef struct strtuctured_FOF_spec_cell41,1090
   Sig_p         sig;43,1133
   TB_p          terms;44,1155
   PStack_p      clause_sets;45,1179
   PStack_p      formula_sets;46,1209
   StrTree_p     parsed_includes;47,1240
   PStackPointer shared_ax_sp;48,1274
   GenDistrib_p  f_distrib;49,1305
}StructFOFSpecCell, *StructFOFSpec_p;StructFOFSpec_p50,1333
#define StructFOFSpecCellAlloc(60,1599
#define StructFOFSpecCellFree(61,1693
#define       StructFOFSpecResetShared(73,2100

include/cex_csscpa.h,691
#define CEX_CSSCPA26,611
typedef struct csscpa_state_cell37,938
   Sig_p             sig;39,973
   TB_p              terms;40,999
   TB_p              tmp_terms;41,1027
   ClauseSet_p       pos_units;42,1059
   ClauseSet_p       neg_units;43,1091
   ClauseSet_p       non_units;44,1123
   long              literals;45,1155
   long              clauses;46,1186
   long              weight;47,1216
}CSSCPAStateCell, *CSSCPAState_p;CSSCPAState_p48,1245
   contradicts,53,1319
   improved,54,1335
   rejected,55,1348
   forced,56,1361
   requested,57,1372
   unknown58,1386
ClauseStatusType;60,1399
#define CSSCPAStateCellAlloc(66,1641
#define CSSCPAStateCellFree(67,1729

include/che_axfilter.h,1291
#define CHE_AXFILTER28,742
   AFNoFilter 40,1064
   AFGSinE,41,1083
   AFThreshold 42,1121
}AxFilterType;AxFilterType43,1176
   GMNoMeasure,51,1326
   GMTerms,52,1342
   GMLiterals,53,1354
   GMFormulas,54,1369
   GMPosFormula,55,1384
   GMPosLiteral,56,1401
   GMPosTerms,57,1418
   GMNegFormula,58,1433
   GMNegLiteral,59,1450
   GMNegTerms60,1467
}GeneralityMeasure;GeneralityMeasure61,1481
   char*             name;68,1565
   AxFilterType      type;69,1592
   GeneralityMeasure gen_measure;70,1619
   bool              use_hypotheses;71,1653
   double            benevolence;72,1690
   long              generosity;73,1724
   long              max_recursion_depth;74,1757
   long long         max_set_size;75,1799
   long              threshold;76,1834
   double            max_set_fraction;77,1866
   bool              add_no_symbol_axioms;78,1906
}AxFilterCell, *AxFilter_p;AxFilter_p79,1949
   PStack_p set;85,2020
}AxFilterSetCell, *AxFilterSet_p;AxFilterSet_p86,2037
#define AxFilterCellAlloc(94,2329
#define AxFilterCellFree(95,2408
#define AxFilterSetCellAlloc(106,2821
#define AxFilterSetCellFree(107,2909
#define       AxFilterSetElements(114,3248
#define       AxFilterSetGetFilter(115,3307
#define       AxFilterSetAddFilter(116,3391

include/che_axiomscan.h,31
#define CHE_AXIOMSCAN_H26,584

include/che_clausefeatures.h,76
#define CHE_CLAUSEFEATURES26,606
#define ClauseAddVarDistribution(49,1390

include/che_clausesetfeatures.h,7174
#define CHE_CLAUSESETFEATURES26,616
   SpecUnit,37,947
   SpecHorn,38,960
   SpecGeneral,39,973
   SpecNoEq,40,989
   SpecSomeEq,41,1002
   SpecPureEq,42,1017
   SpecFewPosNonGroundUnits,43,1032
   SpecSomePosNonGroundUnits,44,1061
   SpecManyPosNonGroundUnits,45,1091
   SpecFewPosGround,46,1121
   SpecSomePosGround,47,1142
   SpecManyPosGround,48,1164
   SpecFewAxioms,49,1186
   SpecSomeAxioms,50,1205
   SpecManyAxioms,51,1224
   SpecFewLiterals,52,1243
   SpecSomeLiterals,53,1263
   SpecManyLiterals,54,1284
   SpecSmallTerms,55,1305
   SpecMediumTerms,56,1324
   SpecLargeTerms,57,1344
   SpecArity0,58,1363
   SpecArity1,59,1378
   SpecArity2,60,1393
     SpecArity3Plus,61,1408
   SpecAritySumSmall,62,1429
   SpecAritySumMedium,63,1451
   SpecAritySumLarge,64,1474
   SpecDepthShallow,65,1496
   SpecDepthMedium,66,1517
   SpecDepthDeep,67,1537
}SpecFeatures;SpecFeatures68,1555
typedef struct spec_limits_cell75,1689
   bool   ngu_absolute;77,1723
   double ngu_few_limit;78,1747
   double ngu_many_limit;79,1772
   bool   gpc_absolute;80,1798
   double gpc_few_limit;81,1822
   double gpc_many_limit;82,1847
   long   ax_some_limit;83,1873
   long   ax_many_limit;84,1898
   long   lit_some_limit;85,1923
   long   lit_many_limit;86,1949
   long   term_medium_limit;87,1975
   long   term_large_limit;88,2004
   long   far_sum_medium_limit;89,2032
   long   far_sum_large_limit;90,2064
   long   depth_medium_limit;91,2095
   long   depth_deep_limit;92,2125
   int    symbols_medium_limit;93,2153
   int    symbols_large_limit;94,2185
   int    predc_medium_limit;95,2216
   int    predc_large_limit;96,2246
   int    pred_medium_limit;97,2275
   int    pred_large_limit;98,2304
   int    func_medium_limit;99,2332
   int    func_large_limit;100,2361
   int    fun_medium_limit;101,2389
   int    fun_large_limit;102,2417
}SpecLimitsCell, *SpecLimits_p;SpecLimits_p103,2444
typedef struct spec_feature_cell108,2598
   SpecFeatures axiomtypes;110,2633
   SpecFeatures goaltypes;111,2661
   SpecFeatures eq_content;112,2688
   SpecFeatures ng_unit_content;113,2716
   SpecFeatures ground_positive_content;114,2749
   bool         goals_are_ground;115,2790
   SpecFeatures set_clause_size;116,2824
   SpecFeatures set_literal_size;117,2857
   SpecFeatures set_termcell_size;118,2891
   SpecFeatures max_fun_ar_class;119,2926
   SpecFeatures avg_fun_ar_class;121,3016
   SpecFeatures sum_fun_ar_class;122,3050
   SpecFeatures max_depth_class;123,3084
   long         clauses;124,3117
   long         goals;125,3142
   long         axioms;126,3165
   long         literals;127,3189
   long         term_cells;128,3215
   long         clause_max_depth;129,3243
   long         clause_avg_depth;130,3277
   long         unit;131,3311
   long         unitgoals;132,3333
   long         unitaxioms;133,3360
   long         horn;134,3388
   long         horngoals;135,3410
   long		hornaxioms;136,3437
   long		eq_clauses;137,3458
   long		peq_clauses;138,3479
   long		groundunitaxioms;139,3501
   long         positiveaxioms;140,3528
   long         groundpositiveaxioms;141,3560
   long		groundgoals;142,3598
   double       ng_unit_axioms_part;143,3620
   double       ground_positive_axioms_part;144,3657
   int          max_fun_arity;145,3702
   int          avg_fun_arity;146,3734
   int          sum_fun_arity;147,3765
   int          max_pred_arity;148,3796
   int          avg_pred_arity;149,3829
   int          sum_pred_arity;150,3862
   int          fun_const_count;151,3895
   int          fun_nonconst_count;152,3928
   int          pred_nonconst_count;153,3964
}SpecFeatureCell, *SpecFeature_p;SpecFeature_p154,4001
#define NGU_ABSOLUTE 161,4260
#define NGU_FEW_DEFAULT 162,4296
#define NGU_MANY_DEFAULT 163,4332
#define NGU_FEW_ABSDEFAULT 164,4368
#define NGU_MANY_ABSDEFAULT 165,4404
#define GPC_ABSOLUTE 166,4440
#define GPC_FEW_DEFAULT 167,4476
#define GPC_MANY_DEFAULT 168,4512
#define GPC_FEW_ABSDEFAULT 169,4548
#define GPC_MANY_ABSDEFAULT 170,4584
#define AX_1_DEFAULT 171,4620
#define AX_4_DEFAULT 172,4656
#define AX_SOME_DEFAULT 173,4692
#define AX_MANY_DEFAULT 174,4728
#define LIT_SOME_DEFAULT 175,4764
#define LIT_MANY_DEFAULT 176,4800
#define TERM_MED_DEFAULT 177,4836
#define TERM_LARGE_DEFAULT 178,4872
#define FAR_SUM_MED_DEFAULT 179,4908
#define FAR_SUM_LARGE_DEFAULT 180,4943
#define DEPTH_MEDIUM_DEFAULT 181,4978
#define DEPTH_DEEP_DEFAULT 184,5175
#define SYMBOLS_MEDIUM_DEFAULT 185,5210
#define SYMBOLS_LARGE_DEFAULT 186,5247
#define PREDC_MEDIUM_DEFAULT 188,5286
#define PREDC_LARGE_DEFAULT 189,5321
#define PRED_MEDIUM_DEFAULT 190,5356
#define PRED_LARGE_DEFAULT 191,5394
#define FUNC_MEDIUM_DEFAULT 192,5432
#define FUNC_LARGE_DEFAULT 193,5467
#define FUN_MEDIUM_DEFAULT 194,5504
#define FUN_LARGE_DEFAULT 195,5541
#define DEFAULT_OUTPUT_DESCRIPTOR 199,5581
#define DEFAULT_CLASS_MASK 200,5624
#define SpecLimitsCellAlloc(203,5669
#define SpecLimitsCellFree(205,5762
#define SpecFeatureCellAlloc(209,5877
#define SpecFeatureCellFree(211,5973
#define Spec(214,6058
#define SpecAxiomsAreUnit(216,6115
#define SpecAxiomsAreHorn(217,6186
#define SpecAxiomsAreNonUnitHorn(218,6257
#define SpecAxiomsAreGeneral(220,6392
#define SpecGoalsAreUnit(222,6467
#define SpecGoalsAreHorn(223,6535
#define SpecGoalsAreGround(224,6592
#define SpecGoalsHaveVars(225,6652
#define SpecPureEq(227,6713
#define SpecSomeEq(228,6777
#define SpecNoEq(229,6844
#define SpecFewNGPosUnits(231,6892
#define SpecSomeNGPosUnits(233,6988
#define SpecManyNGPosUnits(235,7086
#define SpecFewGroundPos(238,7185
#define SpecSomeGroundPos(240,7280
#define SpecManyGroundPos(242,7377
#define SpecFewAxioms(245,7475
#define SpecSomeAxioms(247,7556
#define SpecManyAxioms(249,7639
#define SpecFewLiterals(252,7723
#define SpecSomeLiterals(254,7809
#define SpecManyLiterals(256,7897
#define SpecSmallTerms(259,7986
#define SpecMediumTerms(261,8071
#define SpecLargeTerms(263,8158
#define SpecMaxFArity0(266,8246
#define SpecMaxFArity1(268,8326
#define SpecMaxFArity2(270,8406
#define SpecMaxFArity3Plus(272,8486
#define SpecAvgFArity0(275,8574
#define SpecAvgFArity1(277,8654
#define SpecAvgFArity2(279,8734
#define SpecAvgFArity3Plus(281,8814
#define SpecSmallFArSum(284,8902
#define SpecMediumFArSum(286,8990
#define SpecLargeFArSum(288,9080
#define SpecShallowMaxDepth(291,9171
#define SpecMediumMaxDepth(293,9261
#define SpecDeepMaxDepth(295,9349
#define ClauseSetCountAxioms(299,9480
#define ClauseSetCountUnitAxioms(304,9661
#define ClauseSetIsUnitSet(306,9763
#define ClauseSetAxiomsAreUnit(308,9849
#define ClauseSetGoalsAreUnit(310,9956
#define ClauseSetCountHornAxioms(315,10156
#define ClauseSetIsHornSet(317,10259
#define ClauseSetAxiomsAreHorn(319,10345
#define ClauseSetGoalsAreHorn(321,10452
#define ClauseSetIsEquationalSet(327,10643
#define ClauseSetIsEquational(330,10784
#define ClauseSetIsPureEquationalSet(334,10920
#define ClauseSetGoalsAreGround(338,11079
#define ClauseSetIsGround(342,11233
#define ClauseSetCountNonGroundUnitAxioms(349,11492

include/che_clauseweight.h,323
#define CHE_CLAUSEWEIGHT28,702
#define DEFAULT_POS_MULT 36,974
typedef struct weightparamcell38,1002
   double pos_multiplier;40,1035
   long   vweight;41,1061
   long   fweight;42,1080
}WeightParamCell, *WeightParam_p;WeightParam_p43,1099
#define WeightParamCellAlloc(51,1359
#define WeightParamCellFree(53,1455

include/che_fcode_featurearrays.h,611
#define CHE_F_CODE_FEATUREARRAYS28,773
typedef struct fcode_feature_sort_cell38,1116
   int     key1;40,1157
   int     key2;41,1174
   int     key3;42,1191
   int     freq;43,1208
   int     conjfreq;44,1225
   int     pos_rank;45,1246
   FunCode symbol;46,1267
}FCodeFeatureSortCell, *FCodeFeatureSort_p;FCodeFeatureSort_p47,1286
typedef struct fcode_feature_array_cell50,1332
   long size;52,1374
   FCodeFeatureSort_p array;53,1388
}FCodeFeatureArrayCell, *FCodeFeatureArray_p;FCodeFeatureArray_p54,1417
#define FCodeFeatureArrayCellAlloc(63,1690
#define FCodeFeatureArrayCellFree(65,1803

include/che_fifo.h,24
#define CHE_FIFO26,560

include/che_funweights.h,946
#define CHE_FUNWEIGHTS27,645
typedef struct funweightparamcell40,955
   OCB_p        ocb;43,1035
   ClauseSet_p  axioms;44,1056
   ProofState_p proofstate;45,1080
   double max_term_multiplier;47,1109
   double max_literal_multiplier;48,1140
   double pos_multiplier;49,1174
   long   vweight;50,1200
   long   fweight;53,1274
   long   cweight;54,1293
   long   pweight;55,1312
   long   conj_fweight;58,1382
   long   conj_cweight;59,1406
   long   conj_pweight;60,1430
   long default_level_penalty;63,1511
   double level_poly_const;65,1643
   double level_poly_lin;66,1671
   double level_poly_square;67,1697
   void   (*init_fun)init_fun70,1874
   PStack_p weight_stack;73,1977
   long   flimit;76,2048
   long   *fweights;fweights77,2066
   PDArray_p f_occur;81,2225
}FunWeightParamCell, *FunWeightParam_p;FunWeightParam_p83,2251
#define FunWeightParamCellAlloc(91,2517
#define FunWeightParamCellFree(93,2622

include/che_hcb.h,3954
#define CHE_HCB29,669
   NoACHandling,51,1211
   ACDiscardAll,52,1228
   ACKeepUnits,53,1245
   ACKeepOrientable54,1261
}ACHandlingType;ACHandlingType55,1281
typedef struct heuristic_parms_cell60,1360
   char                *heuristic_name;heuristic_name63,1433
   bool                prefer_initial_clauses;64,1473
   TermOrdering        ordertype;67,1548
   TOWeightGenMethod   to_weight_gen;68,1582
   TOPrecGenMethod     to_prec_gen;69,1620
   char*               to_pre_prec;70,1656
   char*               to_pre_weights;71,1692
   long                to_const_weight;72,1731
   bool                no_lit_cmp;73,1771
   LiteralSelectionFun selection_strategy;76,1857
   long                pos_lit_sel_min;77,1900
   long                pos_lit_sel_max;78,1941
   long                neg_lit_sel_min;79,1982
   long                neg_lit_sel_max;80,2023
   long                all_lit_sel_min;81,2064
   long                all_lit_sel_max;82,2105
   long                weight_sel_min;83,2146
   bool                select_on_proc_only;84,2185
   bool                inherit_paramod_lit;85,2229
   bool                inherit_goal_pm_lit;86,2273
   bool                inherit_conj_pm_lit;87,2317
   bool                enable_eq_factoring;90,2398
   bool                enable_neg_unit_paramod;91,2463
   bool                enable_given_forward_simpl;92,2531
   ParamodulationType  pm_type;94,2592
   ACHandlingType      ac_handling;96,2656
   bool                ac_res_aggressive;97,2692
   bool                forward_context_sr;99,2735
   bool                forward_context_sr_aggressive;100,2778
   bool                backward_context_sr;101,2832
   RewriteLevel        forward_demod;103,2877
   bool                prefer_general;104,2915
   bool                condensing;106,2955
   bool                condensing_aggressive;107,2992
   bool                er_varlit_destructive;109,3040
   bool                er_strong_destructive;110,3086
   bool                er_aggressive;111,3132
   SplitClassType      split_clauses;113,3171
   SplitType           split_method;114,3209
   bool                split_aggressive;115,3246
   bool                split_fresh_defs;116,3287
   char                rw_bw_index_type[rw_bw_index_type119,3354
   char                pm_from_index_type[pm_from_index_type120,3418
   char                pm_into_index_type[pm_into_index_type121,3484
   long                filter_limit;124,3578
   long                filter_copies_limit;125,3615
   long                reweight_limit;126,3659
   long long           delete_bad_limit;127,3698
   rlim_t              mem_limit;128,3739
   bool                watchlist_simplify;129,3773
   bool                use_tptp_sos;130,3816
   bool                presat_interreduction;131,3853
   bool                detsort_bw_rw;133,3900
   bool                detsort_tmpset;134,3938
}HeuristicParmsCell, *HeuristicParms_p;HeuristicParms_p135,3977
typedef struct hcb_cell144,4254
   PDArray_p       wfcb_list;150,4521
   int             wfcb_no;151,4551
   int             current_eval;155,4708
   PDArray_p       select_switch;161,4980
   long            select_count;162,5014
   Clause_p        (*hcb_select)hcb_select166,5155
   GenericExitFun  hcb_exit;173,5479
   void*           data;174,5508
}HCBCell, *HCB_p;HCB_p175,5533
#define HCB_DEFAULT_HEURISTIC 177,5552
#define DEFAULT_FILTER_LIMIT 178,5592
#define DEFAULT_FILTER_COPIES_LIMIT 179,5630
#define DEFAULT_REWEIGHT_INTERVAL 180,5675
#define DEFAULT_DELETE_BAD_LIMIT 181,5718
#define DEFAULT_RW_BW_INDEX_NAME 183,5761
#define DEFAULT_PM_FROM_INDEX_NAME 184,5800
#define DEFAULT_PM_INTO_INDEX_NAME 185,5841
typedef Clause_p (*ClauseSelectFun)ClauseSelectFun187,5883
#define HeuristicParmsCellAlloc(194,6173
#define HeuristicParmsCellFree(196,6272
#define HCBCellAlloc(204,6532
#define HCBCellFree(205,6593

include/che_hcbadmin.h,233
#define CHE_HCB_ADMIN26,597
typedef struct hcbadmincell35,866
   PStack_p names;37,896
   PStack_p hcb_set;38,915
}HCBAdminCell, *HCBAdmin_p;HCBAdmin_p39,936
#define HCBAdminCellAlloc(46,1189
#define HCBAdminCellFree(47,1265

include/che_heuristics.h,513
#define CHE_HEURISTICS26,600
   HEU_NO_HEURISTIC 40,1039
   HEU_AUTO_MODE,41,1064
   HEU_AUTO_MODE_CASC,42,1082
   HEU_AUTO_MODE_DEV,43,1105
   HEU_AUTO_SCHED0,44,1127
   HEU_AUTO_SCHED1,45,1147
   HEU_AUTO_SCHED2,46,1167
   HEU_AUTO_SCHED3,47,1187
   HEU_AUTO_SCHED448,1207
}Heuristic;Heuristic49,1226
typedef struct heuristic_assoc_cell51,1239
   Heuristic    heuristic;53,1277
   char*        name;54,1304
   HCBCreateFun heuristic_create;55,1326
}HeuristicAssocCell, HeuristicAssoc_p;56,1360

include/che_learning.h,971
#define CHE_LEARNING26,595
#define DEFAULT_POS_MULT 36,887
typedef struct tsmparamcell44,1230
   long           fweight;46,1260
   long           vweight;47,1287
   double         max_term_multiplier;48,1314
   double         max_literal_multiplier;49,1382
   double         pos_multiplier;50,1450
   bool           flat_clauses;51,1518
   double         learnweight;52,1553
   char*          kb;53,1584
   ProofState_p   state;54,1606
   long           sel_no;55,1631
   double         set_part;56,1657
   double         dist_part;57,1685
   IndexType      indextype;58,1714
   TSMType        tsmtype;59,1744
   long           depth;60,1771
   double         e_weights[e_weights61,1796
   double         eval_base;62,1852
   double         eval_scale;63,1881
   PatternSubst_p pat_subst;64,1911
   TSMAdmin_p     tsmadmin;65,1940
}TSMParamCell, *TSMParam_p;TSMParam_p66,1968
#define TSMParamCellAlloc(74,2222
#define TSMParamCellFree(76,2304

include/che_lifo.h,25
#define CHE_LFIFO26,569

include/che_litselection.h,565
#define CHE_LITSELECTION27,623
typedef void (*LiteralSelectionFun)LiteralSelectionFun36,928
typedef struct litsel_name_fun_assoc_cell38,994
   char*                name;40,1038
   LiteralSelectionFun  fun;41,1068
}LitSelNameFunAssocCell;LitSelNameFunAssocCell42,1097
typedef struct lit_eval_cell44,1123
   Eqn_p literal;46,1154
   bool  forbidden;47,1172
   bool  exclusive;48,1217
   int   w1;49,1281
   int   w2;50,1335
   int   w3;51,1348
}LitEvalCell, *LitEval_p;LitEval_p52,1361
typedef void LitWeightFun(54,1388
#define LitEvalInit(60,1667

include/che_normsubst.h,278
#define CLE_NORMSUBST27,608
typedef struct normsubstcell37,909
   NumTree_p used_ids;39,940
   NumTree_p norm_funs;40,963
   NumTree_p norm_vars;41,987
}NormSubstCell, *NormSubst_p;NormSubst_p42,1011
#define NormSubstCellAlloc(49,1266
#define NormSubstCellFree(50,1345

include/che_orientweight.h,474
#define CHE_ORIENTWEIGHT27,656
#define DEFAULT_MAX_MULT 35,936
typedef struct orientweightparamcell37,966
   OCB_p  ocb;39,1005
   double unorientable_literal_multiplier;40,1020
   double max_literal_multiplier;41,1063
   double pos_multiplier;42,1097
   long   vweight;43,1123
   long   fweight;44,1142
}OrientWeightParamCell, *OrientWeightParam_p;OrientWeightParam_p45,1161
#define OrientWeightParamCellAlloc(53,1433
#define OrientWeightParamCellFree(55,1547

include/che_patterns.h,28
#define CLE_PATTERNS26,580

include/che_prio_funs.h,88
#define CHE_PRIO_FUNS26,584
typedef EvalPriority (*ClausePrioFun)ClausePrioFun35,886

include/che_proofcontrol.h,623
#define CHE_PROOFCONTROL27,653
typedef struct proofcontrolcell39,1016
   OCB_p               ocb;41,1050
   HCB_p               hcb;42,1078
   WFCBAdmin_p         wfcbs;43,1106
   HCBAdmin_p          hcbs;44,1136
   bool                ac_handling_active;45,1165
   HeuristicParmsCell  heuristic_parms;46,1208
   FVIndexParmsCell    fvi_parms;47,1248
   SpecFeatureCell     problem_specs;48,1282
}ProofControlCell, *ProofControl_p;ProofControl_p49,1320
#define HCBARGUMENTS 51,1357
typedef HCB_p (*HCBCreateFun)HCBCreateFun54,1469
#define ProofControlCellAlloc(64,1811
#define ProofControlCellFree(66,1904

include/che_rawspecfeatures.h,409
#define RAWSPECFEATURES26,596
typedef struct raw_spec_feature_cell36,882
   long      sentence_no;38,921
   long long term_size;39,947
   int       sig_size;40,971
   int       pred_size;41,994
   int       predc_size;42,1018
   int       fun_size;43,1043
   int       func_size;44,1066
}RawSpecFeatureCell,RawSpecFeatureCell46,1113
}RawSpecFeatureCell, *RawSpecFeature_p;RawSpecFeature_p46,1113

include/che_refinedweight.h,469
#define CHE_REFINEDWEIGHT27,661
#define DEFAULT_MAX_MULT 35,942
typedef struct refinedweightparamcell37,972
   OCB_p  ocb;39,1012
   double max_term_multiplier;40,1027
   double max_literal_multiplier;41,1058
   double pos_multiplier;42,1092
   long   vweight;43,1118
   long   fweight;44,1137
}RefinedWeightParamCell, *RefinedWeightParam_p;RefinedWeightParam_p45,1156
#define RefinedWeightParamCellAlloc(53,1430
#define RefinedWeightParamCellFree(55,1547

include/che_simweight.h,311
#define CHE_SIMWEIGHT27,637
typedef struct simparamcell36,907
   double equal_weight;38,937
   double var_var_clash;39,961
   double var_term_clash;40,986
   double term_term_clash;41,1012
}SimParamCell, *SimParam_p;SimParam_p42,1039
#define SimParamCellAlloc(50,1293
#define SimParamCellFree(52,1380

include/che_to_autoselect.h,476
#define CHE_TO_AUTOSELECT27,626
typedef struct order_parms_cell41,1183
   TermOrdering      ordertype;43,1217
   TOWeightGenMethod to_weight_gen;44,1249
   TOPrecGenMethod   to_prec_gen;45,1285
   long              to_const_weight;46,1319
   bool              no_lit_cmp;47,1357
}OrderParmsCell, *OrderParms_p;OrderParms_p48,1390
typedef double (*OrderEvaluationFun)OrderEvaluationFun50,1423
#define OrderParmsCellAlloc(58,1751
#define OrderParmsCellFree(60,1838

include/che_to_precgen.h,717
#define CHE_TO_PRECGEN26,598
   PNoMethod 36,898
   PUnaryFirst,37,936
   PUnaryFirstFreq,38,978
   PArity,39,1024
   PInvArity,40,1068
   PConstMax,41,1120
   PInvArConstMin,43,1211
   PByFrequency,45,1297
   PByInvFrequency,46,1359
   PByInvConjFrequency,47,1423
   PByInvFreqConjMax,49,1540
   PByInvFreqConjMin,51,1652
   PByInvFreqConstMin,53,1765
   PByInvFreqHack,55,1858
   PArrayOpt,58,2027
   POrientAxioms,61,2196
   PMinMethod 62,2244
   PMinMethod = PUnaryFirst,62,2244
   PMaxMethod 63,2273
   PMaxMethod = POrientAxioms63,2273
}TOPrecGenMethod;TOPrecGenMethod64,2303
#define FREQ_SEMI_INFTY 71,2546
#define TOGetPrecGenName(77,2714
#define TOGenerateDefaultPrecedence(81,2830

include/che_to_weightgen.h,1112
#define CHE_TO_WEIGHTGEN26,598
   WNoMethod 39,903
   WSelectMaximal,40,943
   WArityWeight,42,1054
   WArityMax0,43,1109
   WModArityWeight,44,1180
   WModArityMax0,45,1249
   WAritySqWeight,47,1364
   WAritySqMax0,48,1422
   WInvArityWeight,50,1527
   WInvArityMax0,51,1591
   WInvAritySqWeight,53,1702
   WInvAritySqMax0,54,1770
   WPrecedence,56,1885
   WPrecedenceInv,57,1939
   WPrecRank5,58,1993
   WPrecRank10,59,2025
   WPrecRank20,60,2058
   WFrequency,61,2091
   WInvFrequency,62,2146
   WFrequencyRank,63,2211
   WInvFrequencyRank,65,2326
   WInvConjFrequencyRank,67,2450
   WFrequencyRankSq,70,2612
   WInvFrequencyRankSq,71,2666
   WInvModFreqRank,72,2704
   WInvModFreqRankMax0,75,2886
   WConstantWeight,76,2957
   WMinMethod 77,3003
   WMinMethod = WSelectMaximal,77,3003
   WMaxMethod 78,3035
   WMaxMethod = WConstantWeight 78,3035
}TOWeightGenMethod;TOWeightGenMethod79,3093
#define WConstNoSpecialWeight 83,3189
#define WConstNoWeight 84,3222
#define W_TO_BASEWEIGHT 88,3296
#define TOGetWeightGenName(98,3582
#define TOGenerateDefaultWeights(103,3716

include/che_varweights.h,902
#define CHE_VARWEIGHTS26,613
typedef struct varweightparamcell36,928
   OCB_p  ocb;38,964
   double max_term_multiplier;39,979
   double max_literal_multiplier;40,1010
   double pos_multiplier;41,1044
   double conjecture_multiplier;42,1070
   double hypothesis_multiplier;43,1103
   double sig_size_multiplier;44,1136
   double proof_size_multiplier;45,1167
   double proof_depth_multiplier;46,1200
   double term_weight_multiplier;47,1234
   double term_depth_multiplier;48,1268
   double weight_multiplier;49,1301
   long   vlweight;50,1330
   long   vweight;51,1350
   long   fweight;52,1369
   long   nvweight;53,1388
   long   nfweight;54,1408
   long   cweight;55,1428
   long   pweight;56,1447
   long   stagger_limit;57,1466
}VarWeightParamCell, *VarWeightParam_p;VarWeightParam_p58,1491
#define VarWeightParamCellAlloc(66,1757
#define VarWeightParamCellFree(68,1862

include/che_wfcb.h,429
#define CHE_WFCB55,1681
typedef double (*ClauseEvalFun)ClauseEvalFun69,2067
typedef struct wfcb_cell72,2134
   ClauseEvalFun     wfcb_eval;74,2161
   GenericExitFun    wfcb_exit;75,2232
   ClausePrioFun     wfcb_priority;77,2321
   void*             data;78,2384
}WFCBCell, *WFCB_p;WFCB_p81,2526
typedef WFCB_p (*WeightFunParseFun)WeightFunParseFun83,2547
#define WFCBCellAlloc(91,2862
#define WFCBCellFree(92,2926

include/che_wfcbadmin.h,279
#define CHE_WFCB_ADMIN26,606
typedef struct wfcbadmincell43,1069
   PStack_p names;45,1100
   PStack_p wfcb_set;46,1119
   long     anon_counter;47,1141
}WFCBAdminCell, *WFCBAdmin_p;WFCBAdmin_p48,1167
#define WFCBAdminCellAlloc(55,1422
#define WFCBAdminCellFree(56,1501

include/cio_basicparser.h,149
#define CIO_BASICPARSER27,647
   SNNoNumber,39,987
   SNInteger,40,1002
   SNRational,41,1016
   SNFloat42,1031
}StrNumType;StrNumType43,1042

include/cio_commandline.h,685
#define CIO_COMMANDLINE39,1169
   NoArg,52,1491
   OptArg,53,1501
   ReqArg54,1512
}OptArgType;OptArgType55,1522
typedef struct optcell57,1536
   int         option_code;59,1561
   char        shortopt;60,1590
   char*       longopt;61,1649
   OptArgType  type;62,1706
   char*       arg_default;63,1762
   char*       desc;65,1853
}OptCell, *Opt_p;Opt_p66,1925
typedef struct clstatecell69,1945
   int     sc_opt_c;71,1974
   int     argi;73,2074
   int     argsize;74,2128
   int     argc;75,2192
   char**  argv;76,2249
}CLStateCell, *CLState_p;CLState_p78,2352
#define CLStateCellAlloc(84,2602
#define CLStateCellFree(85,2675
#define FORMAT_WIDTH 88,2750

include/cio_fileops.h,63
#define CIO_FILEOPS26,565
#define FileNameIsAbsolute(50,1373

include/cio_filevars.h,233
#define CIO_FILEVARS26,601
typedef struct filevarscell37,931
   PStack_p  names;39,961
   StrTree_p vars;40,1018
}FileVarsCell, *FileVars_p;FileVars_p41,1073
#define FileVarsCellAlloc(50,1328
#define FileVarsCellFree(51,1404

include/cio_initio.h,26
#define CIO_INITIO27,627

include/cio_multiplexer.h,373
#define CIO_MULTIPLEXER25,564
typedef struct tcp_channel_cell36,841
   int             sock;38,875
   PQueue_p        in;39,900
   PQueue_p        out;40,926
}TCPChannelCell, *TCPChannel_p;TCPChannel_p41,953
#define TCPChannelCellAlloc(60,1391
#define TCPChannelCellFree(61,1476
#define       TCPChannelHasOutMsg(66,1692
#define       TCPChannelGetInMsg(68,1820

include/cio_network.h,440
#define CIO_NETWORK27,693
   NWIncomplete 44,1113
   NWError 45,1135
   NWConnClosed 46,1157
   NWSuccess 47,1179
}MsgStatus;MsgStatus48,1200
typedef struct tcp_msg_cell52,1237
   DStr_p content;54,1267
   int len;56,1410
   int transmission_count;57,1456
   char len_buf[len_buf58,1529
}TCPMsgCell, *TCPMsg_p;TCPMsg_p59,1564
#define TCPMsgCellAlloc(68,1815
#define TCPMsgCellFree(69,1888
#define TCP_MSG_COMPLETE(71,1953

include/cio_output.h,84
#define CIO_OUTPUT28,700
#define OUTPRINT(38,990
#define      InitOutput(50,1384

include/cio_scanner.h,3318
#define CIO_SCANNER26,599
typedef unsigned long long TokenType;47,1350
#define NoToken 49,1389
#define WhiteSpace 50,1415
#define Comment 51,1449
#define Ident 52,1486
#define Idnum 53,1520
#define SemIdent 54,1552
#define String 55,1584
#define SQString 56,1619
#define PosInt 57,1652
#define OpenBracket 58,1687
#define CloseBracket 59,1720
#define OpenCurly 60,1758
#define CloseCurly 61,1797
#define OpenSquare 62,1833
#define CloseSquare 63,1870
#define LesserSign 64,1907
#define GreaterSign 65,1945
#define EqualSign 66,1982
#define NegEqualSign 67,2020
#define TildeSign 68,2056
#define Exclamation 69,2095
#define AllQuantor 70,2131
#define QuestionMark 71,2167
#define ExistQuantor 72,2205
#define Comma 73,2242
#define Semicolon 74,2281
#define Colon 75,2313
#define Hyphen 76,2349
#define Plus 77,2381
#define Mult 78,2414
#define Fullstop 79,2445
#define Dollar 80,2476
#define Slash 81,2511
#define Pipe 82,2544
#define FOFOr 83,2576
#define Ampersand 84,2605
#define FOFAnd 85,2636
#define FOFLRImpl 86,2670
#define FOFRLImpl 87,2706
#define FOFEquiv 88,2742
#define FOFXor 89,2778
#define FOFNand 90,2813
#define FOFNor 91,2846
#define SkipToken 94,2882
#define Identifier 95,2927
#define Name 96,2965
#define FOFBinOp 97,3009
#define FOFAssocOp 98,3097
   LOPFormat,107,3244
   TPTPFormat,108,3258
   TSTPFormat109,3273
}IOFormat;IOFormat110,3287
typedef struct tokenrepcell113,3300
   TokenType key;115,3330
   char*     rep;116,3348
}TokenRepCell, *TokenRep_p;TokenRep_p117,3366
typedef struct tokencell120,3396
   TokenType     tok;122,3423
   DStr_p        literal;123,3497
   unsigned long numval;124,3571
   DStr_p        comment;125,3645
   bool          skipped;126,3719
   DStr_p        source;127,3793
   StreamType    stream_type;128,3870
   long          line;129,3922
   long          column;130,3996
}TokenCell, *Token_p;Token_p132,4074
#define MAXTOKENLOOKAHEAD 134,4097
typedef struct scannercell136,4126
   Stream_p    source;138,4155
   DStr_p      default_dir;139,4216
   IOFormat    format;140,4281
   DStr_p      accu;141,4304
   bool        ignore_comments;142,4376
   char*       include_key;146,4624
   TokenCell   tok_sequence[tok_sequence147,4689
   int         current;148,4760
   char*       include_pos;149,4831
}ScannerCell, *Scanner_p;Scanner_p150,4904
#define TokenCellAlloc(157,5159
#define TokenCellFree(158,5231
#define ScannerCellAlloc(159,5295
#define ScannerCellFree(160,5371
#define  Source(162,5438
#define  SourceType(163,5499
#define  LookChar(164,5565
#define  CurrChar(165,5638
#define  CurrLine(166,5705
#define  CurrColumn(167,5772
#define  NextChar(168,5841
#define  ScannerSetFormat(170,5909
#define  ScannerGetFormat(171,5977
#define  ScannerGetDefaultDir(173,6040
#define isstartidchar(175,6113
#define isidchar(176,6169
#define ischar(177,6225
#define isstartcomment(178,6264
#define TOKENREALPOS(189,6660
#define AktToken(190,6714
#define AktTokenType(191,6774
#define LookToken(192,6819
#define TestInpTok(199,7034
#define TestInpId(200,7094
#define TestInpIdnum(201,7152
#define TestInpNoSkip(202,7213
#define TestInpTokNoSkip(203,7270
#define AcceptInpTok(213,7574
#define AcceptInpTokNoSkip(215,7678
#define AcceptInpId(218,7827

include/cio_signals.h,27
#define CCO_SIGNALS27,668

include/cio_simplestuff.h,31
#define CIO_SIMPLESTUFF26,588

include/cio_streams.h,806
#define CIO_STREAMS29,757
#define MAXLOOKAHEAD 38,1051
typedef char* StreamType;46,1289
typedef struct streamcell55,1575
   struct streamcell* next;57,1603
   DStr_p             source;58,1631
   StreamType         stream_type;59,1661
   long               string_pos;61,1748
   FILE*              file;62,1782
   bool               eof_seen;63,1810
   long               line;64,1842
   long               column;65,1870
   int                buffer[buffer66,1900
   int                current;67,1944
}StreamCell, *Stream_p, **Inpstack_p;Inpstack_p68,1975
#define StreamCellAlloc(81,2424
#define StreamCellFree(82,2494
#define  STREAMREALPOS(87,2674
#define  StreamLookChar(89,2726
#define  StreamCurrChar(92,2867
#define  StreamCurrLine(93,2937
#define  StreamCurrColumn(94,2988

include/cio_tempfile.h,28
#define CIO_TEMPFILE26,579

include/clb_avlgeneric.h,113
#define CLB_AVLGENERIC30,846
#define AVL_TRAVERSE_DECLARATION(57,1710
#define AVL_TRAVERSE_DEFINITION(92,2642

include/clb_ddarrays.h,369
#define CLB_DDARRAYS26,623
typedef struct ddarraycell35,894
   long   size;37,923
   long   grow;38,939
   double *array;array39,955
}DDArrayCell, *DDArray_p;DDArray_p40,973
#define DDArrayCellAlloc(47,1225
#define DDArrayCellFree(48,1298
#define   DDArrayAssign(57,1582
#define   DDArrayElement(60,1683
static __inline__ double* DDArrayElementRef(89,2683

include/clb_defines.h,1063
#define CLB_DEFINES26,587
   false 50,1099
   true 51,1113
}bool;bool52,1125
#define CPPCAST(54,1133
#define CPPCAST(59,1193
typedef union int_or_p67,1335
   long i_val;69,1360
   void *p_val;p_val70,1375
}IntOrP;IntOrP71,1391
#define INTORP_MEM 74,1430
#define LONG_MEM 75,1451
#define INTORP_MEM 77,1476
#define LONG_MEM 78,1510
#define NULL 86,1607
#define NULL 88,1637
#define VOLATILE 97,1865
#define VOLATILE99,1897
typedef void (*GenericExitFun)GenericExitFun106,2039
typedef int (*ComparisonFunctionType)ComparisonFunctionType110,2142
typedef unsigned long ulong_c;112,2208
typedef ptrdiff_t ptr_int;121,2589
#undef MAX131,2920
#define MAX(133,2938
#undef MIN136,2985
#define MIN(138,3003
#undef ABS141,3050
#define ABS(143,3068
#undef XOR146,3117
#define XOR(148,3135
#undef EQUIV151,3197
#define EQUIV(153,3217
#define SWAP(155,3268
#define KILO 160,3374
#define MEGA 161,3392
#define WRITE_STR(165,3446
#define TSTPOUT(169,3526
#define TSTPOUTFD(170,3592
#define TSTPOUT(174,3705
#define TSTPOUTFD(175,3732

include/clb_dstacks.h,400
#define CLB_DSTACKS26,593
typedef int DStackPointer;37,893
typedef struct dstackcell39,921
   int           size;41,949
   DStackPointer current;42,1004
   double        *stack;stack43,1078
}DStackCell, *DStack_p;DStack_p44,1121
#define DSTACK_DEFAULT_SIZE 51,1370
#define DStackCellAlloc(56,1502
#define DStackCellFree(57,1572
#define  DStackEmpty(61,1709
#define  DStackGetSP(66,1850

include/clb_dstrings.h,397
#define CLB_DSTRINGS36,1211
typedef struct dstrcell44,1481
   char* string;46,1507
   long  len;47,1524
   long  mem;48,1538
   long  refs;49,1552
}DStrCell, *DStr_p;DStr_p50,1567
#define DSTRGROW 52,1588
#define DStrCellAlloc(60,1856
#define DStrCellFree(61,1920
#define DStrAppendDStr(72,2339
#define DStrLastChar(75,2467
#define DStrGetRef(85,2855
#define DStrReleaseRef(86,2927

include/clb_error.h,554
#define CLB_ERROR29,703
#define getrusage(39,870
   NO_ERROR 50,1172
   NO_ERROR = EXIT_SUCCESS,50,1172
   PROOF_FOUND 51,1200
   PROOF_FOUND = EXIT_SUCCESS,51,1200
   SATISFIABLE,52,1231
   OUT_OF_MEMORY,53,1247
   SYNTAX_ERROR,54,1265
   USAGE_ERROR,55,1282
   FILE_ERROR,56,1298
   SYS_ERROR,57,1313
   CPU_LIMIT_ERROR,58,1327
   RESOURCE_OUT,59,1347
   INCOMPLETE_PROOFSTATE,60,1364
   OTHER_ERROR,61,1390
   INPUT_SEMANTIC_ERROR62,1406
}ErrorCodes;ErrorCodes63,1430
#define MAX_ERRMSG_ADD 69,1667
#define MAX_ERRMSG_LEN 70,1696

include/clb_fixdarrays.h,281
#define CLB_FIXDARRAYS27,632
typedef struct fixd_array_cell36,905
   long *array;array38,938
   long size;39,954
}FixedDArrayCell, *FixedDArray_p;FixedDArray_p40,968
#define FixedDArrayCellAlloc(47,1227
#define FixedDArrayCellFree(48,1315
#define FixedDArraySize(53,1485

include/clb_floattrees.h,428
#define CLB_FLOATTREES27,683
typedef struct floattreecell52,1590
   double               key;54,1621
   IntOrP               val1;55,1650
   IntOrP               val2;56,1680
   struct floattreecell *lson;lson57,1710
   struct floattreecell *rson;rson58,1741
}FloatTreeCell, *FloatTree_p;FloatTree_p59,1772
#define FloatTreeCellAlloc(62,1804
#define FloatTreeCellFree(63,1883
#define FloatTreeTraverseExit(76,2490

include/clb_intmap.h,1233
#define CLB_INTMAP28,711
   IMEmpty,41,1048
   IMSingle,42,1060
   IMArray,43,1073
   IMTree44,1085
}IntMapType;IntMapType45,1095
#define MAX_TREE_DENSITY 47,1109
#define MIN_TREE_DENSITY 48,1136
#define IM_ARRAY_SIZE 49,1163
typedef struct intmap_cell57,1550
   IntMapType type;59,1579
   long entry_no;60,1599
   long min_key;64,1857
   long max_key;68,2108
      void*        value;74,2373
      PDRangeArr_p array;75,2420
      NumTree_p    tree;76,2467
   }values;values77,2514
}IntMapCell, *IntMap_p;IntMap_p78,2526
typedef struct intmap_iter_cell82,2553
   IntMap_p map;84,2587
   long     lower_key;85,2604
   long     upper_key;86,2627
      bool      seen;89,2664
      long      current;90,2710
      PStack_p  tree_iter;91,2756
   }admin_data;admin_data92,2800
}IntMapIterCell, *IntMapIter_p;IntMapIter_p93,2819
typedef long (*IntMapFreeFunc)IntMapFreeFunc96,2853
#define IntMapCellAlloc(102,3126
#define IntMapCellFree(103,3196
#define IntMapIterCellAlloc(114,3524
#define IntMapIterCellFree(115,3606
#define INTMAPCELL_MEM 118,3708
#define INTMAPCELL_MEM 120,3740
#define IntMapDStorage(123,3791
#define IntMapStorage(128,4039
static __inline__ void* IntMapIterNext(158,4918

include/clb_memory.h,872
#define CLB_MEMORY28,827
typedef struct memcell43,1219
   struct memcell* next;45,1244
   unsigned long   test;47,1284
}MemCell, *Mem_p;Mem_p49,1316
#define MEM_ARR_SIZE 55,1558
#define MEM_FREE_PATTERN 56,1584
#define MEM_RSET_PATTERN 57,1620
#define MEMSIZE(73,2204
#define MEMSIZE(75,2301
#define SizeFree(81,2398
#define SizeMalloc(82,2449
#define ENSURE_NULL(83,2491
#define SizeFree(85,2536
#define SizeMalloc(86,2576
#define ENSURE_NULL(87,2618
#define SizeFree(93,2707
#define SizeMalloc(94,2772
#define ENSURE_NULL(95,2822
#define SizeFree(97,2867
#define SizeMalloc(98,2922
#define ENSURE_NULL(99,2972
#define FREE(109,3246
#define IntArrayFree(112,3332
#undef FREE127,3810
#define FREE(128,3822
#undef FREE132,3928
#define FREE(133,3940
static __inline__ void* SizeMallocReal(163,5100
static __inline__ void SizeFreeReal(216,6580

include/clb_newmem.h,546
#define CLB_NEWMEM29,907
typedef struct memcell40,1242
   struct memcell* next;42,1267
   unsigned long   test;44,1307
}MemCell, *Mem_p;Mem_p46,1339
#define MEM_ARR_SIZE 52,1581
#define MEM_ALIGN 53,1611
#define MEM_CHUNKLIMIT 54,1639
#define MEM_MULTIPLIER 56,1762
#define MEM_FREE_PATTERN 57,1793
#define MEM_RSET_PATTERN 58,1829
#define SizeFree(67,2009
#define SizeMalloc(68,2074
#define SizeFree(70,2126
#define SizeMalloc(71,2181
#define FREE(79,2408
#define IntArrayFree(82,2483
#undef FREE96,2927
#define FREE(97,2939

include/clb_numtrees.h,501
#define CLB_NUMTREES27,660
typedef struct numtreecell52,1559
   long               key;54,1588
   IntOrP             val1;55,1615
   IntOrP             val2;56,1643
   struct numtreecell *lson;lson57,1671
   struct numtreecell *rson;rson58,1700
}NumTreeCell, *NumTree_p;NumTree_p59,1729
#define NumTreeCellAlloc(62,1757
#define NumTreeCellFree(63,1830
#define NUMTREECELL_MEM 66,1933
#define NUMTREECELL_MEM 68,1966
#define   NumTreeMaxKey(83,2609
#define NumTreeTraverseExit(88,2779

include/clb_numxtrees.h,449
#define CLB_NUMXTREES27,678
#define NUMXTREEVALUES 44,1206
typedef struct numxtreecell53,1603
   long                key;55,1633
   IntOrP              vals[vals56,1661
   struct numxtreecell *lson;lson57,1706
   struct numxtreecell *rson;rson58,1736
}NumXTreeCell, *NumXTree_p;NumXTree_p59,1766
#define NumXTreeCellAlloc(62,1796
#define NumXTreeCellFree(63,1872
#define   NumXTreeMaxKey(76,2486
#define NumXTreeTraverseExit(81,2662

include/clb_objtrees.h,108
#define CLB_OBJTREES29,784
typedef void (*ObjDelFun)ObjDelFun37,1054
typedef PTree_p PObjTree_p;39,1094

include/clb_os_wrapper.h,659
#define CLB_OS_WRAPPERS25,588
   RLimFailed,41,968
   RLimReduced,42,983
   RLimSuccess43,999
}RLimResult;RLimResult44,1014
#define GETTIME 52,1278
#define GETTIME 54,1312
#define PERF_CTR_DEFINE(58,1376
#define PERF_CTR_DECL(59,1450
#define PERF_CTR_RESET(60,1534
#define PERF_CTR_ENTRY(61,1574
#define PERF_CTR_EXIT(62,1630
#define PERF_CTR_PRINT(63,1694
#define PERF_CTR_DEFINE(65,1809
#define PERF_CTR_DECL(66,1839
#define PERF_CTR_RESET(67,1867
#define PERF_CTR_ENTRY(68,1896
#define PERF_CTR_EXIT(69,1925
#define PERF_CTR_PRINT(70,1953
#define    GetMSecTime(81,2330
#define    GetSecTime(82,2376
#define    GetSecTimeMod(83,2424

include/clb_partial_orderings.h,321
#define CLB_PARTIAL_ORDERINGS26,623
   to_unknown 39,975
   to_uncomparable 40,994
   to_equal 41,1018
   to_greater 42,1035
   to_lesser 43,1054
   to_notgteq,44,1072
   to_notleeq45,1125
}CompareResult;CompareResult46,1139
#define Q_TO_PART(59,1503
static __inline__ CompareResult POInverseRelation(84,2226

include/clb_pdarrays.h,707
#define CLB_PDARRAYS33,977
typedef struct pdarraycell42,1248
   bool   integer;44,1277
   long   size;45,1297
   long   grow;46,1313
   IntOrP *array;array47,1329
}PDArrayCell, *PDArray_p;PDArray_p48,1347
#define GROW_EXPONENTIAL 50,1375
#define PDArrayCellAlloc(56,1626
#define PDArrayCellFree(57,1699
#define PDARRAYCELL_MEM 60,1795
#define PDARRAYCELL_MEM 62,1828
#define PDArrayStorage(64,1880
#define   PDArraySize(69,2107
#define   PDArrayAssign(79,2445
#define   PDArrayAssignP(81,2545
#define   PDArrayAssignInt(83,2652
#define   PDArrayElement(86,2762
#define   PDArrayElementP(88,2839
#define   PDArrayElementInt(90,2925
static __inline__ IntOrP* PDArrayElementRef(123,4192

include/clb_pdrangearrays.h,834
#define CLB_PDRANGEARRAYS33,953
typedef struct pdrangearrcell42,1231
   bool   integer;44,1263
   long   offset;45,1283
   long   size;47,1390
   long   grow;48,1406
   IntOrP *array;array49,1422
}PDRangeArrCell, *PDRangeArr_p;PDRangeArr_p50,1440
#define PDRangeArrCellAlloc(57,1698
#define PDRangeArrCellFree(58,1780
#define PDRANGEARRELL_MEM 61,1882
#define PDRANGEARR_MEM 63,1917
#define PDRangeArrStorage(65,1971
#define   PDRangeArrAssign(78,2538
#define   PDRangeArrAssignP(80,2643
#define   PDRangeArrAssignInt(82,2756
#define   PDRangeArrElement(85,2872
#define   PDRangeArrElementP(87,2955
#define   PDRangeArrElementInt(89,3047
#define   PDRangeArrLowKey(92,3142
#define   PDRangeArrLimitKey(93,3194
#define   PDRangeArrIndexIsCovered(95,3263
static __inline__ IntOrP* PDRangeArrElementRef(121,4255

include/clb_plist.h,285
#define CLB_PLIST26,579
typedef struct plistcell36,848
   IntOrP key;38,875
   struct plistcell *pred;pred39,890
   struct plistcell *succ;succ40,917
}PListCell, *PList_p;PList_p41,944
#define PListCellAlloc(47,1190
#define PListCellFree(48,1257
#define PListEmpty(52,1387

include/clb_pqueue.h,1281
#define CLB_PQUEUE26,561
#define PQUEUE_DEFAULT_SIZE 35,830
typedef struct pqueuecell39,1020
   int    size;41,1048
   long   head;42,1094
   long   tail;43,1153
   IntOrP *queue;queue44,1215
}PQueueCell, *PQueue_p;PQueue_p45,1246
#define PQueueCellAlloc(52,1495
#define PQueueCellFree(53,1565
#define  PQueueEmpty(58,1775
#define  PQueueGetNextInt(68,2225
#define  PQueueGetNextP(69,2287
#define  PQueueGetLastInt(72,2408
#define  PQueueGetLastP(73,2470
#define  PQueueLookInt(76,2588
#define  PQueueLookP(77,2644
#define  PQueueLookLastInt(79,2759
#define  PQueueLookLastP(80,2823
#define  PQueueElementInt(84,2984
#define  PQueueElementP(85,3059
static __inline__ void pqueue_store(107,3756
static __inline__ void pqueue_bury(132,4376
static __inline__ PQueue_p PQueueAlloc(156,4911
static __inline__ void PQueueFree(181,5463
static __inline__ void PQueueReset(199,5870
static __inline__ void PQueueStoreInt(218,6243
static __inline__ void PQueueStoreP(238,6662
static __inline__ void PQueueBuryInt(258,7099
static __inline__ void PQueueBuryP(278,7528
static __inline__ IntOrP PQueueGetNext(299,7982
static __inline__ IntOrP PQueueGetLast(325,8555
static __inline__ IntOrP PQueueLook(351,9096
static __inline__ IntOrP PQueueLookLast(373,9567

include/clb_properties.h,249
#define CLB_PROPERTIES29,807
#define SetProp(45,1283
#define DelProp(46,1359
#define FlipProp(47,1436
#define AssignProp(48,1513
#define QueryProp(51,1645
#define IsAnyPropSet(54,1761
#define GiveProps(58,1938
#define PropsAreEquiv(62,2037

include/clb_pstacks.h,1400
#define CLB_PSTACKS26,600
typedef int PStackPointer;37,939
typedef struct pstackcell39,967
   int           size;41,995
   PStackPointer current;42,1050
   IntOrP        *stack;stack43,1124
}PStackCell, *PStack_p;PStack_p44,1167
#define PSTACK_DEFAULT_SIZE 47,1193
#define PStackCellAlloc(52,1329
#define PStackCellFree(53,1399
#define PSTACK_AVG_MEM 56,1501
#define PSTACK_AVG_MEM 58,1533
#define  PStackBaseAddress(61,1604
#define  PStackEmpty(66,1870
#define  PStackGetSP(71,2114
#define  PStackGetTopSP(72,2161
#define  PStackPopInt(75,2268
#define  PStackPopP(76,2322
#define  PStackTopInt(80,2492
#define  PStackTopP(81,2546
#define  PStackBelowTopInt(84,2699
#define  PStackBelowTopP(85,2763
#define  PStackElementInt(89,2906
#define  PStackElementP(90,2976
static __inline__ void push(122,4183
static __inline__ PStack_p PStackAlloc(154,5019
static __inline__ PStack_p PStackVarAlloc(179,5602
static __inline__ void  PStackFree(204,6135
static __inline__ PStack_p PStackCopy(228,6743
static __inline__ void PStackReset(253,7264
static __inline__ void PStackPushInt(270,7628
static __inline__ void PStackPushP(290,8039
static __inline__ IntOrP PStackPop(311,8455
static __inline__ void PStackDiscardTop(332,8909
static __inline__ IntOrP PStackTop(352,9310
static __inline__ IntOrP PStackBelowTop(374,9763
static __inline__ IntOrP PStackElement(394,10177

include/clb_ptrees.h,499
#define CLB_PTREES33,949
typedef struct ptreecell53,1767
   struct ptreecell *lson;lson55,1794
   struct ptreecell *rson;rson56,1821
   void*            key;57,1848
}PTreeCell, *PTree_p;PTree_p58,1873
#define PTreeCellAlloc(66,2121
#define PTreeCellFree(67,2191
#define PTREE_CELL_MEM 70,2283
#define PTREE_CELL_MEM 72,2315
#define SLOW_PTR_CMP80,2604
#define PCmp(82,2645
#define PCmp(84,2689
#define PTreeTraverseExit(111,3816
AVL_TRAVERSE_DECLARATION(PTreeTraverseExit110,3775

include/clb_quadtrees.h,602
#define CLB_QUADTREES27,668
typedef struct quadkeycell37,997
   void*               p1;39,1026
   int                 i1;40,1053
   void*               p2;41,1080
   int                 i2;42,1107
}QuadKeyCell,QuadKey,*QuadKey_p;QuadKey_p43,1134
typedef struct quadtreecell47,1233
   QuadKey             key;49,1263
   IntOrP              val;50,1291
   struct quadtreecell *lson;lson51,1319
   struct quadtreecell *rson;rson52,1349
}QuadTreeCell, *QuadTree_p;QuadTree_p53,1379
#define QuadTreeCellAlloc(61,1633
#define QuadTreeCellFree(62,1712
#define QuadTreeTraverseExit(74,2308

include/clb_regmem.h,26
#define CLB_REGMEM31,930

include/clb_simple_stuff.h,303
#define CLB_SIMPLE_STUFF26,588
   double weight;39,941
   IntOrP object;40,959
}WeightedObjectCell, *WeightedObject_p;WeightedObject_p41,977
#define MAXINDENTSPACES 48,1242
#define WeightedObjectArrayAlloc(50,1270
#define WeightedObjectArrayFree(52,1371
#define WeightedObjectArraySort(57,1505

include/clb_stringtrees.h,410
#define CLB_STRINGTREES28,704
typedef struct strtreecell54,1691
   char               *key;key56,1720
   IntOrP             val1;57,1748
   IntOrP             val2;58,1776
   struct strtreecell *lson;lson59,1804
   struct strtreecell *rson;rson60,1833
}StrTreeCell, *StrTree_p;StrTree_p61,1862
#define StrTreeCellAlloc(64,1890
#define StrTreeCellFree(65,1963
#define StrTreeTraverseExit(77,2495

include/clb_sysdate.h,416
#define CLB_SYSDATE30,832
typedef long SysDate;42,1191
   DateEarlier 47,1234
   DateEqual 48,1255
   DateLater 49,1273
}DateRelation;DateRelation50,1290
#define      SysDateCreationTime(56,1529
#define      SysDateArmageddonTime(57,1567
#define      SysDateInc(58,1614
#define      SysDateMaximum(61,1798
#define      SysDateIsCreationDate(64,1934
static __inline__ DateRelation SysDateCompare(83,2438

include/clb_verbose.h,240
#define CLB_VERBOSE27,633
#define VERBOSE(44,1148
#define VERBOUT(45,1188
#define VERBOUTARG(47,1288
#define VERBOSE2(51,1413
#define VERBOUT2(52,1457
#define VERBOUTARG2(55,1560
#define VERBOSE10(59,1687
#define VERBOUT10(60,1733

include/cle_annotations.h,267
#define CLE_ANNOTATIONS27,620
#define ANNOTATION_DEFAULT_SIZE 58,1680
#define ANNOTATIONS_MERGE_ALL 59,1714
typedef NumTree_p Annotation_p;61,1750
#define      AnnotationValues(69,2090
#define      AnnotationCount(70,2147
#define      AnnotationLength(72,2236

include/cle_annoterms.h,580
#define CLE_ANNOTERMS26,583
typedef struct annotermcell35,886
   Term_p              term;37,916
   Annotation_p        annotation;38,986
}AnnoTermCell, *AnnoTerm_p;AnnoTerm_p39,1053
typedef struct annosetcell41,1082
   TB_p           terms;43,1111
   NumTree_p      set;44,1156
   PatternSubst_p subst;45,1227
   long           annotation_no;46,1296
}AnnoSetCell, *AnnoSet_p;AnnoSet_p47,1329
#define AnnoTermCellAlloc(54,1580
#define AnnoTermCellFree(55,1656
#define    AnnoTermFreeNoRef(60,1909
#define AnnoSetCellAlloc(67,2181
#define AnnoSetCellFree(68,2254

include/cle_classification.h,34
#define CLE_CLASSIFICATION26,611

include/cle_clauseenc.h,29
#define CLE_CLAUSEENC26,601

include/cle_examplerep.h,542
#define CLE_EXAMPLEREP27,638
typedef struct examplerepcell42,1210
   long       ident;44,1242
   char*      name;45,1263
   Features_p features;46,1283
}ExampleRepCell, *ExampleRep_p;ExampleRep_p47,1307
typedef struct examplesetcell52,1401
   long      count;54,1433
   NumTree_p ident_index;56,1513
   StrTree_p name_index;57,1539
}ExampleSetCell, *ExampleSet_p;ExampleSet_p58,1564
#define ExampleRepCellAlloc(65,1821
#define ExampleRepCellFree(66,1904
#define ExampleSetCellAlloc(72,2132
#define ExampleSetCellFree(73,2215

include/cle_flatannoterms.h,671
#define CLE_FLATANNOTERMS26,598
typedef struct flatannotermcell36,903
   Term_p                  term;38,937
   double                  eval;40,1023
   double                  eval_weight;41,1056
   long                    sources;47,1312
   struct flatannotermcell *next;next48,1348
}FlatAnnoTermCell, *FlatAnnoTerm_p;FlatAnnoTerm_p49,1382
typedef struct flatannosetcell51,1419
   NumTree_p      set;53,1452
}FlatAnnoSetCell, *FlatAnnoSet_p;FlatAnnoSet_p55,1534
#define FlatAnnoTermCellAlloc(64,1795
#define FlatAnnoTermCellFree(66,1893
#define         FlatAnnoTermFree(72,2080
#define FlatAnnoSetCellAlloc(74,2147
#define FlatAnnoSetCellFree(76,2242

include/cle_indexfunctions.h,1010
#define CLE_INDEXFUNCTIONS26,609
   IndexNoIndex 40,985
   IndexArity 41,1009
   IndexSymbol 42,1033
   IndexTop 43,1057
   IndexAltTop 44,1081
   IndexCSTop 45,1105
   IndexESTop 46,1129
   IndexIdentity 47,1153
   IndexEmpty 48,1177
}IndexType;IndexType49,1200
typedef struct indextermcell52,1214
   Term_p   term;54,1245
   PatternSubst_p subst;55,1313
   long           key;57,1398
}IndexTermCell, *IndexTerm_p;IndexTerm_p58,1456
typedef struct tsmindexcell71,1678
   long           ident;73,1708
   IndexType      type;74,1733
   int            depth;75,1757
   long           count;76,1782
   TB_p           bank;77,1807
   PatternSubst_p subst;78,1877
      PTree_p     t_index;81,1933
      NumTree_p   n_index;82,2002
   }              tree;83,2062
}TSMIndexCell, *TSMIndex_p;TSMIndex_p84,2089
#define IndexDynamicDepth 86,2118
#define IndexTermCellAlloc(95,2402
#define IndexTermCellFree(96,2484
#define TSMIndexCellAlloc(106,2796
#define TSMIndexCellFree(107,2875

include/cle_kbdesc.h,344
#define CLE_KB26,593
#define KB_VERSION 34,861
typedef struct kbdesccell36,891
   char         *version;version38,919
   double       neg_proportion;39,945
   long         fail_neg_examples;40,977
}KBDescCell, *KBDesc_p;KBDesc_p41,1012
#define KB_ANNOTATION_NO 44,1038
#define KBDescCellAlloc(51,1290
#define KBDescCellFree(52,1361

include/cle_kbinsert.h,28
#define CLE_KBINSERT26,587

include/cle_numfeatures.h,533
#define CHE_NUMFEATURES28,715
#define FEATURE_NUMBER 37,993
#define FEATURE_NUMBER 53,1555
typedef struct featurescell55,1582
   long      pred_max_arity;57,1612
   PDArray_p pred_distrib;58,1641
   long      func_max_arity;59,1668
   PDArray_p func_distrib;60,1697
   double    features[features61,1724
}FeaturesCell, *Features_p;Features_p62,1763
#define SEL_FEATURE_WEIGHTS 64,1792
#define SEL_PRED_WEIGHT 66,1927
#define SEL_FUNC_WEIGHT 67,1955
#define FeaturesCellAlloc(74,2208
#define FeaturesCellFree(75,2285

include/cle_patterns.h,764
#define CLE_PATTERNS27,640
#define NORM_ARITY_LIMIT 42,1264
#define NORM_SYMBOL_LIMIT 43,1325
#define NORM_VAR_INIT 45,1428
typedef struct patternsubstcell47,1466
   PDArray_p used_idents;49,1500
   PDArray_p fun_subst;50,1574
   long      used_vars;54,1750
   PDArray_p var_subst;55,1776
   PStack_p  backtrack;56,1834
   Sig_p     sig;57,1888
}PatternSubstCell, *PatternSubst_p;PatternSubst_p59,1973
#define DEFAULT_LITERAL_NO 66,2234
#define PATTERN_SEARCH_BRANCHLIMIT 67,2263
#define PatternNormCode(69,2301
#define PatternSubstCellAlloc(71,2382
#define PatternSubstCellFree(73,2480
#define PatternIdGetArity(83,2863
#define PatternIdGetIdent(84,2928
#define PatIdIsNormId(86,2990
#define PatEqnLTerm(91,3178
#define PatEqnRTerm(92,3252

include/cle_termtops.h,28
#define CLE_TERMTOPS26,595

include/cle_tsm.h,1493
#define CLE_TSM 26,558
   TSMTypeNoType,38,904
   TSMTypeFlat,39,922
   TSMTypeRecursive,40,938
   TSMTypeRecurrent,41,959
   TSMTypeRecurrentLocal42,980
}TSMType;TSMType43,1005
typedef struct tsmadmincell45,1016
   TSMType        tsmtype;47,1046
   TB_p           index_bank;48,1073
   IndexType      index_type;49,1143
   int            index_depth;50,1173
   double         limit;51,1204
   bool           local_limit;52,1229
   double         eval_limit;53,1260
   double         unmapped_eval;54,1332
   double         unmapped_weight;55,1365
   struct tsmcell *tsm;tsm56,1400
   struct tsmcell *emptytsm;emptytsm57,1424
   PStack_p       tsmstack;58,1453
   PStack_p       cachestack;59,1481
   PatternSubst_p subst;60,1511
}TSMAdminCell, *TSMAdmin_p;TSMAdmin_p61,1536
typedef struct tsmcell64,1566
   TSMAdmin_p admin;66,1593
   TSMIndex_p index;67,1614
   long       maxindex;68,1635
   PDArray_p  tsas;69,1659
}TSMCell, *TSM_p;TSM_p70,1679
typedef struct tsacell72,1698
   TSMAdmin_p admin;74,1723
   double eval_weight;75,1744
   double eval;76,1767
   int    arity;77,1783
   TSM_p  *arg_tsms;arg_tsms78,1800
}TSACell, *TSA_p;TSA_p79,1821
#define TSM_MAX_TERMTOP 82,1841
#define       GetTSMType(90,2121
#define       TSMEvalNormalize(92,2187
#define TSMAdminCellAlloc(108,2838
#define TSMAdminCellFree(109,2915
#define TSMCellAlloc(114,3078
#define TSMCellFree(115,3140
#define TSACellAlloc(122,3401
#define TSACellFree(123,3463

include/cle_tsmio.h,25
#define CLE_TSMIO26,584

include/cpr_dpll.h,363
#define CPR_DPLL26,563
typedef struct dpll_state_cell36,859
   DPLLFormula_p form;38,892
   PStack_p      assignment;39,915
   PStack_p      deactivated;42,1118
   PStack_p      unproc_units;44,1228
   AtomSet_p     open_atoms;45,1296
}DPLLStateCell, *DPLLState_p;DPLLState_p46,1361
#define DPLLStateCellAlloc(54,1617
#define DPLLStateCellFree(55,1696

include/cpr_dpllformula.h,568
#define CPR_DPLLFORMULA28,714
typedef struct atom_cell37,993
   long pos_occur;39,1020
   long neg_occur;40,1039
   PTree_p pos_active;41,1058
   PTree_p neg_active;42,1081
}AtomCell, *Atom_p;Atom_p43,1104
typedef struct dpllrep_cell45,1125
   PropSig_p sig;47,1155
   PStack_p  clauses;48,1173
   long      atom_no;49,1195
   Atom_p    atoms;50,1217
}DPLLFormulaCell, *DPLLFormula_p;DPLLFormula_p51,1237
#define DEFAULT_ATOM_NUMBER 54,1273
#define ATOM_GROWTH_FACTOR 55,1306
#define DPLLFormulaCellAlloc(62,1563
#define DPLLFormulaCellFree(63,1648

include/cpr_propclauses.h,496
#define CPR_PROPCLAUSES27,628
   DPLLOutNoFormat,39,943
   DPLLOutLOP,40,963
   DPLLOutDimacs41,978
}DPLLOutputFormat;DPLLOutputFormat42,995
typedef struct dpll_clause_cell44,1015
   unsigned long mem_size;46,1049
   unsigned long lit_no;47,1076
   unsigned long active_no;48,1101
   PLiteralCode  *literals;literals49,1129
}DPLLClauseCell, *DPLLClause_p;DPLLClause_p50,1157
#define DPLLClauseCellAlloc(59,1416
#define DPLLClauseCellFree(60,1498
#define DPLLClauseIsUnit(62,1582

include/cpr_propsig.h,368
#define CPR_PROPSIG28,711
typedef struct propsigcell38,1012
   PStack_p  enc_to_name;40,1041
   StrTree_p name_to_enc;41,1068
}PropSigCell, *PropSig_p;PropSig_p42,1094
typedef long PLiteralCode;45,1122
#define PropSigCellAlloc(52,1374
#define PropSigCellFree(53,1447
#define PLiteralNoLit 54,1524
#define PAtomP(55,1548
#define   PropSigAtomNumber(64,1835

include/cpr_varset.h,327
#define CPR_VARSET27,627
typedef struct atomset_cell35,896
   PLiteralCode        atom;37,926
   struct atomset_cell *prev;prev38,955
   struct atomset_cell *succ;succ39,985
}AtomSetCell, *AtomSet_p;AtomSet_p40,1015
#define AtomSetCellAlloc(47,1266
#define AtomSetCellFree(48,1339
#define      AtomSetEmpty(52,1491

include/cte_acterms.h,239
#define CTE_ACTERMS27,633
typedef struct actermopcell39,1050
   FunCode          f_code;41,1080
   PDArray_p        args;42,1140
}ACTermCell, *ACTerm_p;ACTerm_p43,1210
#define ACTermCellAlloc(50,1459
#define ACTermCellFree(51,1529

include/cte_fp_index.h,764
#define CTE_FP_INDEX28,707
typedef struct fp_index_cell50,1576
   IntMap_p             f_alternatives;52,1607
   long                 count;55,1746
   PObjTree_p           payload;56,1777
}FPTreeCell, *FPTree_p;FPTree_p57,1810
typedef void (*FPTreeFreeFun)FPTreeFreeFun60,1836
typedef struct subterm_index_cell65,1905
   FPTree_p        index;67,1941
   FPIndexFunction fp_fun;68,1967
   Sig_p           sig;69,1994
   FPTreeFreeFun   payload_free;70,2018
}FPIndexCell, *FPIndex_p;FPIndex_p71,2051
typedef void (*FPLeafPrintFun)FPLeafPrintFun73,2078
typedef void (*FPLeafPayloadPrint)FPLeafPayloadPrint75,2153
#define FPTreeCellAlloc(86,2521
#define FPTreeCellFree(87,2591
#define FPIndexCellAlloc(107,3273
#define FPIndexCellFree(108,3346

include/cte_functypes.h,297
#define CTE_FUNCTYPES27,619
   FSNone,41,1033
   FSIdentVar,42,1057
   FSIdentFreeFun,43,1137
   FSIdentInt,44,1217
   FSIdentFloat,45,1254
   FSIdentRational,46,1305
   FSIdentInterpreted,47,1350
   FSIdentObject 48,1430
}FuncSymbType;FuncSymbType49,1510
typedef long FunCode;59,1898

include/cte_idx_fp.h,259
#define CTE_IDX_FP29,793
typedef FunCode *IndexFP_p;IndexFP_p44,1251
typedef IndexFP_p (*FPIndexFunction)FPIndexFunction46,1280
#define MAX_PM_INDEX_NAME_LEN 55,1583
#define   BELOW_VAR 57,1617
#define   ANY_VAR 58,1644
#define   NOT_IN_TERM 59,1671

include/cte_match_mgu_1-1.h,62
#define CTE_MATCH_MGU_1_128,677
#define VerifyMatch(56,1489

include/cte_replace.h,154
#define CTE_REPLACE26,581
   RWNotRewritable 41,1002
   RWLimitedRewritable 42,1030
   RWAlwaysRewritable 43,1058
}RWResultType;RWResultType44,1086

include/cte_signature.h,2917
#define CTE_SIGNATURE27,671
   FPIgnoreProps 41,1044
   FPPredSymbol 42,1111
   FPFuncSymbol 43,1184
   FPFOFOp 45,1321
   FPSpecial 46,1392
   FPAssociative 47,1473
   FPCommutative 48,1547
   FPIsAC 49,1620
   FPIsAC         =   FPAssociative|FPAssociative49,1620
   FPIsAC         =   FPAssociative|FPCommutative,FPCommutative49,1620
   FPInterpreted 50,1671
   FPIsInteger 51,1729
   FPIsRational 52,1805
   FPIsFloat 53,1844
   FPIsObject 54,1898
   FPDistinctProp 56,2017
   FPDistinctProp =  FPIsObject 56,2017
   FPDistinctProp =  FPIsObject | FPIsInteger 56,2017
   FPDistinctProp =  FPIsObject | FPIsInteger | FPIsRational 56,2017
   FPDistinctProp =  FPIsObject | FPIsInteger | FPIsRational | FPIsFloat,56,2017
   FPOpFlag 57,2091
   FPClSplitDef 59,2214
   FPPseudoPred 61,2319
}FunctionProperties;FunctionProperties64,2506
typedef struct funccell71,2716
   char* name;74,2795
   int   arity;75,2810
   int   alpha_rank;76,2826
   FunctionProperties properties;78,2935
}FuncCell, *Func_p;Func_p79,2969
#define DEFAULT_SIGNATURE_SIZE 92,3474
#define DEFAULT_SIGNATURE_GROW 93,3508
typedef struct sigcell95,3542
   bool      alpha_ranks_valid;97,3567
   long      size;98,3636
   FunCode   f_count;99,3683
   FunCode   internal_symbols;100,3732
   Func_p    f_info;101,3807
   StrTree_p f_index;102,3846
   PStack_p  ac_axioms;103,3917
   FunCode   eqn_code;107,4128
   FunCode   neqn_code;108,4151
   FunCode   cnil_code;109,4175
   PDArray_p orn_codes;110,4199
   FunCode   not_code;116,4469
   FunCode   qex_code;117,4492
   FunCode   qall_code;118,4515
   FunCode   and_code;119,4539
   FunCode   or_code;120,4562
   FunCode   impl_code;121,4584
   FunCode   equiv_code;122,4608
   FunCode   nand_code;123,4633
   FunCode   nor_code;124,4657
   FunCode   bimpl_code;125,4680
   FunCode   xor_code;126,4705
   FunCode   answer_code;128,4780
   long      skolem_count;131,4887
   long      newpred_count;132,4914
   FunctionProperties distinct_props;134,5015
}SigCell, *Sig_p;Sig_p135,5053
#define SIG_TRUE_CODE 146,5346
#define SIG_FALSE_CODE 147,5371
#define SIG_NIL_CODE 148,5396
#define SIG_CONS_CODE 149,5421
#define FuncSetProp(153,5472
#define FuncDelProp(154,5528
#define FuncQueryProp(157,5634
#define FuncIsAnyPropSet(160,5741
#define SigSetFuncProp(164,5858
#define SigDelFuncProp(166,5952
#define SigQueryFuncProp(168,6046
#define SigIsAnyFuncPropSet(170,6144
#define SigCellAlloc(176,6376
#define SigCellFree(177,6437
#define SigExternalSymbols(182,6600
#define SigInterpreteNumbers(185,6684
#define SigIsFunConst(196,7152
#define SigIsSimpleAnswerPred(198,7292
static __inline__ int SigFindArity(254,9516
static __inline__ char*  SigFindName(277,10092
static __inline__ FunCode SigGetEqnCode(298,10581
static __inline__ FunCode SigGetOrCode(339,11460
static __inline__ FunCode SigGetCNilCode(365,11970

include/cte_simplesorts.h,422
#define CTE_SIMPLESORTS27,634
   STNoSort 41,1106
   STBool,42,1129
   STIndividuals,44,1232
   STInteger,45,1287
   STReal 46,1330
}SortType;SortType47,1363
typedef struct sort_table53,1505
   SortType  default_type;55,1533
   StrTree_p sort_index;58,1712
   PStack_p  back_index;59,1783
}SortTableCell, *SortTable_p;SortTable_p63,2018
#define SortTableCellAlloc(71,2274
#define SortTableCellFree(72,2356

include/cte_subst.h,248
#define CTE_SUBST29,735
typedef PStackCell SubstCell;39,1054
typedef PStack_p   Subst_p;40,1084
#define SubstAlloc(46,1336
#define SubstFree(47,1374
#define SubstDelete(49,1416
#define SubstDeleteSkolem(50,1479
#define SubstIsEmpty(51,1554

include/cte_termbanks.h,994
#define CTE_TERMBANKS38,1191
typedef struct tbcell48,1524
   unsigned long in_count;50,1548
   PDArray_p     ext_index;51,1622
   TermProperties garbage_state;64,2212
   Sig_p         sig;70,2464
   VarBank_p     vars;71,2518
   Term_p        true_term;72,2594
   Term_p        false_term;74,2694
   Term_p        min_term;76,2795
   unsigned long rewrite_steps;79,2985
   TermCellStoreCell term_store;80,3057
   struct gc_admin_cell *gc;gc81,3115
}TBCell, *TB_p;TB_p86,3437
#define TBCellAlloc(98,3774
#define TBCellFree(99,3832
#define TBNonVarTermNodes(105,3985
#define TBStorage(106,4057
#define TBCellIdent(110,4188
#define TermIsTrueTerm(113,4305
#define TBTermIsSubterm(116,4425
#define TBTermIsTypeTerm(119,4526
#define TBTermIsXTypeTerm(121,4618
#define TBTermIsGround(123,4742
#define TBPrintTermFull(141,5455
#define  TBTermParse(147,5750
#define  TBRawTermParse(148,5816
#define TBTermCellIsMarked(155,6085
static __inline__ bool TBTermEqual(183,7041

include/cte_termcellstore.h,457
#define CTE_TERMCELLSTORE33,914
#define TERM_STORE_HASH_SIZE 41,1192
#define TERM_STORE_HASH_MASK 42,1230
typedef struct termcellstore44,1285
   long   entries;46,1316
   long   arg_count;47,1335
   Term_p store[store48,1356
}TermCellStoreCell, *TermCellStore_p;TermCellStore_p49,1395
#define tcs_arity0hash(56,1658
#define tcs_arity1hash(57,1704
#define tcs_aritynhash(58,1788
#define TermCellHash(60,1873
#define TermCellStoreNodes(79,2577

include/cte_termcpos.h,93
#define CTE_TERMCPOS28,716
typedef long TermCPos;37,988
#define  TermCPosIsTopPos(44,1236

include/cte_termfunc.h,289
#define CTE_TERMFUNC26,640
#define TermStartToken 46,1227
#define TermIsStructSubterm(83,2831
#define TermStandardWeight(87,3003
#define TermIsGround(106,3653
#define TermHasUnboundVariables(107,3715
#define TermAddSymbolDistribution(113,3896
#define TermCollectVariables(129,4665

include/cte_termpos.h,346
#define CTE_TERMPOS26,608
typedef PStackCell TermPosCell;58,1663
typedef PStack_p   TermPos_p;59,1695
#define TERM_POS_ELEMENT_SIZE 63,1796
#define TermPosAlloc(70,2053
#define TermPosFree(71,2093
#define TermPosIsTopPos(73,2137
static __inline__ Term_p TermPosGetSubterm(99,3019
static __inline__ Term_p TermPosFirstLIPosition(134,3737

include/cte_termtrees.h,68
#define CTE_TERMTREES36,1071
#define TermTreeTraverseExit(62,2045

include/cte_termtypes.h,2883
#define CTE_TERMTYPES30,818
#define DEFAULT_VWEIGHT 44,1206
#define DEFAULT_FWEIGHT 45,1271
   TPIgnoreProps 51,1416
   TPRestricted 52,1481
   TPTopPos 53,1556
   TPIsGround 54,1621
   TPPredPos 55,1681
   TPIsRewritable 57,1813
   TPIsRRewritable 63,2235
   TPIsSOSRewritten 66,2431
   TPSpecialFlag 68,2561
   TPOpFlag 69,2642
   TPCheckFlag 70,2697
   TPOutputFlag 71,2752
   TPIsSpecialVar 73,2880
   TPIsRewritten 75,3024
   TPIsRRewritten 77,3153
   TPIsShared 81,3398
   TPGarbageFlag 82,3459
   TPIsFreeVar 83,3534
   TPPotentialParamod 84,3590
   TPPosPolarity 86,3714
   TPNegPolarity 88,3858
}TermProperties;TermProperties90,4002
   NoRewrite 96,4079
   RuleRewrite 97,4128
   FullRewrite 98,4180
}RewriteLevel;RewriteLevel99,4241
   SysDate          nf_date[nf_date103,4274
      struct termcell*   replace;108,4562
      struct clause_cell *demod;demod111,4772
   }rw_desc;rw_desc112,4840
}RewriteState;RewriteState113,4853
typedef struct termcell116,4870
   TermProperties   properties;118,4896
   FunCode          f_code;119,4958
   int              arity;120,5018
   struct termcell* *args;args123,5198
   struct termcell* binding;124,5269
   unsigned long    entry_no;129,5583
   long             weight;133,5832
   RewriteState     rw_data;135,5955
   struct termcell* lson;136,6006
   struct termcell* rson;137,6080
}TermCell, *Term_p, **TermRef;TermRef139,6201
typedef long DerefType,142,6234
typedef long DerefType, *DerefType_p;DerefType_p142,6234
#define DEREF_ALWAYS 144,6273
#define DEREF_NEVER 145,6297
#define DEREF_ONCE 146,6321
#define TERMCELL_MEM 153,6517
#define TERMARG_MEM 154,6541
#define TERMP_MEM 155,6564
#define TERMCELL_MEM 157,6593
#define TERMARG_MEM 158,6632
#define TERMP_MEM 159,6667
#define TERMCELL_DYN_MEM 162,6711
typedef bool (*TermEqualTestFun)TermEqualTestFun172,7076
#define TERMS_INITIAL_ARGS 174,7133
#define RewriteAdr(176,7164
#define TermIsVar(177,7216
#define TermIsConst(178,7255
#define TermCellSetProp(180,7313
#define TermCellDelProp(181,7373
#define TermCellAssignProp(182,7433
#define TermCellQueryProp(184,7557
#define TermCellIsAnyPropSet(187,7668
#define TermCellGiveProps(189,7739
#define TermCellFlipProp(190,7804
#define TermCellAlloc(192,7868
#define TermCellFree(193,7932
#define TermArgArrayAlloc(194,8000
#define TermArgArrayFree(195,8079
#define TermIsRewritten(197,8158
#define TermIsRRewritten(198,8229
#define TermIsTopRewritten(199,8302
#define TermIsShared(200,8383
#define TermNFDate(202,8455
#define TermRWReplaceField(206,8648
#define TermRWDemodField(207,8715
#define REWRITE_AT_SUBTERM 208,8780
#define TermRWReplace(211,8873
#define TermRWDemod(212,8954
static __inline__ Term_p TermDeref(258,10679
static __inline__ Term_p* TermArgListCopy(297,11418
static __inline__ Term_p TermTopCopy(342,12624

include/cte_termvars.h,540
#define CTE_TERMVARS26,638
typedef struct varbankcell44,1431
   FunCode   v_count;46,1460
   FunCode   max_var;47,1527
   StrTree_p ext_index;48,1590
   PDArray_p f_code_index;49,1649
}VarBankCell, *VarBank_p;VarBank_p50,1714
#define DEFAULT_VARBANK_SIZE 59,1967
#define FRESH_VAR_LIMIT 64,2183
#define VarBankCellAlloc(66,2219
#define VarBankCellFree(67,2292
#define VarBankGetVCount(81,2961
#define VarBankSetVCount(82,3010
#define VarBankResetVCount(83,3075
#define VarIsFreshVar(84,3130
#define VarFCodeIsFresh(85,3193

include/cte_varhash.h,756
#define CTE_VARHASH29,752
#define VAR_HASH_SIZE 44,1251
#define VAR_HASH_MASK 45,1286
typedef struct var_hash_entry_cell47,1329
   Term_p                     key;49,1366
   long                       val;50,1401
   struct var_hash_entry_cell *next;next51,1436
}VarHashEntryCell, *VarHashEntry_p;VarHashEntry_p52,1473
typedef struct var_hash_cell54,1510
   VarHashEntry_p hash[hash56,1541
}VarHashCell, *VarHash_p;VarHash_p57,1580
#define VarHashEntryCellAlloc(67,1834
#define VarHashEntryCellFree(69,1930
#define VarHashCellAlloc(75,2150
#define VarHashCellFree(77,2231
static __inline__ VarHashEntry_p VarHashEntryAlloc(112,3382
static __inline__ VarHash_p VarHashAlloc(137,3915
static __inline__ VarHashEntry_p VarHashFind(163,4432

include/cto_cmpcache.h,128
#define CTO_CMPCACHE27,663
typedef QuadTree_p CmpCache_p;43,1268
#define CmpCacheInit(49,1523
#define CmpCacheClear(50,1569

include/cto_kbo.h,23
#define CTO_KBO30,766

include/cto_kbodata.h,359
#define CTO_KBODATA30,861
typedef struct kbo_lin_cell41,1195
   int           wb;43,1225
   PDArray_p     vb;44,1246
   FunCode       max_var;45,1267
   int           pos_bal;46,1293
   int           neg_bal;47,1319
   CompareResult res;48,1348
}KBOLinCell, *KBOLin_p;KBOLin_p49,1370
#define KBOLinCellAlloc(57,1620
#define KBOLinCellFree(58,1693

include/cto_kbolin.h,26
#define CTO_KBOLIN29,792

include/cto_lpo.h,23
#define CTO_LPO28,660

include/cto_lpo_debug.h,29
#define CTO_LPO_DEBUG28,647

include/cto_ocb.h,1331
#define CTO_OCB27,620
   NoOrdering,41,932
   AUTO,42,947
   AUTOCASC,43,956
   AUTODEV,44,969
   AUTOSCHED0,45,981
   AUTOSCHED1,46,996
   AUTOSCHED2,47,1011
   AUTOSCHED3,48,1026
   AUTOSCHED4,49,1041
   OPTIMIZE_AX,50,1056
   KBO,51,1072
   KBO6,52,1080
   LPO,53,1089
   LPOCopy,54,1097
   LPO4,55,1109
   LPO4Copy,56,1118
   RPO,57,1131
   EMPTY58,1139
}TermOrdering;TermOrdering59,1148
typedef struct ocb_cell62,1165
   TermOrdering  type;64,1191
   Sig_p         sig;65,1214
   FunCode       min_constant;68,1340
   int           sig_size;69,1371
   long          *weights;weights70,1398
   long          var_weight;71,1452
   long          *prec_weights;prec_weights72,1505
   CompareResult *precedence;precedence74,1606
   bool           no_lit_cmp;77,1739
   PStack_p       statestack;80,1853
   KBOLin_p       kbobalance;81,1921
}OCBCell, *OCB_p;OCB_p82,1952
#define OCB_FUN_DEFAULT_WEIGHT 84,1971
#define W_DEFAULT_WEIGHT 89,2125
#define OCBCellAlloc(95,2376
#define OCBCellFree(96,2437
#define OCBPrecedenceGetState(111,2920
#define OCBFunWeightPos(126,3424
#define OCBFunComparePos(127,3481
#define OCBDesignatedMinConst(132,3616
#define OCBDesignatedMinTerm(135,3752
static __inline__ long OCBFunWeight(166,4856
static __inline__ CompareResult OCBFunCompare(190,5464

include/cto_orderings.h,29
#define CTO_ORDERINGS26,592

include/e_version.h,185
#define E_VERSION26,611
#define VERSION 42,1107
#define E_NICKNAME 44,1141
#define E_URL 46,1178
#define STS_MAIL 48,1218
#define STS_COPYRIGHT 49,1256
#define STS_SNAIL 50,1318

include/pcl_analysis.h,64
#define PCL_ANALYSIS27,637
#define PCLStepUpdateGRefs(48,1371

include/pcl_expressions.h,2135
#define PCL_EXPRESSIONS26,577
   PCLOpNoOp,42,1032
   PCLOpInitial,43,1046
   PCLOpIntroDef,44,1063
   PCLOpQuote,45,1081
   PCLOpParamod,46,1096
   PCLOpSimParamod,47,1113
   PCLOpEResolution,48,1133
   PCLOpCondense,49,1154
   PCLOpEFactoring,50,1172
   PCLOpSimplifyReflect,51,1192
   PCLOpContextSimplifyReflect,52,1217
   PCLOpACResolution,53,1249
   PCLOpRewrite,54,1271
   PCLOpURewrite,55,1288
   PCLOpClauseNormalize,56,1306
   PCLOpSplitClause,57,1331
   PCLOpSplitEquiv,58,1352
   PCLOpApplyDef,59,1372
   PCLOpFOFSplitConjunct,60,1390
   PCLOpFOFSimplify,61,1416
   PCLOpFOFDeMorgan,62,1437
   PCLOpFOFDistributeQuantors,63,1458
   PCLOpFOFDistributeDisjunction,64,1489
   PCLOpAnnotateQuestion,65,1523
   PCLOpEvalAnswers,66,1549
   PCLOpFOFVarRename,67,1570
   PCLOpFOFSkolemize,68,1592
   PCLOpFOFAssumeNegation,69,1614
   PCLOpMaxOp70,1641
}PCLOpcodes;PCLOpcodes71,1655
#define PCL_OP_NOOP_WEIGHT 74,1670
#define PCL_OP_INITIAL_WEIGHT 75,1710
#define PCL_OP_QUOTE_WEIGHT 76,1750
#define PCL_OP_PARAMOD_WEIGHT 77,1790
#define PCL_OP_SIM_PARAMOD_WEIGHT 78,1830
#define PCL_OP_ERESOLUTION_WEIGHT 79,1870
#define PCL_OP_CONDENSE_WEIGHT 80,1910
#define PCL_OP_EFACTORING_WEIGHT 81,1950
#define PCL_OP_SIMPLIFYREFLECT_WEIGHT 82,1990
#define PCL_OP_CONTEXTSIMPLIFYREFLECT_WEIGHT 83,2030
#define PCL_OP_ACRESOLUTION_WEIGHT 84,2077
#define PCL_OP_REWRITE_WEIGHT 85,2117
#define PCL_OP_UREWRITE_WEIGHT 86,2157
#define PCL_OP_CLAUSENORMALIZE_WEIGHT 87,2197
#define PCL_OP_SPLITCLAUSE_WEIGHT 88,2237
typedef struct pclexprcell91,2279
   PCLOpcodes op;93,2308
   long       arg_no;94,2326
   PDArray_p  args;95,2348
}PCLExprCell, *PCLExpr_p;PCLExpr_p96,2410
#define PCL_VAR_ARG 99,2438
#define PCLExprCellAlloc(105,2685
#define PCLExprCellFree(106,2758
#define PCLExprArg(108,2832
#define PCLExprArgInt(109,2899
#define PCLExprArgPos(110,2968
#define   PCLFullExprParse(120,3314
#define   PCLMiniExprParse(121,3370
#define   PCLFullExprPrint(124,3488
#define   PCLMiniExprPrint(125,3559
#define   PCLFullExprPrintTSTP(128,3691
#define   PCLMiniExprPrintTSTP(129,3770

include/pcl_idents.h,280
#define PCL_IDENTS26,583
#define NO_PCL_ID_ELEMENT 37,938
typedef PDArrayCell PCLIdCell;39,968
typedef PDArray_p   PCLId_p;40,999
#define PCLIdCellAlloc(46,1252
#define PCLIdCellFree(47,1319
#define PCLIdAlloc(49,1390
#define PCLIdFree(50,1436
#define PCLIdPrint(54,1581

include/pcl_lemmas.h,1077
#define PCL_LEMMAS27,583
typedef struct lemma_param_cell64,1557
   long   tree_base_weight;66,1591
   double act_pm_w;67,1619
   double o_gen_w;68,1639
   double act_simpl_w;69,1658
   double pas_simpl_w;70,1681
   double proof_tree_w;71,1704
   double proof_dag_w;72,1728
   long   size_base_weight;73,1751
   double horn_bonus;74,1779
}LemmaParamCell, *LemmaParam_p;LemmaParam_p75,1801
#define LEMMA_TREE_BASE_W 77,1834
#define LEMMA_ACT_PM_W 78,1863
#define LEMMA_O_GEN_W 79,1894
#define LEMMA_ACT_SIMPL_W 80,1925
#define LEMMA_PAS_SIMPL_W 81,1956
#define LEMMA_PROOF_TREE_W 82,1987
#define LEMMA_PROOF_DAG_W 83,2018
#define LEMMA_SIZE_BASE_W 85,2127
#define LEMMA_HORN_BONUS_W 86,2156
typedef long InferenceWeightType[InferenceWeightType88,2188
typedef InferenceWeightType *InferenceWeight_p;InferenceWeight_p89,2234
#define LemmaParamCellAlloc(98,2509
#define LemmaParamCellFree(99,2591
#define LemmaParamFree(101,2706
#define InferenceWeightCellAlloc(103,2761
#define InferenceWeightCellFree(105,2864
#define InferenceWeightsFree(108,2999

include/pcl_miniclauses.h,327
#define PCL_MINICLAUSES28,755
typedef struct mini_clause_cell40,1154
   short            literal_no;43,1226
   short            *sign;sign44,1258
   Term_p           *lit_terms;lit_terms45,1304
}MiniClauseCell, *MiniClause_p;MiniClause_p46,1375
#define MiniClauseCellAlloc(55,1634
#define MiniClauseCellFree(57,1725

include/pcl_miniprotocol.h,285
#define PCL_MINIPROTOCOL26,593
typedef struct pclminiprotcell34,870
   TB_p      terms;36,903
   long      max_ident;37,923
   PDArray_p steps;38,947
}PCLMiniProtCell, *PCLMiniProt_p;PCLMiniProt_p39,995
#define PCLMiniProtCellAlloc(46,1254
#define PCLMiniProtCellFree(47,1339

include/pcl_ministeps.h,453
#define PCL_MINISTEPS26,600
typedef struct pclministepcell36,928
   TB_p             bank;38,961
   unsigned long id;39,987
      MiniClause_p  clause;42,1022
      TFormula_p    formula;43,1050
   }logic;logic44,1079
   PCLStepProperties properties;45,1090
   PCLExpr_p just;46,1123
   char*     extra;47,1142
}PCLMiniStepCell, *PCLMiniStep_p;PCLMiniStep_p48,1162
#define PCLMiniStepCellAlloc(57,1423
#define PCLMiniStepCellFree(58,1508

include/pcl_positions.h,295
#define PCL_POSITIONS26,564
typedef struct pcl2poscell39,1046
   long      literal;41,1075
   EqnSide   side;42,1097
   long      termposlen;43,1116
   PDArray_p termpos;44,1188
}PCL2PosCell, *PCL2Pos_p;PCL2Pos_p45,1252
#define PCL2PosCellAlloc(53,1504
#define PCL2PosCellFree(54,1577

include/pcl_proofcheck.h,396
#define PCL_PROOFCHECK27,614
   CheckFail,38,930
   CheckOk,39,944
   CheckByAssumption,40,956
   CheckNotImplemented41,978
}PCLCheckType;PCLCheckType42,1001
   NoProver,46,1032
   EProver,47,1045
   Spass,48,1057
   Setheo,49,1067
   Otter50,1078
}ProverType;ProverType51,1087
#define E_EXEC_DEFAULT 58,1325
#define OTTER_EXEC_DEFAULT 59,1362
#define SPASS_EXEC_DEFAULT 60,1397

include/pcl_propanalysis.h,806
#define PCL_PROPANALYIS27,616
typedef struct pcl_propdata_cell37,924
   long      fof_formulae;39,959
   long      pos_clauses;40,986
   long      neg_clauses;41,1012
   long      mix_clauses;42,1038
   long      pos_clause_literals;43,1064
   long      neg_clause_literals;44,1098
   long      mix_clause_literals;45,1132
   long      pos_literals;46,1166
   long      neg_literals;47,1193
   long      const_count;48,1220
   long      func_count;49,1246
   long      pred_count;50,1271
   long      var_count;51,1296
   PCLStep_p longest_clause;52,1334
   PCLStep_p max_symbol_clause;53,1363
   PCLStep_p max_standard_weight_clause;54,1395
   PCLStep_p max_depth_clause;55,1436
}PCLPropDataCell, *PCLPropData_p;PCLPropData_p56,1467
typedef int (*PCLCmpFunType)PCLCmpFunType64,1727

include/pcl_protocol.h,497
#define PCL_PROTOCOL26,554
typedef struct pclprotcell34,823
   TB_p     terms;36,852
   long     number;37,871
   PTree_p  steps;38,891
   PStack_p in_order;39,941
   bool     is_ordered;40,1005
}PCLProtCell, *PCLProt_p;PCLProt_p41,1064
#define PCLProtCellAlloc(48,1315
#define PCLProtCellFree(49,1388
#define PCLProtInsertStep(54,1533
#define   PCLProtStepNo(63,1870
#define   PCLProtPrint(71,2171
#define   PCLStepCollectPreconds(82,2561
#define PCLProtPrintProofClauses(96,3256

include/pcl_steps.h,2492
#define PCL_STEPS26,544
#define PCL_PROOF_DIST_INFINITY 34,816
#define PCL_PROOF_DIST_DEFAULT 35,874
#define PCL_PROOF_DIST_UNKNOWN 36,938
   PCLNoProp 41,1014
   PCLIsLemma 42,1041
   PCLIsInitial 43,1068
   PCLIsFinal 44,1095
   PCLIsMarked 45,1122
   PCLIsProofStep 46,1149
   PCLIsExample 47,1176
   PCLIsFOFStep 48,1231
   PCLIsShellStep 49,1287
   PCLType1 50,1315
   PCLType1          = CPType1,50,1315
   PCLType2 51,1357
   PCLType2          = CPType2,51,1357
   PCLType3 52,1390
   PCLType3          = CPType3,52,1390
   PCLTypeMask 53,1422
   PCLTypeMask       = CPTypeMask,53,1422
   PCLTypeUnknown 54,1457
   PCLTypeAxiom 55,1526
   PCLTypeAxiom      = CPTypeAxiom,55,1526
   PCLTypeHypothesis 56,1590
   PCLTypeHypothesis = CPTypeHypothesis,56,1590
   PCLTypeConjecture 57,1659
   PCLTypeConjecture = CPTypeConjecture,57,1659
   PCLTypeNegConjecture 59,1793
   PCLTypeNegConjecture = CPTypeNegConjecture,59,1793
   PCLTypeQuestion 60,1871
   PCLTypeQuestion      = CPTypeQuestion,60,1871
}PCLStepProperties;PCLStepProperties62,1936
typedef struct pclstepcell65,1958
   TB_p              bank;67,1987
   PCLId_p           id;68,2014
      Clause_p          clause;71,2053
      TFormula_p        formula;72,2085
   }logic;logic73,2118
   PCLExpr_p         just;74,2129
   char*             extra;75,2156
   PCLStepProperties properties;76,2184
   long              proof_dag_size;78,2279
   long              proof_tree_size;79,2316
   long              active_pm_refs;80,2354
   long              other_generating_refs;81,2391
   long              active_simpl_refs;82,2435
   long              passive_simpl_refs;83,2475
   long              pure_quote_refs;84,2516
   float             lemma_quality;85,2554
   long              contrib_simpl_refs;87,2658
   long              contrib_gen_refs;90,2852
   long              useless_simpl_refs;91,2927
   long              useless_gen_refs;94,3121
   long              proof_distance;95,3197
}PCLStepCell, *PCLStep_p;PCLStep_p96,3234
#define PCLNoWeight 98,3261
bool SupportShellPCL;105,3509
#define PCLStepCellAlloc(107,3532
#define PCLStepCellFree(108,3605
#define PCLStepSetProp(110,3680
#define PCLStepDelProp(111,3743
#define PCLStepGiveProps(112,3806
#define PCLStepQueryProp(113,3873
#define PCLStepIsAnyPropSet(114,3940
#define PCLStepIsFOF(116,4014
#define PCLStepIsShell(117,4080
#define PCLStepIsClausal(118,4150
#define   PCLStepPrint(126,4482

HEURISTICS/che_auto_cases.c,0

ANALYSIS/can_infstate.c,0
